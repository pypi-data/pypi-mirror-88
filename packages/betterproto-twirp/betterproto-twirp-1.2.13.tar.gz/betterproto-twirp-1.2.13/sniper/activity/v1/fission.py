# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: activity/v1/fission.proto
# plugin: python-betterproto
import logging
from typing import List

import allure
from dataclasses import dataclass

import betterproto


@dataclass
class GetTokenFissionInfoReq(betterproto.Message):
    act_id: int = betterproto.int32_field(1)


@dataclass
class GetTokenFissionInfoResp(betterproto.Message):
    code: int = betterproto.int32_field(1)
    msg: str = betterproto.string_field(2)
    data: "GetTokenFissionInfoData" = betterproto.message_field(3)


@dataclass
class GetTokenFissionInfoData(betterproto.Message):
    my_info: "TokenFissionUserInfo" = betterproto.message_field(1)
    invited_info: List["TokenFissionUserInfo"] = betterproto.message_field(2)


@dataclass
class TokenFissionUserInfo(betterproto.Message):
    uid: int = betterproto.int64_field(1)
    name: str = betterproto.string_field(2)
    face: str = betterproto.string_field(3)


class FissionStub(betterproto.ServiceStub):
    @allure.step("""获取用户今日裂变活动信息""")
    def get_token_fission_info(
        self, request: GetTokenFissionInfoReq
    ) -> GetTokenFissionInfoResp:
        """获取用户今日裂变活动信息"""
        logging.getLogger(__name__).info(
            "start call "
            + "[get_token_fission_info]"
            + " api"
            + "=>"
            + """获取用户今日裂变活动信息"""
        )
        response = GetTokenFissionInfoResp()
        self._do_twirp_rpc(
            "/activity.v1.Fission/GetTokenFissionInfo", request, response
        )
        logging.getLogger(__name__).info(
            "call " + "[get_token_fission_info]" + " api success!"
        )
        return response
