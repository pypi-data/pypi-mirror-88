# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: manage/v0/main.proto
# plugin: python-betterproto
import logging
from typing import List

import allure
from dataclasses import dataclass

import betterproto


@dataclass
class MainDataWithID(betterproto.Message):
    id: int = betterproto.int32_field(1)


@dataclass
class MainDefaultResponse(betterproto.Message):
    code: int = betterproto.int32_field(1)
    msg: str = betterproto.string_field(2)
    data: "MainEmptyReq" = betterproto.message_field(3)


@dataclass
class MainEmptyReq(betterproto.Message):
    pass


@dataclass
class AddVideoReq(betterproto.Message):
    id: int = betterproto.int32_field(1)
    title: str = betterproto.string_field(2)
    cover: str = betterproto.string_field(3)
    upos_url: str = betterproto.string_field(4)
    # 视频时长多少秒
    duration: int = betterproto.int32_field(5)
    # 修改人,列表使用
    cuser: str = betterproto.string_field(6)
    # 最后修改时间,带时区信息的时间格式,列表使用
    mtime: str = betterproto.string_field(7)


@dataclass
class AddVideoResp(betterproto.Message):
    code: int = betterproto.int32_field(1)
    msg: str = betterproto.string_field(2)
    data: "MainDataWithID" = betterproto.message_field(3)


@dataclass
class ListVideosResp(betterproto.Message):
    code: int = betterproto.int32_field(1)
    msg: str = betterproto.string_field(2)
    data: "ListVideos" = betterproto.message_field(3)


@dataclass
class ListVideos(betterproto.Message):
    videos: List["AddVideoReq"] = betterproto.message_field(1)


class MainStub(betterproto.ServiceStub):
    """Main 跟主站相关的后台业务"""

    @allure.step("""添加视频""")
    def add_video(self, request: AddVideoReq) -> AddVideoResp:
        """添加视频"""
        logging.getLogger(__name__).info(
            "start call " + "[add_video]" + " api" + "=>" + """添加视频"""
        )
        response = AddVideoResp()
        self._do_twirp_rpc("/manage.v0.Main/AddVideo", request, response)
        logging.getLogger(__name__).info("call " + "[add_video]" + " api success!")
        return response

    @allure.step("""视频列表""")
    def list_videos(self, request: MainEmptyReq) -> ListVideosResp:
        """视频列表"""
        logging.getLogger(__name__).info(
            "start call " + "[list_videos]" + " api" + "=>" + """视频列表"""
        )
        response = ListVideosResp()
        self._do_twirp_rpc("/manage.v0.Main/ListVideos", request, response)
        logging.getLogger(__name__).info("call " + "[list_videos]" + " api success!")
        return response

    @allure.step("""删除视频""")
    def del_video(self, request: MainDataWithID) -> MainDefaultResponse:
        """删除视频"""
        logging.getLogger(__name__).info(
            "start call " + "[del_video]" + " api" + "=>" + """删除视频"""
        )
        response = MainDefaultResponse()
        self._do_twirp_rpc("/manage.v0.Main/DelVideo", request, response)
        logging.getLogger(__name__).info("call " + "[del_video]" + " api success!")
        return response
