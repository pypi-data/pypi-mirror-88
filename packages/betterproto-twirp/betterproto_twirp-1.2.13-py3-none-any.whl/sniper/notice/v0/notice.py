# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: notice/v0/notice.proto
# plugin: python-betterproto
import logging
from typing import List

import allure
from dataclasses import dataclass

import betterproto


@dataclass
class AppMessageInfo(betterproto.Message):
    # 标题
    title: str = betterproto.string_field(1)
    # 内容
    content: str = betterproto.string_field(2)
    # 图片
    img: str = betterproto.string_field(3)
    # 跳转链接
    jump_url: str = betterproto.string_field(4)
    # uid
    uid: int = betterproto.int64_field(5)
    # 过期时间，不设为空 格式： "2020-09-25T18:10:00+08:00"(RFC3339)
    expire_time: str = betterproto.string_field(6)


@dataclass
class AppMessageData(betterproto.Message):
    list: List["AppMessageInfo"] = betterproto.message_field(1)


@dataclass
class EmptyResp(betterproto.Message):
    pass


class NoticeStub(betterproto.ServiceStub):
    """内部生产通知服务"""

    @allure.step("""生成应用内部消息""")
    def multi_add_app_message(self, request: AppMessageData) -> EmptyResp:
        """生成应用内部消息"""
        logging.getLogger(__name__).info(
            "start call " + "[multi_add_app_message]" + " api" + "=>" + """生成应用内部消息"""
        )
        response = EmptyResp()
        self._do_twirp_rpc("/notice.v0.Notice/MultiAddAppMessage", request, response)
        logging.getLogger(__name__).info(
            "call " + "[multi_add_app_message]" + " api success!"
        )
        return response
