# vim: set et ai ts=4 sw=4:
# -------------------------------------------------------------------------
# Copyright (c) 2011, Peter Sommerlad and IFS Institute for Software
# at HSR Rapperswil, Switzerland
# All rights reserved.
#
# This library/application is free software; you can redistribute and/or
# modify it under the terms of the license that is included with this
# library/application in the file license.txt.
# -------------------------------------------------------------------------

import pkg_resources

pkg_resources.require(["SConsider"])
from SomeUtils import listFiles

Import('*')

_sconsider_dist = pkg_resources.get_distribution("SConsider").parsed_version
if _sconsider_dist < pkg_resources.parse_version("0.3.10"):
    from SConsider.PackageRegistry import createFulltargetname
else:
    from SConsider.PackageRegistry import PackageRegistry
    createFulltargetname = PackageRegistry.createFulltargetname

if _sconsider_dist < pkg_resources.parse_version("0.5"):
    from SConsider import createTargets
    buildSettings = {
        'include': {
            'public': {
                'includeSubdir': 'cute_lib',
            },
        },
        'tests': {
            'targetType': 'ProgramTest',
            'linkDependencies': [
                createFulltargetname(packagename, 'include'),
                createFulltargetname('boost', 'include'),
            ],
            'includeSubdir': 'cute_tests',
            'sourceFiles': listFiles(['cute_tests/*.cpp']),
        },
    }

    createTargets(packagename, buildSettings)
elif _sconsider_dist >= pkg_resources.parse_version("0.5"):
    from TargetHelpers import createAlias, createPackageProgram, createPackageProgramScript, createPackageTestTarget
    from TargetMaker import EnvBuilder

    def setUp(target, source, env):
        pass

    def tearDown(target, source, env):
        pass

    includeTarget = EnvBuilder(export=[EnvBuilder().include(Dir('cute_lib'))]).build().RegisterPackageTarget(
        packagename=packagename, targetname='include')

    bin_target = createPackageProgram(packagename,
                                      'cute_tests',
                                      listFiles(['cute_tests/*.cpp']),
                                      installdirprefix='tests',
                                      depend=[includeTarget, 'boost.include'])
    bins = EnvBuilder().depend(bin_target).build().RegisterPackageTarget(packagename=packagename,
                                                                         targetname='bins')

    scriptTarget = createPackageProgramScript(packagename, 'cute_tests', bin_target)
    scripts = EnvBuilder().depend(scriptTarget).build().RegisterPackageTarget(packagename=packagename,
                                                                              targetname='scripts')

    testTarget = createPackageTestTarget(
        packagename,
        'cute_tests',
        scriptTarget,
        settings={
            'setUp': setUp,
            'tearDown': tearDown,
            #              'runParams': '',
        })

    createAlias('tests', testTarget)

    EnvBuilder().depend(includeTarget, bins, scripts).build().RegisterPackageTarget(packagename=packagename,
                                                                                    targetname=packagename)
