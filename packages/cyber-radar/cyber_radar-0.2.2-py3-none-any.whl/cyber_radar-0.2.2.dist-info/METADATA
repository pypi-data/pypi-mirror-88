Metadata-Version: 2.1
Name: cyber-radar
Version: 0.2.2
Summary: A framework to support a Red-team Analysis, Documentation, and Automation Revolution!
Home-page: https://github.com/sevaarcen/RADAR
Author: Cole Daubenspeck
Author-email: coleipod@gmail.com
License: GPLv3
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 4 - Beta
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: toml (==0.10.2)
Requires-Dist: yara-python (==4.0.2)
Requires-Dist: netaddr (==0.8.0)
Requires-Dist: certifi (==2019.9.11)
Requires-Dist: chardet (==3.0.4)
Requires-Dist: Click (==7.0)
Requires-Dist: Flask (==1.1.1)
Requires-Dist: Flask-Script (==2.0.6)
Requires-Dist: idna (==2.8)
Requires-Dist: itsdangerous (==1.1.0)
Requires-Dist: Jinja2 (==2.10.1)
Requires-Dist: MarkupSafe (==1.1.1)
Requires-Dist: pymongo (==3.9.0)
Requires-Dist: python-dateutil (==2.8.0)
Requires-Dist: requests (==2.22.0)
Requires-Dist: six (==1.12.0)
Requires-Dist: urllib3 (==1.25.6)
Requires-Dist: Werkzeug (==0.16.0)

# RADAR
Red-team Analysis, Documentation, and Automation Revolution

# Features
* Modular plugin support
* Integrates with your existing workflow

# Requirements
* Python 3.6 or later
    * packages in requirements.txt
* Following system packages
    * yara
    * samba-common (for rpcclient)
* A MongoDB server connected to the RADAR Control Server

# Self-signed certificate help
I used [this guide](https://medium.com/@tbusser/creating-a-browser-trusted-self-signed-ssl-certificate-2709ce43fd15)
to make my self-signed certificates for testing.
If you're using an IP address instead of a domain name, change the V3 ext file
as shown in [this guide](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/sssd-ldap-domain-ip)

# Data Format Specifications
### Target information
Target_host is the primary key. Other fields are optional.
"services" must contain JSON formatted as shown below to work with the Playbooks.
```json
{
  "target_host": "scanme.nmap.org",
  "details": {
    "value": "low",
    "last_scan": "1572142040.0714252",
    "latency": 0.10
  },
  "services": [
    {
        "port": "22",
        "protocol": "tcp",
        "service": "ssh",
        "state": "open"
    },
    {
        "port": "80",
        "protocol": "tcp",
        "service": "http",
        "state": "open"
    }
  ]
}
```


