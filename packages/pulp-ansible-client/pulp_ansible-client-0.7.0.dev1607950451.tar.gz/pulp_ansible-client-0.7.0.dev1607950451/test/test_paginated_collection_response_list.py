# coding: utf-8

"""
    Pulp 3 API

    Fetch, Upload, Organize, and Distribute Software Packages  # noqa: E501

    The version of the OpenAPI document: v3
    Contact: pulp-list@redhat.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pulpcore.client.pulp_ansible
from pulpcore.client.pulp_ansible.models.paginated_collection_response_list import PaginatedCollectionResponseList  # noqa: E501
from pulpcore.client.pulp_ansible.rest import ApiException

class TestPaginatedCollectionResponseList(unittest.TestCase):
    """PaginatedCollectionResponseList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PaginatedCollectionResponseList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pulpcore.client.pulp_ansible.models.paginated_collection_response_list.PaginatedCollectionResponseList()  # noqa: E501
        if include_optional :
            return PaginatedCollectionResponseList(
                meta = null, 
                links = null, 
                data = [
                    pulpcore.client.pulp_ansible.models.collection_response.CollectionResponse(
                        href = '0', 
                        namespace = '0', 
                        name = '0', 
                        deprecated = True, 
                        versions_url = '0', 
                        highest_version = pulpcore.client.pulp_ansible.models.highest_version.highest_version(), 
                        created_at = '0', 
                        updated_at = '0', )
                    ]
            )
        else :
            return PaginatedCollectionResponseList(
        )

    def testPaginatedCollectionResponseList(self):
        """Test PaginatedCollectionResponseList"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
