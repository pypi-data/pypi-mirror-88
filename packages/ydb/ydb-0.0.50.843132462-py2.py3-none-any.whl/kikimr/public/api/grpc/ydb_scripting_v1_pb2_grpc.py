# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from kikimr.public.api.protos import ydb_scripting_pb2 as kikimr_dot_public_dot_api_dot_protos_dot_ydb__scripting__pb2


class ScriptingServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ExecuteYql = channel.unary_unary(
        '/Ydb.Scripting.V1.ScriptingService/ExecuteYql',
        request_serializer=kikimr_dot_public_dot_api_dot_protos_dot_ydb__scripting__pb2.ExecuteYqlRequest.SerializeToString,
        response_deserializer=kikimr_dot_public_dot_api_dot_protos_dot_ydb__scripting__pb2.ExecuteYqlResponse.FromString,
        )


class ScriptingServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ExecuteYql(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ScriptingServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ExecuteYql': grpc.unary_unary_rpc_method_handler(
          servicer.ExecuteYql,
          request_deserializer=kikimr_dot_public_dot_api_dot_protos_dot_ydb__scripting__pb2.ExecuteYqlRequest.FromString,
          response_serializer=kikimr_dot_public_dot_api_dot_protos_dot_ydb__scripting__pb2.ExecuteYqlResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Ydb.Scripting.V1.ScriptingService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
