# =====================================
# Variant calling - Preprocess BAM file
# =====================================
---

- slug: vc-realign-recalibrate
  name: Indel Realignment and Base Recalibration
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: broadinstitute/genomes-in-the-cloud:2.3.1-1504795437
    resources:
      memory: 32768
      cores: 10
  data_name: "Preprocess BAM ({{ alignment|sample_name|default('?') }})"
  version: 2.0.1
  type: data:alignment:bam:vc
  category: Other
  flow_collection: sample
  persistence: CACHED
  description: |
    Preprocess BAM file and prepare for Variant Calling.
  input:
    - name: alignment
      label: Alignment file (BAM)
      type: data:alignment:bam
    - name: genome
      label: Genome
      type: data:seq:nucleotide
    - name: known_vars
      label: Known sites (dbSNP)
      type: list:data:variants:vcf
    - name: known_indels
      label: Known indels
      type: list:data:variants:vcf
  output:
    - name: bam
      label: Alignment file
      type: basic:file
    - name: bai
      label: Index BAI
      type: basic:file
    - name: stats
      label: Stats
      type: basic:file
    - name: species
      label: Species
      type: basic:string
    - name: build
      label: Build
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      SAMPLE_SLUG={{ alignment|sample_slug }}

      ln -s {{ alignment.bam.file }} alignment.RG.bam
      ls -s {{ alignment.bai.file }} alignment.RG.bam.bai

      echo "Create target interval for Indelrealigner"
      java -jar /usr/gitc/GATK36.jar \
        -T RealignerTargetCreator \
          -R {{ genome.fasta.file }} \
          -I alignment.RG.bam \
          {% for indelx in known_indels %} -known {{ indelx.vcf.file }} {% endfor %} \
          -nt {{ requirements.resources.cores }} \
          -o forIndelRealigner.intervals
      echo "{\"proc.progress\":0.40,\"proc.rc\":$?}"

      echo "GATK Indel Realignment"
      java -jar /usr/gitc/GATK36.jar \
        -T IndelRealigner \
          -R {{ genome.fasta.file }} \
          -I alignment.RG.bam \
          {% for indelx in known_indels %} -known {{ indelx.vcf.file }} {% endfor %} \
          --targetIntervals forIndelRealigner.intervals \
          -o realigned.bam
      echo "{\"proc.progress\":0.60,\"proc.rc\":$?}"

      echo "GATK Base Recalibration"
      java -jar /usr/gitc/GATK36.jar \
        -T BaseRecalibrator \
          -R {{ genome.fasta.file }} \
          -I realigned.bam \
          {% for known_var in known_indels + known_vars %} --knownSites {{ known_var.vcf.file }} {% endfor %} \
          -nct {{ requirements.resources.cores }} \
          -o recal_data.table
      echo "{\"proc.progress\":0.80,\"proc.rc\":$?}"

      echo "generate Recalibrated bam"
      java -jar /usr/gitc/GATK36.jar \
        -T PrintReads \
          -R {{ genome.fasta.file }} \
          -I realigned.bam \
          -BQSR recal_data.table \
          -o "${SAMPLE_SLUG}.realigned.bqsrCal.bam"
      echo "{\"proc.rc\":$?}"

      echo "Calculating statistics"
      samtools flagstat "${SAMPLE_SLUG}.realigned.bqsrCal.bam" > "${SAMPLE_SLUG}_report.txt"
      echo "{\"proc.progress\":0.95,\"proc.rc\":$?}"

      echo "{\"stats\":{\"file\":\"${SAMPLE_SLUG}_report.txt\"}}"
      echo "{\"bam\":{\"file\":\"${SAMPLE_SLUG}.realigned.bqsrCal.bam\"}}"
      echo "{\"bai\":{\"file\":\"${SAMPLE_SLUG}.realigned.bqsrCal.bai\"}}"

      SPECIES={{ alignment.species }}
      BUILD={{ alignment.build }}
      echo "{\"species\":\"${SPECIES}\"}"
      echo "{\"build\":\"${BUILD}\"}"
