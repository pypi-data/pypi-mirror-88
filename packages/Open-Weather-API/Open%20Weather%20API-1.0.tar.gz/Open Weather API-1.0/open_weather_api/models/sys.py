# -*- coding: utf-8 -*-

"""
    open_weather_api

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Sys(object):

    """Implementation of the 'sys' model.

    This model contains the country, sunset and sunrise information.

    Attributes:
        mtype (int): This field contains the type of information
        id (int): This field contains the identifier
        message (float): This field contains the information message
        country (string): This field contains the country code
        sunrise (long|int): This field contains the information of sunrise in
            given city
        sunset (long|int): This field contains the information of sunset in
            given city

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "sunrise":'sunrise',
        "sunset":'sunset',
        "mtype":'type',
        "id":'id',
        "message":'message',
        "country":'country'
    }

    def __init__(self,
                 sunrise=None,
                 sunset=None,
                 mtype=None,
                 id=None,
                 message=None,
                 country=None):
        """Constructor for the Sys class"""

        # Initialize members of the class
        self.mtype = mtype
        self.id = id
        self.message = message
        self.country = country
        self.sunrise = sunrise
        self.sunset = sunset


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        sunrise = dictionary.get('sunrise')
        sunset = dictionary.get('sunset')
        mtype = dictionary.get('type')
        id = dictionary.get('id')
        message = dictionary.get('message')
        country = dictionary.get('country')

        # Return an object of this model
        return cls(sunrise,
                   sunset,
                   mtype,
                   id,
                   message,
                   country)


