{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectTags.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","routeTitleGen","routeName","orgSlug","withSentry","tmpl","PermissionAlert","access","hasAccess","type","size","t","ProjectTags","handleDelete","key","idx","a","params","projectId","orgId","api","requestPromise","method","tags","state","splice","setState","error","loading","isEmpty","length","Fragment","tct","link","href","map","enabled","canDelete","TagPanelItem","data-test-id","TagName","Actions","disabled","message","onConfirm","PanelItem"],"mappings":"2qBAQqBA,E,uIAKjB,MAAO,K,+BAIP,IAAMC,EAAQC,KAAKC,WACnB,OACE,YAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,WACjBC,KAAKE,uB,GATJC,KAHWL,E,6nBCcfM,E,qIAKK,MACgEJ,KAAKK,MAArEC,EADA,EACAA,KAAMP,EADN,EACMA,MAAOQ,EADb,EACaA,SAAUC,EADvB,EACuBA,OAAQC,EAD/B,EAC+BA,KAAMC,EADrC,EACqCA,cAAkBL,EADvD,mEAEP,OACE,kBAASA,EACP,YAACM,EAAD,KACE,YAACC,EAAD,KACGN,GAAQ,YAACO,EAAD,KAAOP,GACfP,GACC,YAACe,EAAD,CAAOL,KAAMA,EAAMM,OAAQL,GACzB,YAAC,IAAD,KAAcX,GACbQ,GAAY,YAACS,EAAD,KAAWT,KAI7BC,GAAU,YAACS,EAAD,CAAQR,KAAMA,GAAOD,IAGjCC,GAAQ,uBAAMA,Q,GAtBkBS,IAAMC,WAAzCf,E,yCAAAA,EACGgB,aAAe,CACpBV,eAAe,GA+BnB,IAAMC,EAAkB,YAAO,MAAP,8CAAH,2DAIfC,EAAe,YAAO,MAAP,2CAAH,mCAIZE,EAAQ,YAAO,MAAP,qCACV,SAAAO,GAAC,OACAA,EAAEN,QAAH,mDAFO,YAMC,SAAAM,GAAC,OACTA,EAAEZ,KAAF,UACOa,YAAM,GADb,YACmBA,YAAM,GADzB,YAC+BA,YAAM,GADrC,gBAEOA,YAAM,GAFb,YAEmBA,YAAM,GAFzB,YAE+BA,YAAM,GAFrC,QAPO,KAWLN,EAAW,YAAO,MAAP,uCAAH,UACH,SAAAK,GAAC,OAAIA,EAAEE,MAAMC,UADV,+BAGC,SAAAH,GAAC,OAAIA,EAAEE,MAAME,gBAHd,YAIDH,YAAM,KAJL,MAIeA,YAAM,GAJrB,KAORT,EAAO,YAAO,MAAP,mCAAH,gBACQS,YAAM,GADd,KAIJL,EAAS,YAAO,MAAP,sCACX,SAAAI,GAAC,OAAKA,EAAEZ,KAAF,sBAAwBa,YAAM,IAAO,OADnC,KAINI,EAAqB,YAAOtB,EAAP,iDAAH,8BAIPkB,YAAM,GAJC,KAOTI,O,kCCvFAC,IATf,SACEC,EACAC,GAEQ,IADRC,IACQ,yDACFC,EAAO,GAAH,OAAMH,EAAN,cAAqBC,GAC/B,OAAOC,EAAa,GAAH,OAAMC,EAAN,aAAwBA,I,qHCKrCC,EAAkB,SAAC,GAAD,QAAEC,cAAF,MAAW,CAAC,iBAAZ,EAAiC5B,EAAjC,yBACtB,YAAC,IAAD,CAAQ4B,OAAQA,IACb,qBAAEC,WAEC,YAAC,IAAD,KAAOC,KAAK,UAAU7B,KAAM,YAAC,KAAD,CAAa8B,KAAK,QAAa/B,GACxDgC,YACC,wGANNL,E,8BAkBSA,O,m2CCDTM,E,kLAkBJC,aAAe,SAACC,EAA8BC,GAA/B,qBAA+C,kCAAAC,EAAA,6DACrDC,EAAU,EAAKtC,MAAfsC,OACAC,EAAoBD,EAApBC,UAAWC,EAASF,EAATE,MAF0C,kBAKpD,EAAKC,IAAIC,eAAT,oBAAqCF,EAArC,YAA8CD,EAA9C,iBAAgEJ,EAAhE,KAAwE,CAC5EQ,OAAQ,WANgD,QASpDC,EAToD,IASzC,EAAKC,MAAMD,OACvBE,OAAOV,EAAK,GACjB,EAAKW,SAAS,CAACH,SAX2C,kDAa1D,EAAKG,SAAS,CAACC,OAAO,EAAMC,SAAS,IAbqB,2D,wDAhB5D,2EAEEL,KAAM,O,qCAI4C,MACzBjD,KAAKK,MAAMsC,OAA/BC,EAD6C,EAC7CA,UAAWC,EADkC,EAClCA,MAClB,MAAO,CAAC,CAAC,OAAD,oBAAsBA,EAAtB,YAA+BD,EAA/B,c,iCAGC,IACFA,EAAa5C,KAAKK,MAAMsC,OAAxBC,UACP,OAAOjB,YAAcU,YAAE,QAASO,GAAW,K,mCAoBhC,WACJK,EAAQjD,KAAKkD,MAAbD,KACDM,GAAWN,IAASA,EAAKO,OAE/B,OACE,YAAC,IAAMC,SAAP,KACE,YAAC,IAAD,CAAoB1D,MAAOsC,YAAE,UAC7B,YAAC,IAAD,MAEA,YAAC,IAAD,KACGqB,YAAI,wIAGH,CACEC,KACE,YAAC,IAAD,CAAcC,KAAK,oEAM3B,YAAC,IAAD,KACE,YAAC,IAAD,KAAcvB,YAAE,SAChB,YAAC,IAAD,KACGkB,EACC,YAAC,IAAD,KACGG,YAAI,kDAAmD,CACtDC,KACE,YAAC,IAAD,CAAcC,KAAK,oEAKzB,YAAC,IAAD,CAAQ3B,OAAQ,CAAC,mBACd,gBAAEC,EAAF,EAAEA,UAAF,OACCe,EAAKY,KAAI,WAAmBpB,GAAQ,IAAzBD,EAAyB,EAAzBA,IACHsB,EAD4B,EAApBC,WACe7B,EAC7B,OACE,YAAC8B,EAAD,CAAcxB,IAAKA,EAAKyB,eAAa,WACnC,YAACC,EAAD,KAAU1B,GACV,YAAC2B,EAAD,KACE,YAAC,IAAD,CACEC,SAAUN,EACV/D,MACEmC,EACIG,YAAE,+BACFA,YAAE,+CAGR,YAAC,IAAD,CACEtC,MAAOsC,YAAE,eACTgC,QAAShC,YAAE,6CACXiC,UAAW,EAAK/B,aAAaC,EAAKC,GAClC2B,UAAWN,GAEX,YAAC,IAAD,CACE1B,KAAK,SACL9B,KAAM,YAAC,IAAD,CAAY8B,KAAK,OACvB6B,eAAa,SACbG,UAAWN,qB,GA9FjBhE,KAgHXwC,YAEf,IAAM0B,EAAe,YAAOO,IAAP,0CAAH,wDAKZL,EAAU,YAAO,MAAP,qCAAH,kBAEA5C,YAAM,GAFN,KAKP6C,EAAU,YAAO,MAAP,qCAAH,2CAGA7C,YAAM,GAHN","file":"ProjectTags.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  action?: React.ReactNode;\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, subtitle, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 ${space(3)};\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default SettingsPageHeader;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nPermissionAlert.propTypes = {\n  access: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default PermissionAlert;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Access from 'app/components/acl/access';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport LinkWithConfirmation from 'app/components/links/linkWithConfirmation';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport Tooltip from 'app/components/tooltip';\nimport {IconDelete} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {TagWithTopValues} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\n\ntype Props = RouteComponentProps<{projectId: string; orgId: string}, {}> &\n  AsyncView['props'];\n\ntype State = {\n  tags: Array<TagWithTopValues>;\n} & AsyncView['state'];\n\nclass ProjectTags extends AsyncView<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      tags: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {projectId, orgId} = this.props.params;\n    return [['tags', `/projects/${orgId}/${projectId}/tags/`]];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Tags'), projectId, false);\n  }\n\n  handleDelete = (key: TagWithTopValues['key'], idx: number) => async () => {\n    const {params} = this.props;\n    const {projectId, orgId} = params;\n\n    try {\n      await this.api.requestPromise(`/projects/${orgId}/${projectId}/tags/${key}/`, {\n        method: 'DELETE',\n      });\n\n      const tags = [...this.state.tags];\n      tags.splice(idx, 1);\n      this.setState({tags});\n    } catch (error) {\n      this.setState({error: true, loading: false});\n    }\n  };\n\n  renderBody() {\n    const {tags} = this.state;\n    const isEmpty = !tags || !tags.length;\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader title={t('Tags')} />\n        <PermissionAlert />\n\n        <TextBlock>\n          {tct(\n            `Each event in Sentry may be annotated with various tags (key and value pairs).\n                 Learn how to [link:add custom tags].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/enriching-error-data/additional-data/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <Panel>\n          <PanelHeader>{t('Tags')}</PanelHeader>\n          <PanelBody>\n            {isEmpty ? (\n              <EmptyMessage>\n                {tct('There are no tags, [link:learn how to add tags]', {\n                  link: (\n                    <ExternalLink href=\"https://docs.sentry.io/enriching-error-data/additional-data/\" />\n                  ),\n                })}\n              </EmptyMessage>\n            ) : (\n              <Access access={['project:write']}>\n                {({hasAccess}) =>\n                  tags.map(({key, canDelete}, idx) => {\n                    const enabled = canDelete && hasAccess;\n                    return (\n                      <TagPanelItem key={key} data-test-id=\"tag-row\">\n                        <TagName>{key}</TagName>\n                        <Actions>\n                          <Tooltip\n                            disabled={enabled}\n                            title={\n                              hasAccess\n                                ? t('This tag cannot be deleted.')\n                                : t('You do not have permission to remove tags.')\n                            }\n                          >\n                            <LinkWithConfirmation\n                              title={t('Remove tag?')}\n                              message={t('Are you sure you want to remove this tag?')}\n                              onConfirm={this.handleDelete(key, idx)}\n                              disabled={!enabled}\n                            >\n                              <Button\n                                size=\"xsmall\"\n                                icon={<IconDelete size=\"xs\" />}\n                                data-test-id=\"delete\"\n                                disabled={!enabled}\n                              />\n                            </LinkWithConfirmation>\n                          </Tooltip>\n                        </Actions>\n                      </TagPanelItem>\n                    );\n                  })\n                }\n              </Access>\n            )}\n          </PanelBody>\n        </Panel>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ProjectTags;\n\nconst TagPanelItem = styled(PanelItem)`\n  padding: 0;\n  align-items: center;\n`;\n\nconst TagName = styled('div')`\n  flex: 1;\n  padding: ${space(2)};\n`;\n\nconst Actions = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(2)};\n`;\n"],"sourceRoot":""}