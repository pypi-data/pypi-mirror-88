{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:////workspace/node_modules/lodash/groupBy.js","webpack:///./app/views/settings/account/accountSubscriptions.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","baseAssignValue","createAggregator","hasOwnProperty","Object","prototype","groupBy","result","value","key","call","push","module","exports","ENDPOINT","AccountSubscriptions","handleToggle","subscription","index","_e","subscribed","oldSubscriptions","state","subscriptions","setState","newSubscriptions","slice","subscribedDate","Date","toString","api","request","method","data","listId","success","addSuccessMessage","listName","error","addErrorMessage","subGroups","entries","sub","email","t","length","map","Fragment","Heading","alignItems","SubscriptionDetails","SubscriptionName","listDescription","Description","SubscribedDescription","tct","date","shortDate","moment","isActive","size","toggle","bind","href","PanelItem","fontSizeMedium","backgroundSecondary","subText","fontSizeExtraLarge","fontSizeSmall","gray300"],"mappings":"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","file":"AccountSubscriptions.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  action?: React.ReactNode;\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, subtitle, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 ${space(3)};\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default SettingsPageHeader;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport groupBy from 'lodash/groupBy';\nimport moment from 'moment';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport DateTime from 'app/components/dateTime';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport Switch from 'app/components/switch';\nimport {IconToggle} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nconst ENDPOINT = '/users/me/subscriptions/';\n\ntype Subscription = {\n  email: string;\n  listDescription: string;\n  listId: number;\n  listName: string;\n  subscribed: boolean;\n  subscribedDate: string | null;\n  unsubscribedDate: string | null;\n};\n\ntype State = AsyncView['state'] & {\n  subscriptions: Subscription[];\n};\n\nclass AccountSubscriptions extends AsyncView<AsyncView['props'], State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['subscriptions', ENDPOINT]];\n  }\n\n  getTitle() {\n    return 'Subscriptions';\n  }\n\n  handleToggle = (subscription: Subscription, index: number, _e: React.MouseEvent) => {\n    const subscribed = !subscription.subscribed;\n    const oldSubscriptions = this.state.subscriptions;\n\n    this.setState(state => {\n      const newSubscriptions = state.subscriptions.slice();\n      newSubscriptions[index] = {\n        ...subscription,\n        subscribed,\n        subscribedDate: new Date().toString(),\n      };\n      return {\n        ...state,\n        subscriptions: newSubscriptions,\n      };\n    });\n\n    this.api.request(ENDPOINT, {\n      method: 'PUT',\n      data: {\n        listId: subscription.listId,\n        subscribed,\n      },\n      success: () => {\n        addSuccessMessage(\n          `${subscribed ? 'Subscribed' : 'Unsubscribed'} to ${subscription.listName}`\n        );\n      },\n      error: () => {\n        addErrorMessage(\n          `Unable to ${subscribed ? '' : 'un'}subscribe to ${subscription.listName}`\n        );\n        this.setState({subscriptions: oldSubscriptions});\n      },\n    });\n  };\n\n  renderBody() {\n    const subGroups = Object.entries(groupBy(this.state.subscriptions, sub => sub.email));\n\n    return (\n      <div>\n        <SettingsPageHeader title=\"Subscriptions\" />\n        <TextBlock>\n          {t(`Sentry is committed to respecting your inbox. Our goal is to\n              provide useful content and resources that make fixing errors less\n              painful. Enjoyable even.`)}\n        </TextBlock>\n\n        <TextBlock>\n          {t(`As part of our compliance with the EU’s General Data Protection\n              Regulation (GDPR), starting on 25 May 2018, we’ll only email you\n              according to the marketing categories to which you’ve explicitly\n              opted-in.`)}\n        </TextBlock>\n\n        <Panel>\n          {this.state.subscriptions.length ? (\n            <div>\n              <PanelHeader>{t('Subscription')}</PanelHeader>\n              <PanelBody>\n                {subGroups.map(([email, subscriptions]) => (\n                  <React.Fragment key={email}>\n                    {subGroups.length > 1 && (\n                      <Heading>\n                        <IconToggle /> {t('Subscriptions for %s', email)}\n                      </Heading>\n                    )}\n\n                    {subscriptions.map((subscription, index) => (\n                      <PanelItem p={2} alignItems=\"center\" key={subscription.listId}>\n                        <SubscriptionDetails>\n                          <SubscriptionName>{subscription.listName}</SubscriptionName>\n                          {subscription.listDescription && (\n                            <Description>{subscription.listDescription}</Description>\n                          )}\n                          {subscription.subscribed ? (\n                            <SubscribedDescription>\n                              <div>\n                                {tct('[email] on [date]', {\n                                  email: subscription.email,\n                                  date: (\n                                    <DateTime\n                                      shortDate\n                                      date={moment(subscription.subscribedDate!)}\n                                    />\n                                  ),\n                                })}\n                              </div>\n                            </SubscribedDescription>\n                          ) : (\n                            <SubscribedDescription>\n                              {t('Not currently subscribed')}\n                            </SubscribedDescription>\n                          )}\n                        </SubscriptionDetails>\n                        <div>\n                          <Switch\n                            isActive={subscription.subscribed}\n                            size=\"lg\"\n                            toggle={this.handleToggle.bind(this, subscription, index)}\n                          />\n                        </div>\n                      </PanelItem>\n                    ))}\n                  </React.Fragment>\n                ))}\n              </PanelBody>\n            </div>\n          ) : (\n            <EmptyMessage>{t(\"There's no subscription backend present.\")}</EmptyMessage>\n          )}\n        </Panel>\n        <TextBlock>\n          {t(`We’re applying GDPR consent and privacy policies to all Sentry\n              contacts, regardless of location. You’ll be able to manage your\n              subscriptions here and from an Unsubscribe link in the footer of\n              all marketing emails.`)}\n        </TextBlock>\n\n        <TextBlock>\n          {tct(\n            'Please contact [email:learn@sentry.io] with any questions or suggestions.',\n            {email: <a href=\"mailto:learn@sentry.io\" />}\n          )}\n        </TextBlock>\n      </div>\n    );\n  }\n}\n\nconst Heading = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-gap: ${space(1)};\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeMedium};\n  padding: ${space(1.5)} ${space(2)};\n  background: ${p => p.theme.backgroundSecondary};\n  color: ${p => p.theme.subText};\n`;\n\nconst SubscriptionDetails = styled('div')`\n  width: 50%;\n  padding-right: ${space(2)};\n`;\n\nconst SubscriptionName = styled('div')`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\nconst Description = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  margin-top: ${space(0.75)};\n  color: ${p => p.theme.subText};\n`;\n\nconst SubscribedDescription = styled(Description)`\n  color: ${p => p.theme.gray300};\n`;\n\nexport default AccountSubscriptions;\n"],"sourceRoot":""}