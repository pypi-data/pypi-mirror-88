import { __makeTemplateObject } from "tslib";
import React from 'react';
import { css, Global } from '@emotion/core';
import { IS_ACCEPTANCE_TEST } from 'app/constants';
var styles = function (theme, isDark) { return css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  body {\n    .sentry-error-embed-wrapper {\n      z-index: ", ";\n    }\n\n    /* TODO(dark): Move this to base.less when ready */\n    color: ", ";\n    background: ", ";\n  }\n\n  abbr {\n    border-bottom: 1px dotted ", ";\n  }\n\n  /**\n   * See https://web.dev/prefers-reduced-motion/\n   */\n  @media (prefers-reduced-motion) {\n    *,\n    ::before,\n    ::after {\n      animation-delay: -1ms !important;\n      animation-duration: 0ms !important;\n      animation-iteration-count: 1 !important;\n      background-attachment: initial !important;\n      scroll-behavior: auto !important;\n      transition-duration: 0s !important;\n      transition-delay: 0s !important;\n    }\n  }\n\n  ", "\n\n  /* Override css in LESS files here as we want to manually control dark mode for now */\n  ", "\n"], ["\n  body {\n    .sentry-error-embed-wrapper {\n      z-index: ", ";\n    }\n\n    /* TODO(dark): Move this to base.less when ready */\n    color: ", ";\n    background: ", ";\n  }\n\n  abbr {\n    border-bottom: 1px dotted ", ";\n  }\n\n  /**\n   * See https://web.dev/prefers-reduced-motion/\n   */\n  @media (prefers-reduced-motion) {\n    *,\n    ::before,\n    ::after {\n      animation-delay: -1ms !important;\n      animation-duration: 0ms !important;\n      animation-iteration-count: 1 !important;\n      background-attachment: initial !important;\n      scroll-behavior: auto !important;\n      transition-duration: 0s !important;\n      transition-delay: 0s !important;\n    }\n  }\n\n  ",
    "\n\n  /* Override css in LESS files here as we want to manually control dark mode for now */\n  ",
    "\n"])), theme.zIndex.sentryErrorEmbed, theme.textColor, theme.backgroundSecondary, theme.gray300, IS_ACCEPTANCE_TEST
    ? css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n        input,\n        select {\n          caret-color: transparent;\n        }\n      "], ["\n        input,\n        select {\n          caret-color: transparent;\n        }\n      "]))) : '', isDark
    ? css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n        .modal-content {\n          background: ", ";\n        }\n        .modal-dialog {\n          border-radius: ", ";\n          border: 1px solid ", ";\n        }\n        .modal .modal-header {\n          border-bottom-color: ", ";\n        }\n        .modal .modal-footer {\n          border-top-color: ", ";\n        }\n        .nav-tabs > li > a:hover,\n        .nav-tabs > li > a:active,\n        .nav-tabs > li > a:focus {\n          border-bottom-color: ", " !important; /* TODO(dark): active */\n          color: ", " !important;\n        }\n        ul.crumbs li .table.key-value pre {\n          color: ", ";\n        }\n        .nav-tabs > li.active a,\n        .nav-tabs > li.active a:hover {\n          color: ", ";\n        }\n\n        .traceback {\n          border-color: ", ";\n          background-color: ", ";\n          ol.context > li {\n            color: ", ";\n          }\n\n          .frame,\n          .frame.system-frame {\n            border-top-color: ", ";\n\n            &.is-expandable .title:hover {\n              background-color: ", ";\n            }\n            .btn-toggle {\n              background: transparent;\n            }\n            .context {\n              background-color: ", ";\n            }\n            .title {\n              background-color: ", ";\n            }\n          }\n        }\n\n        .exc-message {\n          color: ", ";\n        }\n        .group-detail h3 em {\n          color: ", ";\n        }\n        .context-summary {\n          border-top: 1px solid ", ";\n        }\n        .event-details-container {\n          background-color: ", ";\n          .secondary {\n            border-left-color: ", ";\n          }\n        }\n        /* Group Details - User context */\n        .user-widget .avatar {\n          box-shadow: 0 0 0 5px ", ";\n          background: ", ";\n        }\n        .nav-header a.help-link,\n        .nav-header span.help-link a {\n          color: ", ";\n        }\n        pre,\n        code {\n          background-color: ", ";\n          color: ", ";\n        }\n        .search .search-input,\n        .Select-control,\n        .Select-menu-outer {\n          background: ", ";\n          color: ", ";\n        }\n\n        /* Global Selection header date picker */\n        .rdrCalendarWrapper {\n          background: ", ";\n          color: ", ";\n        }\n        .rdrDayDisabled {\n          background-color: ", ";\n          color: ", ";\n        }\n        .rdrMonthAndYearPickers select {\n          color: ", ";\n        }\n      "], ["\n        .modal-content {\n          background: ", ";\n        }\n        .modal-dialog {\n          border-radius: ", ";\n          border: 1px solid ", ";\n        }\n        .modal .modal-header {\n          border-bottom-color: ", ";\n        }\n        .modal .modal-footer {\n          border-top-color: ", ";\n        }\n        .nav-tabs > li > a:hover,\n        .nav-tabs > li > a:active,\n        .nav-tabs > li > a:focus {\n          border-bottom-color: ", " !important; /* TODO(dark): active */\n          color: ", " !important;\n        }\n        ul.crumbs li .table.key-value pre {\n          color: ", ";\n        }\n        .nav-tabs > li.active a,\n        .nav-tabs > li.active a:hover {\n          color: ", ";\n        }\n\n        .traceback {\n          border-color: ", ";\n          background-color: ", ";\n          ol.context > li {\n            color: ", ";\n          }\n\n          .frame,\n          .frame.system-frame {\n            border-top-color: ", ";\n\n            &.is-expandable .title:hover {\n              background-color: ", ";\n            }\n            .btn-toggle {\n              background: transparent;\n            }\n            .context {\n              background-color: ", ";\n            }\n            .title {\n              background-color: ", ";\n            }\n          }\n        }\n\n        .exc-message {\n          color: ", ";\n        }\n        .group-detail h3 em {\n          color: ", ";\n        }\n        .context-summary {\n          border-top: 1px solid ", ";\n        }\n        .event-details-container {\n          background-color: ", ";\n          .secondary {\n            border-left-color: ", ";\n          }\n        }\n        /* Group Details - User context */\n        .user-widget .avatar {\n          box-shadow: 0 0 0 5px ", ";\n          background: ", ";\n        }\n        .nav-header a.help-link,\n        .nav-header span.help-link a {\n          color: ", ";\n        }\n        pre,\n        code {\n          background-color: ", ";\n          color: ", ";\n        }\n        .search .search-input,\n        .Select-control,\n        .Select-menu-outer {\n          background: ", ";\n          color: ", ";\n        }\n\n        /* Global Selection header date picker */\n        .rdrCalendarWrapper {\n          background: ", ";\n          color: ", ";\n        }\n        .rdrDayDisabled {\n          background-color: ", ";\n          color: ", ";\n        }\n        .rdrMonthAndYearPickers select {\n          color: ", ";\n        }\n      "])), theme.background, theme.borderRadius, theme.border, theme.border, theme.border, theme.purple300, theme.textColor, theme.subText, theme.textColor, theme.border, theme.background, theme.subText, theme.border, theme.background, theme.background, theme.backgroundSecondary, theme.subText, theme.subText, theme.border, theme.background, theme.border, theme.background, theme.background, theme.subText, theme.backgroundSecondary, theme.subText, theme.background, theme.formText, theme.background, theme.textColor, theme.backgroundSecondary, theme.disabled, theme.textColor) : ''); };
/**
 * Renders an emotion global styles injection component
 */
var GlobalStyles = function (_a) {
    var theme = _a.theme, isDark = _a.isDark;
    return (<Global styles={styles(theme, isDark)}/>);
};
export default GlobalStyles;
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=global.jsx.map