{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/project/projectServiceHooks.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","ServiceHookRow","orgId","projectId","hook","onToggleActive","label","data-test-id","to","id","value","url","help","events","length","join","t","isActive","status","size","toggle","ProjectServiceHooks","params","hookList","state","addLoadingMessage","api","request","method","data","success","clearIndicators","setState","map","h","error","addErrorMessage","Fragment","key","type","bind","body","renderResults","renderEmpty","access","Set","context","organization","has","priority","isCircled","contextTypes","router","PropTypes","object","isRequired"],"mappings":"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","file":"ProjectServiceHooks.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  action?: React.ReactNode;\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, subtitle, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 ${space(3)};\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport {Link, WithRouterProps} from 'react-router';\nimport PropTypes from 'prop-types';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport Button from 'app/components/button';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport Switch from 'app/components/switch';\nimport Truncate from 'app/components/truncate';\nimport {IconAdd, IconFlag} from 'app/icons';\nimport {t} from 'app/locale';\nimport {ServiceHook} from 'app/types';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport Field from 'app/views/settings/components/forms/field';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\ntype RowProps = {\n  orgId: string;\n  projectId: string;\n  hook: ServiceHook;\n  onToggleActive: () => void;\n};\n\nfunction ServiceHookRow({orgId, projectId, hook, onToggleActive}: RowProps) {\n  return (\n    <Field\n      label={\n        <Link\n          data-test-id=\"project-service-hook\"\n          to={`/settings/${orgId}/projects/${projectId}/hooks/${hook.id}/`}\n        >\n          <Truncate value={hook.url} />\n        </Link>\n      }\n      help={\n        <small>\n          {hook.events && hook.events.length !== 0 ? (\n            hook.events.join(', ')\n          ) : (\n            <em>{t('no events configured')}</em>\n          )}\n        </small>\n      }\n    >\n      <Switch isActive={hook.status === 'active'} size=\"lg\" toggle={onToggleActive} />\n    </Field>\n  );\n}\n\ntype Props = WithRouterProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  hookList: null | ServiceHook[];\n} & AsyncView['state'];\n\nexport default class ProjectServiceHooks extends AsyncView<Props, State> {\n  static contextTypes = {\n    router: PropTypes.object,\n    organization: PropTypes.object.isRequired,\n  };\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['hookList', `/projects/${orgId}/${projectId}/hooks/`]];\n  }\n\n  onToggleActive = (hook: ServiceHook) => {\n    const {orgId, projectId} = this.props.params;\n    const {hookList} = this.state;\n    if (!hookList) {\n      return;\n    }\n\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    this.api.request(`/projects/${orgId}/${projectId}/hooks/${hook.id}/`, {\n      method: 'PUT',\n      data: {\n        isActive: hook.status !== 'active',\n      },\n      success: data => {\n        clearIndicators();\n        this.setState({\n          hookList: hookList.map(h => {\n            if (h.id === data.id) {\n              return {\n                ...h,\n                ...data,\n              };\n            }\n            return h;\n          }),\n        });\n      },\n      error: () => {\n        addErrorMessage(t('Unable to remove application. Please try again.'));\n      },\n    });\n  };\n\n  renderEmpty() {\n    return (\n      <EmptyMessage>\n        {t('There are no service hooks associated with this project.')}\n      </EmptyMessage>\n    );\n  }\n\n  renderResults() {\n    const {orgId, projectId} = this.props.params;\n\n    return (\n      <React.Fragment>\n        <PanelHeader key=\"header\">{t('Service Hook')}</PanelHeader>\n        <PanelBody key=\"body\">\n          <PanelAlert type=\"info\" icon={<IconFlag size=\"md\" />}>\n            {t(\n              'Service Hooks are an early adopter preview feature and will change in the future.'\n            )}\n          </PanelAlert>\n          {this.state.hookList?.map(hook => (\n            <ServiceHookRow\n              key={hook.id}\n              orgId={orgId}\n              projectId={projectId}\n              hook={hook}\n              onToggleActive={this.onToggleActive.bind(this, hook)}\n            />\n          ))}\n        </PanelBody>\n      </React.Fragment>\n    );\n  }\n\n  renderBody() {\n    const {hookList} = this.state;\n    const body =\n      hookList && hookList.length > 0 ? this.renderResults() : this.renderEmpty();\n\n    const {orgId, projectId} = this.props.params;\n    const access = new Set(this.context.organization.access);\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader\n          title={t('Service Hooks')}\n          action={\n            access.has('project:write') ? (\n              <Button\n                data-test-id=\"new-service-hook\"\n                to={`/settings/${orgId}/projects/${projectId}/hooks/new/`}\n                size=\"small\"\n                priority=\"primary\"\n                icon={<IconAdd size=\"xs\" isCircled />}\n              >\n                {t('Create New Hook')}\n              </Button>\n            ) : null\n          }\n        />\n        <Panel>{body}</Panel>\n      </React.Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}