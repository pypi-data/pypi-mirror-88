{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/components/alertLink.tsx","webpack:///./app/views/settings/organizationApiKeys/organizationApiKeysList.tsx","webpack:///./app/views/settings/organizationApiKeys/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","routeTitleGen","routeName","orgSlug","withSentry","tmpl","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","AlertLink","size","priority","children","onClick","withoutMarginBottom","openInNewTab","href","dataTestId","StyledLink","data-test-id","IconWrapper","AlertLinkText","IconLink","direction","linkProps","omit","alert","backgroundLight","textColor","border","OrganizationApiKeysList","keys","busy","loading","onAddApiKey","onRemove","hasKeys","length","isCircled","disabled","t","tct","api","tokens","isLoading","isEmpty","emptyMessage","headers","id","key","label","apiDetailsUrl","Fragment","Cell","AutoSelectTextInput","readOnly","aria-label","className","onConfirm","message","css","AutoSelectText","inputStyles","OrganizationApiKeys","handleRemove","a","oldKeys","state","setState","filter","requestPromise","orgId","method","data","addErrorMessage","handleAddApiKey","browserHistory","push","addSuccessMessage","organization","slug","renderBody","withOrganization"],"mappings":"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","file":"OrganizationApiKeys.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  action?: React.ReactNode;\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, subtitle, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 ${space(3)};\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default SettingsPageHeader;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n      ['data-test-id']: dataTestId,\n    } = this.props;\n\n    return (\n      <StyledLink\n        data-test-id={dataTestId}\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport {PlainRoute} from 'react-router/lib/Route';\nimport styled from '@emotion/styled';\n\nimport AlertLink from 'app/components/alertLink';\nimport AutoSelectText from 'app/components/autoSelectText';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport LinkWithConfirmation from 'app/components/links/linkWithConfirmation';\nimport {PanelTable} from 'app/components/panels';\nimport {IconAdd, IconDelete} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport {inputStyles} from 'app/styles/input';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nimport {DeprecatedApiKey} from './types';\n\ntype RouteParams = {\n  orgId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  routes: PlainRoute[];\n  keys: DeprecatedApiKey[];\n\n  /**\n   * Loading refers to fetching the API Keys\n   */\n  loading: boolean;\n\n  /**\n   * Busy differs from loading in that busy is a result of an action like removing\n   */\n  busy: boolean;\n\n  onRemove: (id: DeprecatedApiKey['id']) => {};\n  onAddApiKey: () => {};\n};\n\nfunction OrganizationApiKeysList({\n  params,\n  routes,\n  keys,\n  busy,\n  loading,\n  onAddApiKey,\n  onRemove,\n}: Props) {\n  const hasKeys = keys && keys.length;\n\n  const action = (\n    <Button\n      priority=\"primary\"\n      size=\"small\"\n      icon={<IconAdd size=\"xs\" isCircled />}\n      busy={busy}\n      disabled={busy}\n      onClick={onAddApiKey}\n    >\n      {t('New API Key')}\n    </Button>\n  );\n\n  return (\n    <div>\n      <SettingsPageHeader title={t('API Keys')} action={action} />\n\n      <TextBlock>\n        {tct(\n          `API keys grant access to the [api:developer web API].\n          If you're looking to configure a Sentry client, you'll need a\n          client key which is available in your project settings.`,\n          {\n            api: <ExternalLink href=\"https://docs.sentry.io/api/\" />,\n          }\n        )}\n      </TextBlock>\n\n      <AlertLink to=\"/settings/account/api/auth-tokens/\" priority=\"info\">\n        {tct(\n          'Until Sentry supports OAuth, you might want to switch to using [tokens:Auth Tokens] instead.',\n          {\n            tokens: <u />,\n          }\n        )}\n      </AlertLink>\n\n      <PanelTable\n        isLoading={loading}\n        isEmpty={!hasKeys}\n        emptyMessage={t('No API keys for this organization')}\n        headers={[t('Name'), t('Key'), t('Actions')]}\n      >\n        {keys &&\n          keys.map(({id, key, label}) => {\n            const apiDetailsUrl = recreateRoute(`${id}/`, {\n              params,\n              routes,\n            });\n\n            return (\n              <React.Fragment key={key}>\n                <Cell>\n                  <Link to={apiDetailsUrl}>{label}</Link>\n                </Cell>\n\n                <div>\n                  <AutoSelectTextInput readOnly>{key}</AutoSelectTextInput>\n                </div>\n\n                <Cell>\n                  <LinkWithConfirmation\n                    aria-label={t('Remove API Key')}\n                    className=\"btn btn-default btn-sm\"\n                    onConfirm={() => onRemove(id)}\n                    message={t('Are you sure you want to remove this API key?')}\n                    title={t('Remove API Key?')}\n                  >\n                    <IconDelete size=\"xs\" css={{position: 'relative', top: '2px'}} />\n                  </LinkWithConfirmation>\n                </Cell>\n              </React.Fragment>\n            );\n          })}\n      </PanelTable>\n    </div>\n  );\n}\n\nconst Cell = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst AutoSelectTextInput = styled(AutoSelectText)<{readOnly: boolean}>`\n  ${p => inputStyles(p)}\n`;\n\nexport default OrganizationApiKeysList;\n","import React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport {Organization} from 'app/types';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\n\nimport OrganizationApiKeysList from './organizationApiKeysList';\nimport {DeprecatedApiKey} from './types';\n\ntype RouteParams = {\n  orgId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n};\n\ntype State = {\n  keys: DeprecatedApiKey[];\n} & AsyncView['state'];\n\n/**\n * API Keys are deprecated, but there may be some legacy customers that still use it\n */\nclass OrganizationApiKeys extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['keys', `/organizations/${this.props.params.orgId}/api-keys/`]];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('API Keys'), this.props.organization.slug, false);\n  }\n\n  handleRemove = async (id: string) => {\n    const oldKeys = [...this.state.keys];\n\n    this.setState(state => ({\n      keys: state.keys.filter(({id: existingId}) => existingId !== id),\n    }));\n\n    try {\n      await this.api.requestPromise(\n        `/organizations/${this.props.params.orgId}/api-keys/${id}/`,\n        {\n          method: 'DELETE',\n          data: {},\n        }\n      );\n    } catch {\n      this.setState({keys: oldKeys, busy: false});\n      addErrorMessage(t('Error removing key'));\n    }\n  };\n\n  handleAddApiKey = async () => {\n    this.setState({\n      busy: true,\n    });\n\n    try {\n      const data = await this.api.requestPromise(\n        `/organizations/${this.props.params.orgId}/api-keys/`,\n        {\n          method: 'POST',\n          data: {},\n        }\n      );\n\n      if (data) {\n        this.setState({busy: false});\n        browserHistory.push(\n          recreateRoute(`${data.id}/`, {\n            params: this.props.params,\n            routes: this.props.routes,\n          })\n        );\n        addSuccessMessage(t(`Created a new API key \"${data.label}\"`));\n      }\n    } catch {\n      this.setState({busy: false});\n    }\n  };\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    return (\n      <OrganizationApiKeysList\n        loading={this.state.loading}\n        busy={this.state.busy}\n        keys={this.state.keys}\n        onRemove={this.handleRemove}\n        onAddApiKey={this.handleAddApiKey}\n        {...this.props}\n      />\n    );\n  }\n}\n\nexport default withOrganization(OrganizationApiKeys);\n"],"sourceRoot":""}