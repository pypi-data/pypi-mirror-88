{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/components/forms/textField.tsx","webpack:///./app/views/settings/components/forms/apiForm.tsx","webpack:///./app/views/settings/components/forms/booleanField.tsx","webpack:///./app/views/settings/components/forms/controls/multipleCheckbox.jsx","webpack:///./app/views/settings/project/serviceHookSettingsForm.tsx","webpack:///./app/views/settings/project/projectServiceHookDetails.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","TextField","type","ApiForm","api","Client","onSubmit","data","onSuccess","onError","addLoadingMessage","t","request","apiEndpoint","method","apiMethod","success","response","clearIndicators","error","clear","otherProps","BooleanField","handleChange","value","onChange","onBlur","e","newValue","coerceValue","confirm","fieldProps","resetOnError","field","disabled","bind","switchProps","size","isActive","isDisabled","toggle","renderMessage","toString","onConfirm","open","MultipleCheckboxWrapper","Label","CheckboxLabel","MultipleCheckbox","selectedValue","target","checked","filter","v","choices","map","choiceValue","choiceLabel","key","width","defined","indexOf","EVENT_CHOICES","ServiceHookSettingsForm","onSubmitSuccess","orgId","projectId","browserHistory","push","initialData","hookId","endpoint","footerStyle","marginTop","paddingRight","submitLabel","name","label","required","help","inline","HookStats","until","Math","floor","Date","getTime","since","params","query","resolution","stats","state","emptyStats","series","seriesName","total","ts","withPadding","description","isGroupedByDate","showTimeInTooltip","labelYAxisExtents","height","ProjectServiceHookDetails","onDelete","addErrorMessage","hook","Fragment","status","flexibleControlStateSize","getDynamicText","secret","fixed","priority","onClick"],"mappings":"2qBAQqBA,E,uIAKjB,MAAO,K,+BAIP,IAAMC,EAAQC,KAAKC,WACnB,OACE,YAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,WACjBC,KAAKE,uB,GATJC,KAHWL,E,6nBCcfM,E,qIAKK,MACgEJ,KAAKK,MAArEC,EADA,EACAA,KAAMP,EADN,EACMA,MAAOQ,EADb,EACaA,SAAUC,EADvB,EACuBA,OAAQC,EAD/B,EAC+BA,KAAMC,EADrC,EACqCA,cAAkBL,EADvD,mEAEP,OACE,kBAASA,EACP,YAACM,EAAD,KACE,YAACC,EAAD,KACGN,GAAQ,YAACO,EAAD,KAAOP,GACfP,GACC,YAACe,EAAD,CAAOL,KAAMA,EAAMM,OAAQL,GACzB,YAAC,IAAD,KAAcX,GACbQ,GAAY,YAACS,EAAD,KAAWT,KAI7BC,GAAU,YAACS,EAAD,CAAQR,KAAMA,GAAOD,IAGjCC,GAAQ,uBAAMA,Q,GAtBkBS,IAAMC,WAAzCf,E,yCAAAA,EACGgB,aAAe,CACpBV,eAAe,GA+BnB,IAAMC,EAAkB,YAAO,MAAP,8CAAH,2DAIfC,EAAe,YAAO,MAAP,2CAAH,mCAIZE,EAAQ,YAAO,MAAP,qCACV,SAAAO,GAAC,OACAA,EAAEN,QAAH,mDAFO,YAMC,SAAAM,GAAC,OACTA,EAAEZ,KAAF,UACOa,YAAM,GADb,YACmBA,YAAM,GADzB,YAC+BA,YAAM,GADrC,gBAEOA,YAAM,GAFb,YAEmBA,YAAM,GAFzB,YAE+BA,YAAM,GAFrC,QAPO,KAWLN,EAAW,YAAO,MAAP,uCAAH,UACH,SAAAK,GAAC,OAAIA,EAAEE,MAAMC,UADV,+BAGC,SAAAH,GAAC,OAAIA,EAAEE,MAAME,gBAHd,YAIDH,YAAM,KAJL,MAIeA,YAAM,GAJrB,KAORT,EAAO,YAAO,MAAP,mCAAH,gBACQS,YAAM,GADd,KAIJL,EAAS,YAAO,MAAP,sCACX,SAAAI,GAAC,OAAKA,EAAEZ,KAAF,sBAAwBa,YAAM,IAAO,OADnC,KAINI,EAAqB,YAAOtB,EAAP,iDAAH,8BAIPkB,YAAM,GAJC,KAOTI,O,+GC1FA,SAASC,EAAUtB,GAChC,OAAO,YAAC,IAAD,OAAgBA,EAAhB,CAAuBuB,KAAK,UADbD,E,yrBCOHE,E,kLAKnBC,IAAc,IAAIC,I,EAElBC,SAAW,SACTC,EACAC,EACAC,GAEA,EAAK9B,MAAM2B,UAAY,EAAK3B,MAAM2B,SAASC,GAC3CG,YAAkBC,YAAE,oBACpB,EAAKP,IAAIQ,QAAQ,EAAKjC,MAAMkC,YAAa,CACvCC,OAAQ,EAAKnC,MAAMoC,UACnBR,OACAS,QAAS,SAAAC,GACPC,cACAV,EAAUS,IAEZE,MAAO,SAAF,oGAAE,WAAAA,GACLD,cACAT,EAAQU,S,6DArBZ7C,KAAK8B,IAAIgB,U,+BA0BF,MAMH9C,KAAKK,MADJ0C,GALE,EAELf,SAFK,EAGLS,UAHK,EAILF,YAJK,+CAQP,OAAO,YAAC,IAAD,KAAMP,SAAUhC,KAAKgC,UAAce,Q,GApCT7B,IAAMC,WAAtBU,E,kwCCAAmB,E,kLAKnBC,aAAe,SACbC,EACAC,EACAC,EACAC,GAGA,IAAMC,EAAW,EAAKC,aAAaL,GACnCC,EAASG,EAAUD,GACnBD,EAAOE,EAAUD,I,kDAbPH,GACV,QAASA,I,+BAeF,aAC0BlD,KAAKK,MAA/BmD,EADA,EACAA,QAAYC,EADZ,mBAGP,OACE,YAAC,IAAD,OACMA,EADN,CAEEC,cAAY,EACZC,MAAO,YAWD,IAVJR,EAUI,EAVJA,SACAC,EASI,EATJA,OACAF,EAQI,EARJA,MACAU,EAOI,EAPJA,SACGvD,EAMC,gDAEE4C,EAAe,EAAKA,aAAaY,KAAK,EAAMX,EAAOC,EAAUC,GAE7DU,EAAc,EAAH,KACZzD,GADY,IAEf0D,KAAM,KACNC,WAAYd,EACZe,WAAYL,EACZM,OAAQjB,IAGV,OAAIO,EAEA,YAAC,IAAD,CACEW,cAAe,kBAAMX,IAAUN,GAAOkB,aACtCC,UAAW,kBAAMpB,EAAa,OAE7B,gBAAEqB,EAAF,EAAEA,KAAF,OACC,YAAC,IAAD,OACMR,EADN,CAEEI,OAAQ,SAACb,GAGHG,IAAUN,GAAOkB,YAEnBE,IAIFrB,EAAaI,UAQlB,YAAC,IAAWS,W,GAzEa5C,IAAMC,WAA3B6B,E,grBCNrB,IAAMuB,EAA0B,YAAO,MAAP,sDAAH,uDAKvBC,EAAQ,YAAO,QAAP,oCAAH,iHAQLC,EAAgB,YAAO,OAAP,4CAAH,2CAIEC,E,kLAQnBvB,SAAW,SAACwB,EAAetB,GAAM,MACL,EAAKhD,MAAxB6C,EADwB,EACxBA,MAAOC,EADiB,EACjBA,SAGU,mBAAbA,GAUXA,EANIE,EAAEuB,OAAOC,QACA3B,EAAQ,GAAH,WAAOA,GAAP,CAAcyB,IAAiB,CAACzB,GAErCA,EAAM4B,QAAO,SAAAC,GAAC,OAAIA,IAAMJ,KAGlBtB,I,+CAGZ,aAC4BrD,KAAKK,MAAjCuD,EADA,EACAA,SAAUoB,EADV,EACUA,QAAS9B,EADnB,EACmBA,MAE1B,OACE,YAACqB,EAAD,KACGS,EAAQC,KAAI,2BAAEC,EAAF,KAAeC,EAAf,YACX,YAAC,MAAD,CAAKC,IAAKF,EAAaG,MAAO,CAAC,EAAG,GAAO,EAAI,EAAG,MAC9C,YAACb,EAAD,KACE,qBACE5C,KAAK,WACLsB,MAAOgC,EACP/B,SAAU,EAAKA,SAASU,KAAK,EAAMqB,GACnCtB,SAAUA,EACViB,QAASS,YAAQpC,KAA0C,IAAhCA,EAAMqC,QAAQL,KAE3C,YAACT,EAAD,KAAgBU,a,GAxCgBjE,IAAMC,WAA/BuD,E,msBCZrB,IAAMc,EAAgB,CAAC,cAAe,iBAAiBP,KAAI,SAAA5B,GAAC,MAAI,CAACA,EAAGA,MAS/CoC,E,kLACnBC,gBAAkB,WAAM,MACK,EAAKrF,MAAzBsF,EADe,EACfA,MAAOC,EADQ,EACRA,UACdC,iBAAeC,KAAf,oBAAiCH,EAAjC,qBAAmDC,EAAnD,a,+CAGO,MACyC5F,KAAKK,MAA9C0F,EADA,EACAA,YAAaJ,EADb,EACaA,MAAOC,EADpB,EACoBA,UAAWI,EAD/B,EAC+BA,OAEhCC,EAAWD,EAAM,oBACNL,EADM,YACGC,EADH,kBACsBI,EADtB,yBAENL,EAFM,YAEGC,EAFH,WAIvB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEnD,UAAWuD,EAAS,MAAQ,OAC5BzD,YAAa0D,EACbF,YAAaA,EACbL,gBAAiB1F,KAAK0F,gBACtBQ,YAAa,CACXC,UAAW,EACXC,aAAc,IAEhBC,YAAaL,EAAS3D,YAAE,gBAAkBA,YAAE,gBAE5C,YAAC,IAAD,KAAcA,YAAE,uBAChB,YAAC,IAAD,KACE,YAAC,IAAD,CAAciE,KAAK,WAAWC,MAAOlE,YAAE,YACvC,YAAC,IAAD,CACEiE,KAAK,MACLC,MAAOlE,YAAE,OACTmE,UAAQ,EACRC,KAAMpE,YAAE,wCAEV,YAAC,IAAD,CACEiE,KAAK,SACLC,MAAOlE,YAAE,UACTqE,QAAQ,EACRD,KAAMpE,YAAE,+CAEP,gBAAEa,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACC,YAAC,IAAD,CACEA,SAAUA,EACVD,MAAOA,EACP8B,QAASQ,c,GA7C0BtE,IAAMC,WAAtCsE,E,g3CCafkB,E,2IAEF,IAAMC,EAAQC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KAC1CC,EAAQL,EAAQ,OAFmC,EAGtB5G,KAAKK,MAAM6G,OAAvClB,EAHkD,EAGlDA,OAAQL,EAH0C,EAG1CA,MAAOC,EAHmC,EAGnCA,UACtB,MAAO,CACL,CACE,QADF,oBAEeD,EAFf,YAEwBC,EAFxB,kBAE2CI,EAF3C,WAGE,CACEmB,MAAO,CACLF,QACAL,QACAQ,WAAY,W,mCAOT,IACJC,EAASrH,KAAKsH,MAAdD,MACP,GAAc,OAAVA,EACF,OAAO,KAET,IAAIE,GAAa,EAEXC,EAAS,CACbC,WAAYpF,YAAE,UACdJ,KAAMoF,EAAMpC,KAAI,SAAA5D,GAId,OAHIA,EAAEqG,QACJH,GAAa,GAER,CACLjB,KAAa,IAAPjF,EAAEsG,GACRzE,MAAO7B,EAAEqG,WAKf,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KAAcrF,YAAE,wCAChB,YAAC,IAAD,CAAWuF,aAAW,GAClBL,EASA,YAAC,IAAD,CACExH,MAAOsC,YAAE,yCACTwF,YAAaxF,YAAE,kDAVjB,YAAC,IAAD,CACEyF,iBAAe,EACfC,mBAAiB,EACjBC,mBAAiB,EACjBR,OAAQ,CAACA,GACTS,OAAQ,Y,GAlDE9H,KAqEH+H,E,kLAMnBC,SAAW,WAAM,MACoB,EAAK9H,MAAM6G,OAAvCvB,EADQ,EACRA,MAAOC,EADC,EACDA,UAAWI,EADV,EACUA,OACzB5D,YAAkBC,YAAE,oBACpB,EAAKP,IAAIQ,QAAT,oBAA8BqD,EAA9B,YAAuCC,EAAvC,kBAA0DI,EAA1D,KAAqE,CACnExD,OAAQ,SACRE,QAAS,WACPE,cACAiD,iBAAeC,KAAf,oBAAiCH,EAAjC,qBAAmDC,EAAnD,aAEF/C,MAAO,WACLuF,YAAgB/F,YAAE,wD,qDAfmC,MACtBrC,KAAKK,MAAM6G,OAAvCvB,EADkD,EAClDA,MAAOC,EAD2C,EAC3CA,UAAWI,EADgC,EAChCA,OACzB,MAAO,CAAC,CAAC,OAAD,oBAAsBL,EAAtB,YAA+BC,EAA/B,kBAAkDI,EAAlD,S,mCAkBG,MACwBhG,KAAKK,MAAM6G,OAAvCvB,EADI,EACJA,MAAOC,EADH,EACGA,UAAWI,EADd,EACcA,OAClBqC,EAAQrI,KAAKsH,MAAbe,KACP,OAAKA,EAKH,YAAC,IAAMC,SAAP,KACE,YAAC,IAAD,CAAoBvI,MAAOsC,YAAE,0BAE7B,YAAC,IAAD,KACE,YAACsE,EAAD,CAAWO,OAAQlH,KAAKK,MAAM6G,UAGhC,YAAC,IAAD,CACEvB,MAAOA,EACPC,UAAWA,EACXI,OAAQA,EACRD,YAAW,OACNsC,GADM,IAETrE,SAA0B,aAAhBqE,EAAKE,WAGnB,YAAC,IAAD,KACE,YAAC,IAAD,KAAclG,YAAE,qBAChB,YAAC,IAAD,KACE,YAAC,IAAD,CAAYT,KAAK,OAAOtB,KAAM,YAAC,IAAD,CAAUyD,KAAK,QAA7C,wBACuB,mDADvB,sBAC+E,IAC7E,6DAFF,sGAKA,YAAC,IAAD,CACEwC,MAAOlE,YAAE,UACTmG,0BAAwB,EACxB9B,QAAQ,EACRD,KAAMpE,YAAE,iEAER,YAAC,IAAD,KACGoG,YAAe,CACdvF,MAAOmF,EAAKK,OACZC,MAAO,+BAMjB,YAAC,IAAD,KACE,YAAC,IAAD,KAActG,YAAE,gBAChB,YAAC,IAAD,KACE,YAAC,IAAD,CACEkE,MAAOlE,YAAE,eACToE,KAAMpE,YAAE,mDAER,uBACE,YAAC,IAAD,CAAQuG,SAAS,SAASC,QAAS7I,KAAKmI,UACrC9F,YAAE,qBApDR,S,GAzB0CvC","file":"ProjectServiceHookDetails.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  action?: React.ReactNode;\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, subtitle, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 ${space(3)};\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\n\nimport InputField from 'app/views/settings/components/forms/inputField';\n\ntype Props = InputField['props'];\n\nexport default function TextField(props: Omit<Props, 'type'>) {\n  return <InputField {...props} type=\"text\" />;\n}\n\nTextField.propTypes = {...InputField.propTypes};\n","import React from 'react';\n\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport Form from 'app/views/settings/components/forms/form';\n\ntype Props = Form['props'] & {\n  onSubmit?: (data: Record<string, any>) => void;\n  apiMethod: string;\n  apiEndpoint: string;\n};\n\nexport default class ApiForm extends React.Component<Props> {\n  componentWillUnmount() {\n    this.api.clear();\n  }\n\n  api: Client = new Client();\n\n  onSubmit = (\n    data: Record<string, any>,\n    onSuccess: (response: Record<string, any>) => void,\n    onError: (error: any) => void\n  ) => {\n    this.props.onSubmit && this.props.onSubmit(data);\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(this.props.apiEndpoint, {\n      method: this.props.apiMethod,\n      data,\n      success: response => {\n        clearIndicators();\n        onSuccess(response);\n      },\n      error: error => {\n        clearIndicators();\n        onError(error);\n      },\n    });\n  };\n\n  render() {\n    const {\n      onSubmit: _onSubmit,\n      apiMethod: _apiMethod,\n      apiEndpoint: _apiEndpoint,\n      ...otherProps\n    } = this.props;\n\n    return <Form onSubmit={this.onSubmit} {...otherProps} />;\n  }\n}\n","import React from 'react';\n\nimport Confirm from 'app/components/confirm';\nimport Switch from 'app/components/switch';\nimport InputField, {onEvent} from 'app/views/settings/components/forms/inputField';\n\ntype Props = {\n  confirm?: {\n    true?: React.ReactNode;\n    false?: React.ReactNode;\n  };\n} & InputField['props'];\n\nexport default class BooleanField extends React.Component<Props> {\n  coerceValue(value: any) {\n    return !!value;\n  }\n\n  handleChange = (\n    value: any,\n    onChange: onEvent,\n    onBlur: onEvent,\n    e: React.FormEvent<HTMLInputElement>\n  ) => {\n    // We need to toggle current value because Switch is not an input\n    const newValue = this.coerceValue(!value);\n    onChange(newValue, e);\n    onBlur(newValue, e);\n  };\n\n  render() {\n    const {confirm, ...fieldProps} = this.props;\n\n    return (\n      <InputField\n        {...fieldProps}\n        resetOnError\n        field={({\n          onChange,\n          onBlur,\n          value,\n          disabled,\n          ...props\n        }: {\n          onChange: onEvent;\n          onBlur: onEvent;\n          value: any;\n          disabled: boolean;\n        }) => {\n          // Create a function with required args bound\n          const handleChange = this.handleChange.bind(this, value, onChange, onBlur);\n\n          const switchProps = {\n            ...props,\n            size: 'lg' as React.ComponentProps<typeof Switch>['size'],\n            isActive: !!value,\n            isDisabled: disabled,\n            toggle: handleChange,\n          };\n\n          if (confirm) {\n            return (\n              <Confirm\n                renderMessage={() => confirm[(!value).toString()]}\n                onConfirm={() => handleChange({})}\n              >\n                {({open}) => (\n                  <Switch\n                    {...switchProps}\n                    toggle={(e: React.MouseEvent) => {\n                      // If we have a `confirm` prop and enabling switch\n                      // Then show confirm dialog, otherwise propagate change as normal\n                      if (confirm[(!value).toString()]) {\n                        // Open confirm modal\n                        open();\n                        return;\n                      }\n\n                      handleChange(e);\n                    }}\n                  />\n                )}\n              </Confirm>\n            );\n          }\n\n          return <Switch {...switchProps} />;\n        }}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport {Box} from 'reflexbox'; // eslint-disable-line no-restricted-imports\n\nimport {defined} from 'app/utils';\n\nconst MultipleCheckboxWrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  white-space: nowrap;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 20%;\n`;\n\nconst CheckboxLabel = styled('span')`\n  margin-left: 3px;\n`;\n\nexport default class MultipleCheckbox extends React.Component {\n  static propTypes = {\n    value: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    choices: PropTypes.array.isRequired,\n  };\n\n  onChange = (selectedValue, e) => {\n    const {value, onChange} = this.props;\n    let newValue;\n\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (e.target.checked) {\n      newValue = value ? [...value, selectedValue] : [value];\n    } else {\n      newValue = value.filter(v => v !== selectedValue);\n    }\n\n    onChange(newValue, e);\n  };\n\n  render() {\n    const {disabled, choices, value} = this.props;\n\n    return (\n      <MultipleCheckboxWrapper>\n        {choices.map(([choiceValue, choiceLabel]) => (\n          <Box key={choiceValue} width={[1, 1 / 2, 1 / 3, 1 / 4]}>\n            <Label>\n              <input\n                type=\"checkbox\"\n                value={choiceValue}\n                onChange={this.onChange.bind(this, choiceValue)}\n                disabled={disabled}\n                checked={defined(value) && value.indexOf(choiceValue) !== -1}\n              />\n              <CheckboxLabel>{choiceLabel}</CheckboxLabel>\n            </Label>\n          </Box>\n        ))}\n      </MultipleCheckboxWrapper>\n    );\n  }\n}\n","import React from 'react';\nimport {browserHistory} from 'react-router';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport {ServiceHook} from 'app/types';\nimport ApiForm from 'app/views/settings/components/forms/apiForm';\nimport BooleanField from 'app/views/settings/components/forms/booleanField';\nimport MultipleCheckbox from 'app/views/settings/components/forms/controls/multipleCheckbox';\nimport FormField from 'app/views/settings/components/forms/formField';\nimport TextField from 'app/views/settings/components/forms/textField';\n\nconst EVENT_CHOICES = ['event.alert', 'event.created'].map(e => [e, e]);\n\ntype Props = {\n  orgId: string;\n  projectId: string;\n  initialData: Partial<ServiceHook> & {isActive: boolean};\n  hookId?: string;\n};\n\nexport default class ServiceHookSettingsForm extends React.Component<Props> {\n  onSubmitSuccess = () => {\n    const {orgId, projectId} = this.props;\n    browserHistory.push(`/settings/${orgId}/projects/${projectId}/hooks/`);\n  };\n\n  render() {\n    const {initialData, orgId, projectId, hookId} = this.props;\n\n    const endpoint = hookId\n      ? `/projects/${orgId}/${projectId}/hooks/${hookId}/`\n      : `/projects/${orgId}/${projectId}/hooks/`;\n\n    return (\n      <Panel>\n        <ApiForm\n          apiMethod={hookId ? 'PUT' : 'POST'}\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          onSubmitSuccess={this.onSubmitSuccess}\n          footerStyle={{\n            marginTop: 0,\n            paddingRight: 20,\n          }}\n          submitLabel={hookId ? t('Save Changes') : t('Create Hook')}\n        >\n          <PanelHeader>{t('Hook Configuration')}</PanelHeader>\n          <PanelBody>\n            <BooleanField name=\"isActive\" label={t('Active')} />\n            <TextField\n              name=\"url\"\n              label={t('URL')}\n              required\n              help={t('The URL which will receive events.')}\n            />\n            <FormField\n              name=\"events\"\n              label={t('Events')}\n              inline={false}\n              help={t('The event types you wish to subscribe to.')}\n            >\n              {({value, onChange}) => (\n                <MultipleCheckbox\n                  onChange={onChange}\n                  value={value}\n                  choices={EVENT_CHOICES}\n                />\n              )}\n            </FormField>\n          </PanelBody>\n        </ApiForm>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\nimport {browserHistory, WithRouterProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Button from 'app/components/button';\nimport MiniBarChart from 'app/components/charts/miniBarChart';\nimport ErrorBoundary from 'app/components/errorBoundary';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {IconFlag} from 'app/icons';\nimport {t} from 'app/locale';\nimport {ServiceHook} from 'app/types';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport Field from 'app/views/settings/components/forms/field';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport ServiceHookSettingsForm from 'app/views/settings/project/serviceHookSettingsForm';\n\ntype Params = {orgId: string; projectId: string; hookId: string};\n\ntype StatsProps = {\n  params: Params;\n};\n\ntype StatsState = {\n  stats: {ts: number; total: number}[] | null;\n} & AsyncComponent['state'];\n\nclass HookStats extends AsyncComponent<StatsProps, StatsState> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n    const {hookId, orgId, projectId} = this.props.params;\n    return [\n      [\n        'stats',\n        `/projects/${orgId}/${projectId}/hooks/${hookId}/stats/`,\n        {\n          query: {\n            since,\n            until,\n            resolution: '1d',\n          },\n        },\n      ],\n    ];\n  }\n\n  renderBody() {\n    const {stats} = this.state;\n    if (stats === null) {\n      return null;\n    }\n    let emptyStats = true;\n\n    const series = {\n      seriesName: t('Events'),\n      data: stats.map(p => {\n        if (p.total) {\n          emptyStats = false;\n        }\n        return {\n          name: p.ts * 1000,\n          value: p.total,\n        };\n      }),\n    };\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Events in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody withPadding>\n          {!emptyStats ? (\n            <MiniBarChart\n              isGroupedByDate\n              showTimeInTooltip\n              labelYAxisExtents\n              series={[series]}\n              height={150}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('Total webhooks fired for this configuration.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\ntype Props = WithRouterProps<Params, {}>;\ntype State = {\n  hook: ServiceHook | null;\n} & AsyncView['state'];\n\nexport default class ProjectServiceHookDetails extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId, hookId} = this.props.params;\n    return [['hook', `/projects/${orgId}/${projectId}/hooks/${hookId}/`]];\n  }\n\n  onDelete = () => {\n    const {orgId, projectId, hookId} = this.props.params;\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(`/projects/${orgId}/${projectId}/hooks/${hookId}/`, {\n      method: 'DELETE',\n      success: () => {\n        clearIndicators();\n        browserHistory.push(`/settings/${orgId}/projects/${projectId}/hooks/`);\n      },\n      error: () => {\n        addErrorMessage(t('Unable to remove application. Please try again.'));\n      },\n    });\n  };\n\n  renderBody() {\n    const {orgId, projectId, hookId} = this.props.params;\n    const {hook} = this.state;\n    if (!hook) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader title={t('Service Hook Details')} />\n\n        <ErrorBoundary>\n          <HookStats params={this.props.params} />\n        </ErrorBoundary>\n\n        <ServiceHookSettingsForm\n          orgId={orgId}\n          projectId={projectId}\n          hookId={hookId}\n          initialData={{\n            ...hook,\n            isActive: hook.status !== 'disabled',\n          }}\n        />\n        <Panel>\n          <PanelHeader>{t('Event Validation')}</PanelHeader>\n          <PanelBody>\n            <PanelAlert type=\"info\" icon={<IconFlag size=\"md\" />}>\n              Sentry will send the <code>X-ServiceHook-Signature</code> header built using{' '}\n              <code>HMAC(SHA256, [secret], [payload])</code>. You should always verify\n              this signature before trusting the information provided in the webhook.\n            </PanelAlert>\n            <Field\n              label={t('Secret')}\n              flexibleControlStateSize\n              inline={false}\n              help={t('The shared secret used for generating event HMAC signatures.')}\n            >\n              <TextCopyInput>\n                {getDynamicText({\n                  value: hook.secret,\n                  fixed: 'a dynamic secret value',\n                })}\n              </TextCopyInput>\n            </Field>\n          </PanelBody>\n        </Panel>\n        <Panel>\n          <PanelHeader>{t('Delete Hook')}</PanelHeader>\n          <PanelBody>\n            <Field\n              label={t('Delete Hook')}\n              help={t('Removing this hook is immediate and permanent.')}\n            >\n              <div>\n                <Button priority=\"danger\" onClick={this.onDelete}>\n                  {t('Delete Hook')}\n                </Button>\n              </div>\n            </Field>\n          </PanelBody>\n        </Panel>\n      </React.Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}