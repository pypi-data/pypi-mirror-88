{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/account/accountAuthorizations.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","AccountAuthorizations","handleRevoke","authorization","oldData","state","data","setState","filter","id","a","api","requestPromise","method","addSuccessMessage","t","addErrorMessage","isEmpty","length","Description","tct","link","to","map","PanelItemCenter","key","ApplicationDetails","ApplicationName","application","name","homepageUrl","Url","href","Scopes","scopes","join","size","onClick","fontSizeRelativeSmall","PanelItem","gray300"],"mappings":"0qBAQqBA,E,uIAKjB,MAAO,K,+BAIP,IAAMC,EAAQC,KAAKC,WACnB,OACE,YAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,WACjBC,KAAKE,uB,GATJC,KAHWL,E,6nBCcfM,E,qIAKK,MACgEJ,KAAKK,MAArEC,EADA,EACAA,KAAMP,EADN,EACMA,MAAOQ,EADb,EACaA,SAAUC,EADvB,EACuBA,OAAQC,EAD/B,EAC+BA,KAAMC,EADrC,EACqCA,cAAkBL,EADvD,mEAEP,OACE,kBAASA,EACP,YAACM,EAAD,KACE,YAACC,EAAD,KACGN,GAAQ,YAACO,EAAD,KAAOP,GACfP,GACC,YAACe,EAAD,CAAOL,KAAMA,EAAMM,OAAQL,GACzB,YAAC,IAAD,KAAcX,GACbQ,GAAY,YAACS,EAAD,KAAWT,KAI7BC,GAAU,YAACS,EAAD,CAAQR,KAAMA,GAAOD,IAGjCC,GAAQ,uBAAMA,Q,GAtBkBS,IAAMC,WAAzCf,E,yCAAAA,EACGgB,aAAe,CACpBV,eAAe,GA+BnB,IAAMC,EAAkB,YAAO,MAAP,8CAAH,2DAIfC,EAAe,YAAO,MAAP,2CAAH,mCAIZE,EAAQ,YAAO,MAAP,qCACV,SAAAO,GAAC,OACAA,EAAEN,QAAH,mDAFO,YAMC,SAAAM,GAAC,OACTA,EAAEZ,KAAF,UACOa,YAAM,GADb,YACmBA,YAAM,GADzB,YAC+BA,YAAM,GADrC,gBAEOA,YAAM,GAFb,YAEmBA,YAAM,GAFzB,YAE+BA,YAAM,GAFrC,QAPO,KAWLN,EAAW,YAAO,MAAP,uCAAH,UACH,SAAAK,GAAC,OAAIA,EAAEE,MAAMC,UADV,+BAGC,SAAAH,GAAC,OAAIA,EAAEE,MAAME,gBAHd,YAIDH,YAAM,KAJL,MAIeA,YAAM,GAJrB,KAORT,EAAO,YAAO,MAAP,mCAAH,gBACQS,YAAM,GADd,KAIJL,EAAS,YAAO,MAAP,sCACX,SAAAI,GAAC,OAAKA,EAAEZ,KAAF,sBAAwBa,YAAM,IAAO,OADnC,KAINI,EAAqB,YAAOtB,EAAP,iDAAH,8BAIPkB,YAAM,GAJC,KAOTI,O,urBCpETC,E,kLASJC,aAAe,SAAAC,GACb,IAAMC,EAAU,EAAKC,MAAMC,KAE3B,EAAKC,UACH,SAAAF,GAAK,MAAK,CACRC,KAAMD,EAAMC,KAAKE,QAAO,qBAAEC,KAAeN,EAAcM,SAF3D,cAIE,sBAAAC,EAAA,+EAEU,EAAKC,IAAIC,eAAe,uBAAwB,CACpDC,OAAQ,SACRP,KAAM,CAACH,cAAeA,EAAcM,MAJ1C,OAOIK,YAAkBC,YAAE,kBAPxB,gDASI,EAAKR,SAAS,CACZD,KAAMF,IAERY,YAAgBD,YAAE,6CAZtB,2D,qDAdF,MAAO,CAAC,CAAC,OAAQ,2B,iCAIjB,MAAO,0B,mCA4BI,WACJT,EAAQhC,KAAK+B,MAAbC,KACDW,EAA0B,IAAhBX,EAAKY,OACrB,OACE,uBACE,YAAC,IAAD,CAAoB7C,MAAM,4BAC1B,YAAC8C,EAAD,KACGC,YAAI,qEAAsE,CACzEC,KAAM,YAAC,OAAD,CAAMC,GAAG,8BAInB,YAAC,IAAD,KACE,YAAC,IAAD,KAAcP,YAAE,0BAEhB,YAAC,IAAD,KACGE,GACC,YAAC,IAAD,KACGF,YAAE,wDAILE,GACA,uBACGX,EAAKiB,KAAI,SAAApB,GAAa,OACrB,YAACqB,EAAD,CAAiBC,IAAKtB,EAAcM,IAClC,YAACiB,EAAD,KACE,YAACC,EAAD,KAAkBxB,EAAcyB,YAAYC,MAC3C1B,EAAc2B,aACb,YAACC,EAAD,KACE,iBAAGC,KAAM7B,EAAc2B,aACpB3B,EAAc2B,cAIrB,YAACG,EAAD,KAAS9B,EAAc+B,OAAOC,KAAK,QAErC,YAAC,IAAD,CACEC,KAAK,QACLC,QAAS,kBAAM,EAAKnC,aAAaC,IACjCvB,KAAM,YAAC,IAAD,oB,GA1EQR,KAuFrB6B,YAEf,IAAMkB,EAAc,YAAO,IAAP,0CAAH,cACF,SAAAxB,GAAC,OAAIA,EAAEE,MAAMyC,wBADX,kBAEE1C,YAAM,GAFR,KAKX4B,EAAkB,YAAOe,IAAP,8CAAH,8CAIfb,EAAqB,YAAO,MAAP,iDAAH,sEAMlBC,EAAkB,YAAO,MAAP,8CAAH,kCAEF/B,YAAM,IAFJ,KASfmC,EAAM,YAAO,MAAP,kCAAH,iBACUnC,YAAM,IADhB,eAEM,SAAAD,GAAC,OAAIA,EAAEE,MAAMyC,wBAFnB,KAKHL,EAAS,YAAO,MAAP,qCAAH,UACD,SAAAtC,GAAC,OAAIA,EAAEE,MAAM2C,UADZ,eAEG,SAAA7C,GAAC,OAAIA,EAAEE,MAAMyC,wBAFhB","file":"AccountAuthorizations.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  action?: React.ReactNode;\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, subtitle, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 ${space(3)};\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport {Link, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {IconDelete} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {ApiApplication} from 'app/types';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\ntype Authorization = {\n  application: ApiApplication;\n  homepageUrl: string;\n  id: string;\n  scopes: string[];\n};\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype State = {\n  data: Authorization[];\n} & AsyncView['state'];\n\nclass AccountAuthorizations extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['data', '/api-authorizations/']];\n  }\n\n  getTitle() {\n    return 'Approved Applications';\n  }\n\n  handleRevoke = authorization => {\n    const oldData = this.state.data;\n\n    this.setState(\n      state => ({\n        data: state.data.filter(({id}) => id !== authorization.id),\n      }),\n      async () => {\n        try {\n          await this.api.requestPromise('/api-authorizations/', {\n            method: 'DELETE',\n            data: {authorization: authorization.id},\n          });\n\n          addSuccessMessage(t('Saved changes'));\n        } catch (_err) {\n          this.setState({\n            data: oldData,\n          });\n          addErrorMessage(t('Unable to save changes, please try again'));\n        }\n      }\n    );\n  };\n\n  renderBody() {\n    const {data} = this.state;\n    const isEmpty = data.length === 0;\n    return (\n      <div>\n        <SettingsPageHeader title=\"Authorized Applications\" />\n        <Description>\n          {tct('You can manage your own applications via the [link:API dashboard].', {\n            link: <Link to=\"/settings/account/api/\" />,\n          })}\n        </Description>\n\n        <Panel>\n          <PanelHeader>{t('Approved Applications')}</PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {t(\"You haven't approved any third party applications.\")}\n              </EmptyMessage>\n            )}\n\n            {!isEmpty && (\n              <div>\n                {data.map(authorization => (\n                  <PanelItemCenter key={authorization.id}>\n                    <ApplicationDetails>\n                      <ApplicationName>{authorization.application.name}</ApplicationName>\n                      {authorization.homepageUrl && (\n                        <Url>\n                          <a href={authorization.homepageUrl}>\n                            {authorization.homepageUrl}\n                          </a>\n                        </Url>\n                      )}\n                      <Scopes>{authorization.scopes.join(', ')}</Scopes>\n                    </ApplicationDetails>\n                    <Button\n                      size=\"small\"\n                      onClick={() => this.handleRevoke(authorization)}\n                      icon={<IconDelete />}\n                    />\n                  </PanelItemCenter>\n                ))}\n              </div>\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default AccountAuthorizations;\n\nconst Description = styled('p')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  margin-bottom: ${space(4)};\n`;\n\nconst PanelItemCenter = styled(PanelItem)`\n  align-items: center;\n`;\n\nconst ApplicationDetails = styled('div')`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nconst ApplicationName = styled('div')`\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n`;\n\n/**\n * Intentionally wrap <a> so that it does not take up full width and cause\n * hit box issues\n */\nconst Url = styled('div')`\n  margin-bottom: ${space(0.5)};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n\nconst Scopes = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n"],"sourceRoot":""}