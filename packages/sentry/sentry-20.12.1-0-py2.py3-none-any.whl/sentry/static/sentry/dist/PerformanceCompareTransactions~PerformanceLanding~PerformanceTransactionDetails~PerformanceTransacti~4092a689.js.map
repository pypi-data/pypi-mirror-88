{"version":3,"sources":["webpack:///./app/components/charts/styles.tsx","webpack:///./app/views/performance/transactionVitals/constants.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx","webpack:///./app/views/performance/vitalDetail/utils.tsx","webpack:///./app/views/performance/utils.tsx","webpack:///./app/utils/getCurrentSentryReactTransaction.tsx","webpack:///./app/utils/discover/discoverQuery.tsx","webpack:///./app/utils/discover/genericDiscoverQuery.tsx","webpack:///./app/components/discoverButton.tsx"],"names":["ChartControls","space","p","theme","border","SectionHeading","subText","fontSizeMedium","SectionValue","InlineContainer","NUM_BUCKETS","PERCENTILE","WEB_VITAL_DETAILS","WebVital","FP","slug","name","t","acronym","description","failureThreshold","type","measurementType","FCP","LCP","FID","CLS","TTFB","RequestTime","LONG_WEB_VITAL_NAMES","Object","fromEntries","values","map","value","WEB_VITAL_ACRONYMS","FILTER_OPTIONS","label","_VITAL_GROUPS","vitals","min","precision","_COLORS","charts","getColorPalette","reduce","count","length","reverse","VITAL_GROUPS","group","colors","splice","ZOOM_KEYS","keys","forEach","vital","vitalSlug","push","TransactionFilterOptions","transactionSummaryRouteWithQuery","orgSlug","transaction","projectID","query","unselectedSeries","display","trendDisplay","showTransactions","pathname","generateTransactionSummaryRoute","project","environment","statsPeriod","start","end","VitalState","webVitalPoor","webVitalMeh","vitalsPoorFields","vitalsMehFields","vitalsBaseFields","vitalsP75Fields","vitalStateColors","POOR","red300","MEH","yellow300","GOOD","green300","IconFire","IconWarning","IconCheckmark","vitalDetailRouteWithQuery","vitalName","generateVitalDetailRoute","vitalNameFromLocation","location","_vitalName","decodeScalar","find","v","getVitalDetailTablePoorStatusFunction","vitalThreshold","getAggregateAlias","getVitalDetailTableMehStatusFunction","vitalMap","vitalDescription","vitalAbbreviations","getMaxOfSeries","series","max","Infinity","data","point","Math","getPerformanceLandingUrl","organization","getTransactionSearchQuery","String","trim","getTransactionDetailsUrl","eventSlug","getTransactionComparisonUrl","baselineEventSlug","regressionEventSlug","addRoutePerformanceContext","selection","Sentry","getScope","getTransaction","days","statsPeriodToDays","datetime","period","seconds","floor","setTag","toString","getTransactionName","DiscoverQuery","props","route","withApi","GenericDiscoverQuery","state","isLoading","tableFetchID","undefined","error","tableData","pageLinks","_shouldRefetchData","prevProps","thisAPIPayload","getPayload","otherAPIPayload","isAPIPayloadSimilar","limit","cursor","fetchData","api","beforeFetch","afterFetch","eventView","setError","noPagination","isValid","url","Symbol","apiPayload","setState","per_page","requestPromise","method","includeAllArgs","then","jqXHR","prevState","getResponseHeader","err","responseJSON","detail","this","refetchCondition","eventViewValidation","shouldRefetchExternal","shouldRefetchData","getRequestPayload","getEventsAPIPayload","childrenProps","children","React","Component","DiscoverButton","buttonProps","features","hasFeature","disabled"],"mappings":"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","file":"PerformanceCompareTransactions~PerformanceLanding~PerformanceTransactionDetails~PerformanceTransacti~4092a689.js","sourcesContent":["import styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\n\nexport const ChartControls = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  padding: ${space(1)} ${space(3)};\n  border-top: 1px solid ${p => p.theme.border};\n`;\n\nexport const SubHeading = styled('h3')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  font-weight: normal;\n  color: ${p => p.theme.textColor};\n  margin: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const SectionHeading = styled('h4')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  grid-gap: ${space(1)};\n  align-items: center;\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: ${space(1)} 0;\n  line-height: 1.3;\n`;\n\nexport const SectionValue = styled('span')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-right: ${space(1)};\n`;\n\nexport const InlineContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-right: ${space(2)};\n\n  > h4 {\n    margin-right: ${space(1)};\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n","import {t} from 'app/locale';\nimport {SelectValue} from 'app/types';\nimport {measurementType, WebVital} from 'app/utils/discover/fields';\nimport theme from 'app/utils/theme';\n\nimport {Vital, VitalGroup} from './types';\n\nexport const NUM_BUCKETS = 100;\n\nexport const PERCENTILE = 0.75;\n\nexport const WEB_VITAL_DETAILS: Record<WebVital, Vital> = {\n  [WebVital.FP]: {\n    slug: 'fp',\n    name: t('First Paint'),\n    acronym: 'FP',\n    description: t(\n      'Render time of the first pixel loaded in the viewport (may overlap with FCP).'\n    ),\n    failureThreshold: 3000,\n    type: measurementType(WebVital.FP),\n  },\n  [WebVital.FCP]: {\n    slug: 'fcp',\n    name: t('First Contentful Paint'),\n    acronym: 'FCP',\n    description: t(\n      'Render time of the first image, text or other DOM node in the viewport.'\n    ),\n    failureThreshold: 3000,\n    type: measurementType(WebVital.FCP),\n  },\n  [WebVital.LCP]: {\n    slug: 'lcp',\n    name: t('Largest Contentful Paint'),\n    acronym: 'LCP',\n    description: t(\n      'Render time of the largest image, text or other DOM node in the viewport.'\n    ),\n    failureThreshold: 4000,\n    type: measurementType(WebVital.LCP),\n  },\n  [WebVital.FID]: {\n    slug: 'fid',\n    name: t('First Input Delay'),\n    acronym: 'FID',\n    description: t(\n      'Response time of the browser to a user interaction (clicking, tapping, etc).'\n    ),\n    failureThreshold: 300,\n    type: measurementType(WebVital.FID),\n  },\n  [WebVital.CLS]: {\n    slug: 'cls',\n    name: t('Cumulative Layout Shift'),\n    acronym: 'CLS',\n    description: t(\n      'Sum of layout shift scores that measure the visual stability of the page.'\n    ),\n    failureThreshold: 0.25,\n    type: measurementType(WebVital.CLS),\n  },\n  [WebVital.TTFB]: {\n    slug: 'ttfb',\n    name: t('Time to First Byte'),\n    acronym: 'TTFB',\n    description: t(\n      \"The time that it takes for a user's browser to receive the first byte of page content.\"\n    ),\n    failureThreshold: 600,\n    type: measurementType(WebVital.TTFB),\n  },\n  [WebVital.RequestTime]: {\n    slug: 'ttfb.requesttime',\n    name: t('Request Time'),\n    acronym: 'RT',\n    description: t(\n      'Captures the time spent making the request and receiving the first byte of the response.'\n    ),\n    failureThreshold: 600,\n    type: measurementType(WebVital.RequestTime),\n  },\n};\n\n// translate known short form names into their long forms\nexport const LONG_WEB_VITAL_NAMES = Object.fromEntries(\n  Object.values(WEB_VITAL_DETAILS).map(value => {\n    return [value.slug, value.name];\n  })\n);\n\nexport const WEB_VITAL_ACRONYMS = Object.fromEntries(\n  Object.values(WEB_VITAL_DETAILS).map(value => {\n    return [value.slug, value.acronym];\n  })\n);\n\nexport const FILTER_OPTIONS: SelectValue<string>[] = [\n  {label: t('Exclude Outliers'), value: 'exclude_outliers'},\n  {label: t('View All'), value: 'all'},\n];\n\n/**\n * This defines the grouping for histograms. Histograms that are in the same group\n * will be queried together on initial load for alignment. However, the zoom controls\n * are defined for each measurement independently.\n */\nconst _VITAL_GROUPS = [\n  {\n    vitals: [WebVital.FP, WebVital.FCP, WebVital.LCP],\n    min: 0,\n  },\n  {\n    vitals: [WebVital.FID],\n    min: 0,\n    precision: 2,\n  },\n  {\n    vitals: [WebVital.CLS],\n    min: 0,\n    precision: 2,\n  },\n];\n\nconst _COLORS = [\n  ...theme.charts.getColorPalette(\n    _VITAL_GROUPS.reduce((count, {vitals}) => count + vitals.length, 0) - 1\n  ),\n].reverse();\n\nexport const VITAL_GROUPS: VitalGroup[] = _VITAL_GROUPS.map(group => ({\n  ...group,\n  colors: _COLORS.splice(0, group.vitals.length),\n}));\n\nexport const ZOOM_KEYS = _VITAL_GROUPS.reduce((keys: string[], {vitals}) => {\n  vitals.forEach(vital => {\n    const vitalSlug = WEB_VITAL_DETAILS[vital].slug;\n    keys.push(`${vitalSlug}Start`);\n    keys.push(`${vitalSlug}End`);\n  });\n  return keys;\n}, []);\n","import {Query} from 'history';\n\nimport {TrendFunctionField} from '../trends/types';\n\nimport {DisplayModes} from './charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/`;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendDisplay,\n  showTransactions,\n}: {\n  orgSlug: string;\n  transaction: string;\n  query: Query;\n  display?: DisplayModes;\n  trendDisplay?: TrendFunctionField;\n  unselectedSeries?: string | string[];\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendDisplay,\n    },\n  };\n}\n","import {Location, Query} from 'history';\n\nimport {IconCheckmark, IconFire, IconWarning} from 'app/icons';\nimport {Series} from 'app/types/echarts';\nimport {getAggregateAlias, WebVital} from 'app/utils/discover/fields';\nimport {decodeScalar} from 'app/utils/queryString';\nimport theme from 'app/utils/theme';\n\nexport function generateVitalDetailRoute({orgSlug}: {orgSlug: string}): string {\n  return `/organizations/${orgSlug}/performance/vitaldetail/`;\n}\n\nexport const webVitalPoor = {\n  [WebVital.FP]: 3000,\n  [WebVital.FCP]: 3000,\n  [WebVital.LCP]: 4000,\n  [WebVital.FID]: 300,\n  [WebVital.CLS]: 0.25,\n};\n\nexport const webVitalMeh = {\n  [WebVital.FP]: 1000,\n  [WebVital.FCP]: 1000,\n  [WebVital.LCP]: 2500,\n  [WebVital.FID]: 100,\n  [WebVital.CLS]: 0.1,\n};\n\nexport const vitalsPoorFields = {\n  [WebVital.FP]: `count_at_least(measurements.fp, 3000)`,\n  [WebVital.FCP]: `count_at_least(measurements.fcp, 3000)`,\n  [WebVital.LCP]: `count_at_least(measurements.lcp, 4000)`,\n  [WebVital.FID]: `count_at_least(measurements.fid, 300)`,\n  [WebVital.CLS]: `count_at_least(measurements.cls, 0.25)`,\n};\n\nexport const vitalsMehFields = {\n  [WebVital.FP]: `count_at_least(measurements.fp, 1000)`,\n  [WebVital.FCP]: `count_at_least(measurements.fcp, 1000)`,\n  [WebVital.LCP]: `count_at_least(measurements.lcp, 2500)`,\n  [WebVital.FID]: `count_at_least(measurements.fid, 100)`,\n  [WebVital.CLS]: `count_at_least(measurements.cls, 0.1)`,\n};\n\nexport const vitalsBaseFields = {\n  [WebVital.FP]: 'count_at_least(measurements.fp, 0)',\n  [WebVital.FCP]: 'count_at_least(measurements.fcp, 0)',\n  [WebVital.LCP]: 'count_at_least(measurements.lcp, 0)',\n  [WebVital.FID]: 'count_at_least(measurements.fid, 0)',\n  [WebVital.CLS]: 'count_at_least(measurements.cls, 0)',\n};\n\nexport const vitalsP75Fields = {\n  [WebVital.FP]: 'p75(measurements.fp)',\n  [WebVital.FCP]: 'p75(measurements.fcp)',\n  [WebVital.LCP]: 'p75(measurements.lcp)',\n  [WebVital.FID]: 'p75(measurements.fid)',\n  [WebVital.CLS]: 'p75(measurements.cls)',\n};\n\nexport enum VitalState {\n  POOR = 'Poor',\n  MEH = 'Meh',\n  GOOD = 'Good',\n}\n\nexport const vitalStateColors = {\n  [VitalState.POOR]: theme.red300,\n  [VitalState.MEH]: theme.yellow300,\n  [VitalState.GOOD]: theme.green300,\n};\n\nexport const vitalStateIcons = {\n  [VitalState.POOR]: IconFire,\n  [VitalState.MEH]: IconWarning,\n  [VitalState.GOOD]: IconCheckmark,\n};\n\nexport function vitalDetailRouteWithQuery({\n  orgSlug,\n  vitalName,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  vitalName: string;\n  query: Query;\n  projectID?: string | string[];\n}) {\n  const pathname = generateVitalDetailRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      vitalName,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nexport function vitalNameFromLocation(location: Location): WebVital {\n  const _vitalName = decodeScalar(location.query.vitalName);\n\n  const vitalName = Object.values(WebVital).find(v => v === _vitalName);\n\n  if (vitalName) {\n    return vitalName;\n  } else {\n    return WebVital.LCP;\n  }\n}\n\nexport function getVitalDetailTablePoorStatusFunction(vitalName: WebVital): string {\n  const vitalThreshold = webVitalPoor[vitalName];\n  const statusFunction = `compare_numeric_aggregate(${getAggregateAlias(\n    `p75(${vitalName})`\n  )},greater,${vitalThreshold})`;\n  return statusFunction;\n}\n\nexport function getVitalDetailTableMehStatusFunction(vitalName: WebVital): string {\n  const vitalThreshold = webVitalMeh[vitalName];\n  const statusFunction = `compare_numeric_aggregate(${getAggregateAlias(\n    `p75(${vitalName})`\n  )},greater,${vitalThreshold})`;\n  return statusFunction;\n}\n\nexport const vitalMap: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]: 'First Contentful Paint',\n  [WebVital.CLS]: 'Cumulative Layout Shift',\n  [WebVital.FID]: 'First Input Delay',\n  [WebVital.LCP]: 'Largest Contentful Paint',\n};\n\nexport const vitalChartTitleMap = vitalMap;\n\nexport const vitalDescription: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]:\n    'First Contentful Paint (FCP) measures the amount of time the first content takes to render in the viewport. Like FP, this could also show up in any form from the document object model (DOM), such as images, SVGs, or text blocks.',\n  [WebVital.CLS]:\n    'Cumulative Layout Shift (CLS) is the sum of individual layout shift scores for every unexpected element shift during the rendering process. Imagine navigating to an article and trying to click a link before the page finishes loading. Before your cursor even gets there, the link may have shifted down due to an image rendering. Rather than using duration for this Web Vital, the CLS score represents the degree of disruptive and visually unstable shifts.',\n  [WebVital.FID]:\n    'First Input Delay measures the response time when the user tries to interact with the viewport. Actions maybe include clicking a button, link or other custom Javascript controller. It is key in helping the user determine if a page is usable or not.',\n  [WebVital.LCP]:\n    'Largest Contentful Paint (LCP) measures the render time for the largest content to appear in the viewport. This may be in any form from the document object model (DOM), such as images, SVGs, or text blocks. It’s the largest pixel area in the viewport, thus most visually defining. LCP helps developers understand how long it takes to see the main content on the page.',\n};\n\nexport const vitalAbbreviations: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]: 'FCP',\n  [WebVital.CLS]: 'CLS',\n  [WebVital.FID]: 'FID',\n  [WebVital.LCP]: 'LCP',\n};\n\nexport function getMaxOfSeries(series: Series[]) {\n  let max = -Infinity;\n  for (const {data} of series) {\n    for (const point of data) {\n      max = Math.max(max, point.value);\n    }\n  }\n  return max;\n}\n","import {Location, LocationDescriptor, Query} from 'history';\n\nimport {GlobalSelection, OrganizationSummary} from 'app/types';\nimport {statsPeriodToDays} from 'app/utils/dates';\nimport getCurrentSentryReactTransaction from 'app/utils/getCurrentSentryReactTransaction';\nimport {decodeScalar} from 'app/utils/queryString';\n\nexport function getPerformanceLandingUrl(organization: OrganizationSummary): string {\n  return `/organizations/${organization.slug}/performance/`;\n}\n\nexport function getTransactionSearchQuery(location: Location) {\n  return String(decodeScalar(location.query.query) || '').trim();\n}\n\nexport function getTransactionDetailsUrl(\n  organization: OrganizationSummary,\n  eventSlug: string,\n  transaction: string,\n  query: Query\n): LocationDescriptor {\n  return {\n    pathname: `/organizations/${organization.slug}/performance/${eventSlug}/`,\n    query: {\n      ...query,\n      transaction,\n    },\n  };\n}\n\nexport function getTransactionComparisonUrl({\n  organization,\n  baselineEventSlug,\n  regressionEventSlug,\n  transaction,\n  query,\n}: {\n  organization: OrganizationSummary;\n  baselineEventSlug: string;\n  regressionEventSlug: string;\n  transaction: string;\n  query: Query;\n}): LocationDescriptor {\n  return {\n    pathname: `/organizations/${organization.slug}/performance/compare/${baselineEventSlug}/${regressionEventSlug}/`,\n    query: {\n      ...query,\n      transaction,\n    },\n  };\n}\n\nexport function addRoutePerformanceContext(selection: GlobalSelection) {\n  const transaction = getCurrentSentryReactTransaction();\n  const days = statsPeriodToDays(\n    selection.datetime.period,\n    selection.datetime.start,\n    selection.datetime.end\n  );\n  const seconds = Math.floor(days * 86400);\n\n  transaction?.setTag('statsPeriod', seconds.toString());\n}\n\nexport function getTransactionName(location: Location): string | undefined {\n  const {transaction} = location.query;\n\n  return decodeScalar(transaction);\n}\n","import * as Sentry from '@sentry/react';\n\n/**\n * Gets the current transaction, if one exists.\n */\nexport default function getCurrentSentryReactTransaction() {\n  return Sentry?.getCurrentHub()?.getScope()?.getTransaction();\n}\n","import React from 'react';\n\nimport {MetaType} from 'app/utils/discover/eventView';\nimport withApi from 'app/utils/withApi';\n\nimport GenericDiscoverQuery, {DiscoverQueryProps} from './genericDiscoverQuery';\n\n/**\n * An individual row in a DiscoverQuery result\n */\nexport type TableDataRow = {\n  id: string;\n  [key: string]: React.ReactText;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata.\n */\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\nfunction DiscoverQuery(props: DiscoverQueryProps) {\n  return <GenericDiscoverQuery<TableData, {}> route=\"eventsv2\" {...props} />;\n}\n\nexport default withApi(DiscoverQuery);\n","import React from 'react';\nimport {Location} from 'history';\n\nimport {EventQuery} from 'app/actionCreators/events';\nimport {Client} from 'app/api';\nimport EventView, {\n  isAPIPayloadSimilar,\n  LocationQuery,\n} from 'app/utils/discover/eventView';\n\nexport type GenericChildrenProps<T> = {\n  isLoading: boolean;\n  error: null | string;\n  tableData: T | null;\n  pageLinks: null | string;\n};\n\nexport type DiscoverQueryProps = {\n  api: Client;\n  /**\n   * Used as the default source for cursor values.\n   */\n  location: Location;\n  eventView: EventView;\n  orgSlug: string;\n  /**\n   * Record limit to get.\n   */\n  limit?: number;\n  /**\n   * Explicit cursor value if you aren't using `location.query.cursor` because there are\n   * multiple paginated results on the page.\n   */\n  cursor?: string;\n  /**\n   * Include this whenever pagination won't be used. Limit can still be used when this is\n   * passed, but cursor will be ignored.\n   */\n  noPagination?: boolean;\n};\n\ntype RequestProps<P> = DiscoverQueryProps & P;\n\ntype ReactProps<T> = {\n  children?: (props: GenericChildrenProps<T>) => React.ReactNode;\n};\n\ntype Props<T, P> = RequestProps<P> &\n  ReactProps<T> & {\n    /**\n     * Route to the endpoint\n     */\n    route: string;\n    /**\n     * Allows components to modify the payload before it is set.\n     */\n    getRequestPayload?: (props: Props<T, P>) => any;\n    /**\n     * An external hook in addition to the event view check to check if data should be refetched\n     */\n    shouldRefetchData?: (prevProps: Props<T, P>, props: Props<T, P>) => boolean;\n    /**\n     * A hook before fetch that can be used to do things like clearing the api\n     */\n    beforeFetch?: (api: Client) => void;\n    /**\n     * A hook to modify data into the correct output after data has been received\n     */\n    afterFetch?: (data: any, props: Props<T, P>) => T;\n    /**\n     * A callback to set an error so that the error can be rendered in parent components\n     */\n    setError?: (msg: string | undefined) => void;\n  };\n\ntype State<T> = {\n  tableFetchID: symbol | undefined;\n} & GenericChildrenProps<T>;\n\n/**\n * Generic component for discover queries\n */\nclass GenericDiscoverQuery<T, P> extends React.Component<Props<T, P>, State<T>> {\n  state: State<T> = {\n    isLoading: true,\n    tableFetchID: undefined,\n    error: null,\n\n    tableData: null,\n    pageLinks: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props<T, P>) {\n    // Reload data if we aren't already loading,\n    const refetchCondition = !this.state.isLoading && this._shouldRefetchData(prevProps);\n\n    // or if we've moved from an invalid view state to a valid one,\n    const eventViewValidation =\n      prevProps.eventView.isValid() === false && this.props.eventView.isValid();\n\n    const shouldRefetchExternal = this.props.shouldRefetchData\n      ? this.props.shouldRefetchData(prevProps, this.props)\n      : false;\n\n    if (refetchCondition || eventViewValidation || shouldRefetchExternal) {\n      this.fetchData();\n    }\n  }\n\n  getPayload(props: Props<T, P>) {\n    if (this.props.getRequestPayload) {\n      return this.props.getRequestPayload(props);\n    }\n    return props.eventView.getEventsAPIPayload(props.location);\n  }\n\n  _shouldRefetchData = (prevProps: Props<T, P>): boolean => {\n    const thisAPIPayload = this.getPayload(this.props);\n    const otherAPIPayload = this.getPayload(prevProps);\n\n    return (\n      !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload) ||\n      prevProps.limit !== this.props.limit ||\n      prevProps.route !== this.props.route ||\n      prevProps.cursor !== this.props.cursor\n    );\n  };\n\n  fetchData = () => {\n    const {\n      api,\n      beforeFetch,\n      afterFetch,\n      eventView,\n      orgSlug,\n      route,\n      limit,\n      cursor,\n      setError,\n      noPagination,\n    } = this.props;\n\n    if (!eventView.isValid()) {\n      return;\n    }\n\n    const url = `/organizations/${orgSlug}/${route}/`;\n    const tableFetchID = Symbol(`tableFetchID`);\n    const apiPayload: Partial<EventQuery & LocationQuery> = this.getPayload(this.props);\n\n    this.setState({isLoading: true, tableFetchID});\n\n    setError?.(undefined);\n\n    if (limit) {\n      apiPayload.per_page = limit;\n    }\n    if (noPagination) {\n      apiPayload.noPagination = noPagination;\n    }\n    if (cursor) {\n      apiPayload.cursor = cursor;\n    }\n\n    beforeFetch?.(api);\n\n    api\n      .requestPromise(url, {\n        method: 'GET',\n        includeAllArgs: true,\n        query: {\n          // marking apiPayload as any so as to not cause typescript errors\n          ...(apiPayload as any),\n        },\n      })\n      .then(([data, _, jqXHR]) => {\n        if (this.state.tableFetchID !== tableFetchID) {\n          // invariant: a different request was initiated after this request\n          return;\n        }\n\n        const tableData = afterFetch ? afterFetch(data, this.props) : data;\n\n        this.setState(prevState => ({\n          isLoading: false,\n          tableFetchID: undefined,\n          error: null,\n          pageLinks: jqXHR?.getResponseHeader('Link') ?? prevState.pageLinks,\n          tableData,\n        }));\n      })\n      .catch(err => {\n        const error = err?.responseJSON?.detail ?? null;\n        this.setState({\n          isLoading: false,\n          tableFetchID: undefined,\n          error,\n          tableData: null,\n        });\n        if (setError) {\n          setError(error);\n        }\n      });\n  };\n\n  render() {\n    const {isLoading, error, tableData, pageLinks} = this.state;\n\n    const childrenProps: GenericChildrenProps<T> = {\n      isLoading,\n      error,\n      tableData,\n      pageLinks,\n    };\n    const children: ReactProps<T>['children'] = this.props.children; // Explicitly setting type due to issues with generics and React's children\n    return children?.(childrenProps);\n  }\n}\n\nexport default GenericDiscoverQuery;\n","import React from 'react';\n\nimport Feature from 'app/components/acl/feature';\nimport Button from 'app/components/button';\n\ntype Props = React.PropsWithChildren<{\n  className?: string;\n}> &\n  React.ComponentProps<typeof Button>;\n\n/**\n * Provide a button that turns itself off if the current organization\n * doesn't have access to discover results.\n */\nfunction DiscoverButton({children, ...buttonProps}: Props) {\n  return (\n    <Feature features={['organizations:discover-basic']}>\n      {({hasFeature}) => (\n        <Button disabled={!hasFeature} {...buttonProps}>\n          {children}\n        </Button>\n      )}\n    </Feature>\n  );\n}\n\nexport default DiscoverButton;\n"],"sourceRoot":""}