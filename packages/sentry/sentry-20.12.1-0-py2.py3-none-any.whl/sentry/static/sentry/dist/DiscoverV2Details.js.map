{"version":3,"sources":["webpack:///./app/components/charts/styles.tsx","webpack:///./app/views/performance/transactionVitals/constants.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx","webpack:///./app/utils/discover/discoverQuery.tsx","webpack:///./app/utils/discover/genericDiscoverQuery.tsx","webpack:///./app/components/discoverButton.tsx","webpack:///./app/views/eventsV2/breadcrumb.tsx","webpack:///./app/views/eventsV2/eventDetails/linkedIssue.tsx","webpack:///./app/views/eventsV2/eventDetails/content.tsx","webpack:///./app/views/eventsV2/eventDetails/index.tsx"],"names":["ChartControls","space","p","theme","border","SectionHeading","subText","fontSizeMedium","SectionValue","InlineContainer","NUM_BUCKETS","PERCENTILE","WEB_VITAL_DETAILS","WebVital","FP","slug","name","t","acronym","description","failureThreshold","type","measurementType","FCP","LCP","FID","CLS","TTFB","RequestTime","LONG_WEB_VITAL_NAMES","Object","fromEntries","values","map","value","WEB_VITAL_ACRONYMS","FILTER_OPTIONS","label","_VITAL_GROUPS","vitals","min","precision","_COLORS","charts","getColorPalette","reduce","count","length","reverse","VITAL_GROUPS","group","colors","splice","ZOOM_KEYS","keys","forEach","vital","vitalSlug","push","TransactionFilterOptions","transactionSummaryRouteWithQuery","orgSlug","transaction","projectID","query","unselectedSeries","display","trendDisplay","showTransactions","pathname","generateTransactionSummaryRoute","project","environment","statsPeriod","start","end","DiscoverQuery","props","route","withApi","GenericDiscoverQuery","state","isLoading","tableFetchID","undefined","error","tableData","pageLinks","_shouldRefetchData","prevProps","thisAPIPayload","getPayload","otherAPIPayload","isAPIPayloadSimilar","limit","cursor","fetchData","api","beforeFetch","afterFetch","eventView","setError","noPagination","isValid","url","Symbol","apiPayload","setState","per_page","requestPromise","method","includeAllArgs","then","data","jqXHR","prevState","getResponseHeader","err","responseJSON","detail","this","refetchCondition","eventViewValidation","shouldRefetchExternal","shouldRefetchData","getRequestPayload","getEventsAPIPayload","location","childrenProps","children","React","Component","DiscoverButton","buttonProps","features","hasFeature","disabled","DiscoverBreadcrumb","crumbs","event","organization","discoverTarget","includes","getDiscoverLandingUrl","generateBlankQueryStringObject","getGlobalSelectionQuery","to","getResultsViewUrlTarget","getCrumbs","defaultProps","LinkedIssue","groupId","height","bottomGutter","disableLog","disableReport","errors","hasNotFound","find","resp","status","icon","size","eventId","issueUrl","permalink","Section","StyledIssueCard","IssueCardHeader","StyledLink","data-test-id","StyledShortId","shortId","avatar","avatarSize","hideName","StyledSeenByList","seenBy","maxVisibleAvatars","IssueCardBody","IssueCardFooter","lastSeen","firstSeen","AsyncComponent","borderRadius","Link","backgroundSecondary","SeenByList","ShortId","textColor","gray300","fontSizeSmall","EventDetailsContent","loading","reloading","isSidebarVisible","toggleSidebar","generateTagKey","tag","key","FIELD_TAGS","generateTagUrl","eventReference","id","tagKey","getExpandedResults","params","eventSlug","field","renderContent","trackAnalyticsEvent","eventKey","eventName","event_type","organization_id","parseInt","transactionName","tags","transactionSummaryTarget","Fragment","StyledHeaderActions","gap","onClick","priority","fullWidth","orgId","slugs","projectId","projects","initiallyLoaded","getViewChildTransactionTarget","childTransactionProps","eventDetailsRoute","generateQueryStringObject","showExampleCommit","showTagSummary","groupID","eventID","generateUrl","notFound","permissionDenied","message","title","generateTitle","objSlug","split","EventHeader","getTitle","getMessage","EventSubheading","Layout","breakpoints","EventDetails","getEventSlug","trim","getEventView","EventView","fromLocation","getDocumentTitle","String","documentTitle","join","StyledPageContent","withOrganization","PageContent"],"mappings":"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","file":"DiscoverV2Details.js","sourcesContent":["import styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\n\nexport const ChartControls = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  padding: ${space(1)} ${space(3)};\n  border-top: 1px solid ${p => p.theme.border};\n`;\n\nexport const SubHeading = styled('h3')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  font-weight: normal;\n  color: ${p => p.theme.textColor};\n  margin: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const SectionHeading = styled('h4')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  grid-gap: ${space(1)};\n  align-items: center;\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: ${space(1)} 0;\n  line-height: 1.3;\n`;\n\nexport const SectionValue = styled('span')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-right: ${space(1)};\n`;\n\nexport const InlineContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-right: ${space(2)};\n\n  > h4 {\n    margin-right: ${space(1)};\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n","import {t} from 'app/locale';\nimport {SelectValue} from 'app/types';\nimport {measurementType, WebVital} from 'app/utils/discover/fields';\nimport theme from 'app/utils/theme';\n\nimport {Vital, VitalGroup} from './types';\n\nexport const NUM_BUCKETS = 100;\n\nexport const PERCENTILE = 0.75;\n\nexport const WEB_VITAL_DETAILS: Record<WebVital, Vital> = {\n  [WebVital.FP]: {\n    slug: 'fp',\n    name: t('First Paint'),\n    acronym: 'FP',\n    description: t(\n      'Render time of the first pixel loaded in the viewport (may overlap with FCP).'\n    ),\n    failureThreshold: 3000,\n    type: measurementType(WebVital.FP),\n  },\n  [WebVital.FCP]: {\n    slug: 'fcp',\n    name: t('First Contentful Paint'),\n    acronym: 'FCP',\n    description: t(\n      'Render time of the first image, text or other DOM node in the viewport.'\n    ),\n    failureThreshold: 3000,\n    type: measurementType(WebVital.FCP),\n  },\n  [WebVital.LCP]: {\n    slug: 'lcp',\n    name: t('Largest Contentful Paint'),\n    acronym: 'LCP',\n    description: t(\n      'Render time of the largest image, text or other DOM node in the viewport.'\n    ),\n    failureThreshold: 4000,\n    type: measurementType(WebVital.LCP),\n  },\n  [WebVital.FID]: {\n    slug: 'fid',\n    name: t('First Input Delay'),\n    acronym: 'FID',\n    description: t(\n      'Response time of the browser to a user interaction (clicking, tapping, etc).'\n    ),\n    failureThreshold: 300,\n    type: measurementType(WebVital.FID),\n  },\n  [WebVital.CLS]: {\n    slug: 'cls',\n    name: t('Cumulative Layout Shift'),\n    acronym: 'CLS',\n    description: t(\n      'Sum of layout shift scores that measure the visual stability of the page.'\n    ),\n    failureThreshold: 0.25,\n    type: measurementType(WebVital.CLS),\n  },\n  [WebVital.TTFB]: {\n    slug: 'ttfb',\n    name: t('Time to First Byte'),\n    acronym: 'TTFB',\n    description: t(\n      \"The time that it takes for a user's browser to receive the first byte of page content.\"\n    ),\n    failureThreshold: 600,\n    type: measurementType(WebVital.TTFB),\n  },\n  [WebVital.RequestTime]: {\n    slug: 'ttfb.requesttime',\n    name: t('Request Time'),\n    acronym: 'RT',\n    description: t(\n      'Captures the time spent making the request and receiving the first byte of the response.'\n    ),\n    failureThreshold: 600,\n    type: measurementType(WebVital.RequestTime),\n  },\n};\n\n// translate known short form names into their long forms\nexport const LONG_WEB_VITAL_NAMES = Object.fromEntries(\n  Object.values(WEB_VITAL_DETAILS).map(value => {\n    return [value.slug, value.name];\n  })\n);\n\nexport const WEB_VITAL_ACRONYMS = Object.fromEntries(\n  Object.values(WEB_VITAL_DETAILS).map(value => {\n    return [value.slug, value.acronym];\n  })\n);\n\nexport const FILTER_OPTIONS: SelectValue<string>[] = [\n  {label: t('Exclude Outliers'), value: 'exclude_outliers'},\n  {label: t('View All'), value: 'all'},\n];\n\n/**\n * This defines the grouping for histograms. Histograms that are in the same group\n * will be queried together on initial load for alignment. However, the zoom controls\n * are defined for each measurement independently.\n */\nconst _VITAL_GROUPS = [\n  {\n    vitals: [WebVital.FP, WebVital.FCP, WebVital.LCP],\n    min: 0,\n  },\n  {\n    vitals: [WebVital.FID],\n    min: 0,\n    precision: 2,\n  },\n  {\n    vitals: [WebVital.CLS],\n    min: 0,\n    precision: 2,\n  },\n];\n\nconst _COLORS = [\n  ...theme.charts.getColorPalette(\n    _VITAL_GROUPS.reduce((count, {vitals}) => count + vitals.length, 0) - 1\n  ),\n].reverse();\n\nexport const VITAL_GROUPS: VitalGroup[] = _VITAL_GROUPS.map(group => ({\n  ...group,\n  colors: _COLORS.splice(0, group.vitals.length),\n}));\n\nexport const ZOOM_KEYS = _VITAL_GROUPS.reduce((keys: string[], {vitals}) => {\n  vitals.forEach(vital => {\n    const vitalSlug = WEB_VITAL_DETAILS[vital].slug;\n    keys.push(`${vitalSlug}Start`);\n    keys.push(`${vitalSlug}End`);\n  });\n  return keys;\n}, []);\n","import {Query} from 'history';\n\nimport {TrendFunctionField} from '../trends/types';\n\nimport {DisplayModes} from './charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/`;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendDisplay,\n  showTransactions,\n}: {\n  orgSlug: string;\n  transaction: string;\n  query: Query;\n  display?: DisplayModes;\n  trendDisplay?: TrendFunctionField;\n  unselectedSeries?: string | string[];\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendDisplay,\n    },\n  };\n}\n","import React from 'react';\n\nimport {MetaType} from 'app/utils/discover/eventView';\nimport withApi from 'app/utils/withApi';\n\nimport GenericDiscoverQuery, {DiscoverQueryProps} from './genericDiscoverQuery';\n\n/**\n * An individual row in a DiscoverQuery result\n */\nexport type TableDataRow = {\n  id: string;\n  [key: string]: React.ReactText;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata.\n */\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\nfunction DiscoverQuery(props: DiscoverQueryProps) {\n  return <GenericDiscoverQuery<TableData, {}> route=\"eventsv2\" {...props} />;\n}\n\nexport default withApi(DiscoverQuery);\n","import React from 'react';\nimport {Location} from 'history';\n\nimport {EventQuery} from 'app/actionCreators/events';\nimport {Client} from 'app/api';\nimport EventView, {\n  isAPIPayloadSimilar,\n  LocationQuery,\n} from 'app/utils/discover/eventView';\n\nexport type GenericChildrenProps<T> = {\n  isLoading: boolean;\n  error: null | string;\n  tableData: T | null;\n  pageLinks: null | string;\n};\n\nexport type DiscoverQueryProps = {\n  api: Client;\n  /**\n   * Used as the default source for cursor values.\n   */\n  location: Location;\n  eventView: EventView;\n  orgSlug: string;\n  /**\n   * Record limit to get.\n   */\n  limit?: number;\n  /**\n   * Explicit cursor value if you aren't using `location.query.cursor` because there are\n   * multiple paginated results on the page.\n   */\n  cursor?: string;\n  /**\n   * Include this whenever pagination won't be used. Limit can still be used when this is\n   * passed, but cursor will be ignored.\n   */\n  noPagination?: boolean;\n};\n\ntype RequestProps<P> = DiscoverQueryProps & P;\n\ntype ReactProps<T> = {\n  children?: (props: GenericChildrenProps<T>) => React.ReactNode;\n};\n\ntype Props<T, P> = RequestProps<P> &\n  ReactProps<T> & {\n    /**\n     * Route to the endpoint\n     */\n    route: string;\n    /**\n     * Allows components to modify the payload before it is set.\n     */\n    getRequestPayload?: (props: Props<T, P>) => any;\n    /**\n     * An external hook in addition to the event view check to check if data should be refetched\n     */\n    shouldRefetchData?: (prevProps: Props<T, P>, props: Props<T, P>) => boolean;\n    /**\n     * A hook before fetch that can be used to do things like clearing the api\n     */\n    beforeFetch?: (api: Client) => void;\n    /**\n     * A hook to modify data into the correct output after data has been received\n     */\n    afterFetch?: (data: any, props: Props<T, P>) => T;\n    /**\n     * A callback to set an error so that the error can be rendered in parent components\n     */\n    setError?: (msg: string | undefined) => void;\n  };\n\ntype State<T> = {\n  tableFetchID: symbol | undefined;\n} & GenericChildrenProps<T>;\n\n/**\n * Generic component for discover queries\n */\nclass GenericDiscoverQuery<T, P> extends React.Component<Props<T, P>, State<T>> {\n  state: State<T> = {\n    isLoading: true,\n    tableFetchID: undefined,\n    error: null,\n\n    tableData: null,\n    pageLinks: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props<T, P>) {\n    // Reload data if we aren't already loading,\n    const refetchCondition = !this.state.isLoading && this._shouldRefetchData(prevProps);\n\n    // or if we've moved from an invalid view state to a valid one,\n    const eventViewValidation =\n      prevProps.eventView.isValid() === false && this.props.eventView.isValid();\n\n    const shouldRefetchExternal = this.props.shouldRefetchData\n      ? this.props.shouldRefetchData(prevProps, this.props)\n      : false;\n\n    if (refetchCondition || eventViewValidation || shouldRefetchExternal) {\n      this.fetchData();\n    }\n  }\n\n  getPayload(props: Props<T, P>) {\n    if (this.props.getRequestPayload) {\n      return this.props.getRequestPayload(props);\n    }\n    return props.eventView.getEventsAPIPayload(props.location);\n  }\n\n  _shouldRefetchData = (prevProps: Props<T, P>): boolean => {\n    const thisAPIPayload = this.getPayload(this.props);\n    const otherAPIPayload = this.getPayload(prevProps);\n\n    return (\n      !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload) ||\n      prevProps.limit !== this.props.limit ||\n      prevProps.route !== this.props.route ||\n      prevProps.cursor !== this.props.cursor\n    );\n  };\n\n  fetchData = () => {\n    const {\n      api,\n      beforeFetch,\n      afterFetch,\n      eventView,\n      orgSlug,\n      route,\n      limit,\n      cursor,\n      setError,\n      noPagination,\n    } = this.props;\n\n    if (!eventView.isValid()) {\n      return;\n    }\n\n    const url = `/organizations/${orgSlug}/${route}/`;\n    const tableFetchID = Symbol(`tableFetchID`);\n    const apiPayload: Partial<EventQuery & LocationQuery> = this.getPayload(this.props);\n\n    this.setState({isLoading: true, tableFetchID});\n\n    setError?.(undefined);\n\n    if (limit) {\n      apiPayload.per_page = limit;\n    }\n    if (noPagination) {\n      apiPayload.noPagination = noPagination;\n    }\n    if (cursor) {\n      apiPayload.cursor = cursor;\n    }\n\n    beforeFetch?.(api);\n\n    api\n      .requestPromise(url, {\n        method: 'GET',\n        includeAllArgs: true,\n        query: {\n          // marking apiPayload as any so as to not cause typescript errors\n          ...(apiPayload as any),\n        },\n      })\n      .then(([data, _, jqXHR]) => {\n        if (this.state.tableFetchID !== tableFetchID) {\n          // invariant: a different request was initiated after this request\n          return;\n        }\n\n        const tableData = afterFetch ? afterFetch(data, this.props) : data;\n\n        this.setState(prevState => ({\n          isLoading: false,\n          tableFetchID: undefined,\n          error: null,\n          pageLinks: jqXHR?.getResponseHeader('Link') ?? prevState.pageLinks,\n          tableData,\n        }));\n      })\n      .catch(err => {\n        const error = err?.responseJSON?.detail ?? null;\n        this.setState({\n          isLoading: false,\n          tableFetchID: undefined,\n          error,\n          tableData: null,\n        });\n        if (setError) {\n          setError(error);\n        }\n      });\n  };\n\n  render() {\n    const {isLoading, error, tableData, pageLinks} = this.state;\n\n    const childrenProps: GenericChildrenProps<T> = {\n      isLoading,\n      error,\n      tableData,\n      pageLinks,\n    };\n    const children: ReactProps<T>['children'] = this.props.children; // Explicitly setting type due to issues with generics and React's children\n    return children?.(childrenProps);\n  }\n}\n\nexport default GenericDiscoverQuery;\n","import React from 'react';\n\nimport Feature from 'app/components/acl/feature';\nimport Button from 'app/components/button';\n\ntype Props = React.PropsWithChildren<{\n  className?: string;\n}> &\n  React.ComponentProps<typeof Button>;\n\n/**\n * Provide a button that turns itself off if the current organization\n * doesn't have access to discover results.\n */\nfunction DiscoverButton({children, ...buttonProps}: Props) {\n  return (\n    <Feature features={['organizations:discover-basic']}>\n      {({hasFeature}) => (\n        <Button disabled={!hasFeature} {...buttonProps}>\n          {children}\n        </Button>\n      )}\n    </Feature>\n  );\n}\n\nexport default DiscoverButton;\n","import React from 'react';\nimport {Location} from 'history';\n\nimport Breadcrumbs, {Crumb} from 'app/components/breadcrumbs';\nimport {t} from 'app/locale';\nimport {Event, Organization} from 'app/types';\nimport EventView from 'app/utils/discover/eventView';\nimport {getDiscoverLandingUrl} from 'app/utils/discover/urls';\n\ntype DefaultProps = {\n  event: Event | undefined;\n};\n\ntype Props = DefaultProps & {\n  eventView: EventView;\n  organization: Organization;\n  location: Location;\n};\n\nclass DiscoverBreadcrumb extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    event: undefined,\n  };\n\n  getCrumbs() {\n    const crumbs: Crumb[] = [];\n    const {eventView, event, organization, location} = this.props;\n    const discoverTarget = organization.features.includes('discover-query')\n      ? {\n          pathname: getDiscoverLandingUrl(organization),\n          query: {\n            ...location.query,\n            ...eventView.generateBlankQueryStringObject(),\n            ...eventView.getGlobalSelectionQuery(),\n          },\n        }\n      : null;\n\n    crumbs.push({\n      to: discoverTarget,\n      label: t('Discover'),\n    });\n\n    if (eventView && eventView.isValid()) {\n      crumbs.push({\n        to: eventView.getResultsViewUrlTarget(organization.slug),\n        label: eventView.name || '',\n      });\n    }\n\n    if (event) {\n      crumbs.push({\n        label: t('Event Detail'),\n      });\n    }\n\n    return crumbs;\n  }\n\n  render() {\n    return <Breadcrumbs crumbs={this.getCrumbs()} />;\n  }\n}\n\nexport default DiscoverBreadcrumb;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nimport Alert from 'app/components/alert';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport {SectionHeading} from 'app/components/charts/styles';\nimport Times from 'app/components/group/times';\nimport ProjectBadge from 'app/components/idBadge/projectBadge';\nimport Link from 'app/components/links/link';\nimport Placeholder from 'app/components/placeholder';\nimport SeenByList from 'app/components/seenByList';\nimport ShortId from 'app/components/shortId';\nimport GroupChart from 'app/components/stream/groupChart';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\n\ntype Props = {\n  groupId: string;\n  eventId: string;\n};\n\ntype State = {\n  group: Group;\n};\n\nclass LinkedIssue extends AsyncComponent<\n  Props & AsyncComponent['props'],\n  State & AsyncComponent['state']\n> {\n  static propTypes = {\n    groupId: PropTypes.string.isRequired,\n    eventId: PropTypes.string.isRequired,\n  };\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {groupId} = this.props;\n    const groupUrl = `/issues/${groupId}/`;\n\n    return [['group', groupUrl]];\n  }\n\n  renderLoading() {\n    return <Placeholder height=\"120px\" bottomGutter={2} />;\n  }\n\n  renderError(error?: Error, disableLog = false, disableReport = false): React.ReactNode {\n    const {errors} = this.state;\n    const hasNotFound = Object.values(errors).find(resp => resp && resp.status === 404);\n    if (hasNotFound) {\n      return (\n        <Alert type=\"warning\" icon={<IconWarning size=\"md\" />}>\n          {t('The linked issue cannot be found. It may have been deleted, or merged.')}\n        </Alert>\n      );\n    }\n\n    return super.renderError(error, disableLog, disableReport);\n  }\n\n  renderBody() {\n    const {eventId} = this.props;\n    const {group} = this.state;\n    const issueUrl = `${group.permalink}events/${eventId}/`;\n\n    return (\n      <Section>\n        <SectionHeading>{t('Event Issue')}</SectionHeading>\n        <StyledIssueCard>\n          <IssueCardHeader>\n            <StyledLink to={issueUrl} data-test-id=\"linked-issue\">\n              <StyledShortId\n                shortId={group.shortId}\n                avatar={<ProjectBadge project={group.project} avatarSize={16} hideName />}\n              />\n            </StyledLink>\n            <StyledSeenByList seenBy={group.seenBy} maxVisibleAvatars={5} />\n          </IssueCardHeader>\n          <IssueCardBody>\n            <GroupChart statsPeriod=\"30d\" data={group} height={56} />\n          </IssueCardBody>\n          <IssueCardFooter>\n            <Times lastSeen={group.lastSeen} firstSeen={group.firstSeen} />\n          </IssueCardFooter>\n        </StyledIssueCard>\n      </Section>\n    );\n  }\n}\n\nconst Section = styled('div')`\n  margin-bottom: ${space(4)};\n`;\n\nconst StyledIssueCard = styled('div')`\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n`;\n\nconst IssueCardHeader = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${space(1)};\n`;\n\nconst StyledLink = styled(Link)`\n  justify-content: flex-start;\n`;\n\nconst IssueCardBody = styled('div')`\n  background: ${p => p.theme.backgroundSecondary};\n  padding-top: ${space(1)};\n`;\n\nconst StyledSeenByList = styled(SeenByList)`\n  margin: 0;\n`;\n\nconst StyledShortId = styled(ShortId)`\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.textColor};\n`;\n\nconst IssueCardFooter = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeSmall};\n  padding: ${space(0.5)} ${space(1)};\n`;\n\nexport default LinkedIssue;\n","import React from 'react';\nimport {Params} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport PropTypes from 'prop-types';\n\nimport Feature from 'app/components/acl/feature';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport NotFound from 'app/components/errors/notFound';\nimport {BorderlessEventEntries} from 'app/components/events/eventEntries';\nimport EventMetadata from 'app/components/events/eventMetadata';\nimport * as SpanEntryContext from 'app/components/events/interfaces/spans/context';\nimport OpsBreakdown from 'app/components/events/opsBreakdown';\nimport RealUserMonitoring from 'app/components/events/realUserMonitoring';\nimport RootSpanStatus from 'app/components/events/rootSpanStatus';\nimport * as Layout from 'app/components/layouts/thirds';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport TagsTable from 'app/components/tagsTable';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\nimport {Event, EventTag, Organization, Project} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport EventView from 'app/utils/discover/eventView';\nimport {FIELD_TAGS} from 'app/utils/discover/fields';\nimport {eventDetailsRoute} from 'app/utils/discover/urls';\nimport {getMessage, getTitle} from 'app/utils/events';\nimport Projects from 'app/utils/projects';\nimport {transactionSummaryRouteWithQuery} from 'app/views/performance/transactionSummary/utils';\n\nimport DiscoverBreadcrumb from '../breadcrumb';\nimport {generateTitle, getExpandedResults} from '../utils';\n\nimport LinkedIssue from './linkedIssue';\n\nconst slugValidator = function (\n  props: {[key: string]: any},\n  propName: string,\n  componentName: string\n) {\n  const value = props[propName];\n  // Accept slugs that look like:\n  // * project-slug:deadbeef\n  if (value && typeof value === 'string' && !/^(?:[^:]+):(?:[a-f0-9-]+)$/.test(value)) {\n    return new Error(`Invalid value for ${propName} provided to ${componentName}.`);\n  }\n  return null;\n};\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n  params: Params;\n  eventSlug: string;\n  eventView: EventView;\n};\n\ntype State = {\n  event: Event | undefined;\n  isSidebarVisible: boolean;\n} & AsyncComponent['state'];\n\nclass EventDetailsContent extends AsyncComponent<Props, State> {\n  static propTypes: any = {\n    organization: SentryTypes.Organization.isRequired,\n    eventSlug: slugValidator,\n    location: PropTypes.object.isRequired,\n  };\n\n  state: State = {\n    // AsyncComponent state\n    loading: true,\n    reloading: false,\n    error: false,\n    errors: [],\n    event: undefined,\n\n    // local state\n    isSidebarVisible: true,\n  };\n\n  toggleSidebar = () => {\n    this.setState({isSidebarVisible: !this.state.isSidebarVisible});\n  };\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, params, location, eventView} = this.props;\n    const {eventSlug} = params;\n\n    const query = eventView.getEventsAPIPayload(location);\n\n    // Fields aren't used, reduce complexity by omitting from query entirely\n    query.field = [];\n\n    const url = `/organizations/${organization.slug}/events/${eventSlug}/`;\n\n    // Get a specific event. This could be coming from\n    // a paginated group or standalone event.\n    return [['event', url, {query}]];\n  }\n\n  get projectId() {\n    return this.props.eventSlug.split(':')[0];\n  }\n\n  generateTagKey = (tag: EventTag) => {\n    // Some tags may be normalized from context, but not all of them are.\n    // This supports a user making a custom tag with the same name as one\n    // that comes from context as all of these are also tags.\n    if (tag.key in FIELD_TAGS) {\n      return `tags[${tag.key}]`;\n    }\n    return tag.key;\n  };\n\n  generateTagUrl = (tag: EventTag) => {\n    const {eventView, organization} = this.props;\n    const {event} = this.state;\n    if (!event) {\n      return '';\n    }\n    const eventReference = {...event};\n    if (eventReference.id) {\n      delete (eventReference as any).id;\n    }\n    const tagKey = this.generateTagKey(tag);\n    const nextView = getExpandedResults(eventView, {[tagKey]: tag.value}, eventReference);\n    return nextView.getResultsViewUrlTarget(organization.slug);\n  };\n\n  renderBody() {\n    const {event} = this.state;\n\n    if (!event) {\n      return <NotFound />;\n    }\n\n    return this.renderContent(event);\n  }\n\n  renderContent(event: Event) {\n    const {organization, location, eventView} = this.props;\n    const {isSidebarVisible} = this.state;\n\n    // metrics\n    trackAnalyticsEvent({\n      eventKey: 'discover_v2.event_details',\n      eventName: 'Discoverv2: Opened Event Details',\n      event_type: event.type,\n      organization_id: parseInt(organization.id, 10),\n    });\n\n    const transactionName = event.tags.find(tag => tag.key === 'transaction')?.value;\n    const transactionSummaryTarget =\n      event.type === 'transaction' && transactionName\n        ? transactionSummaryRouteWithQuery({\n            orgSlug: organization.slug,\n            transaction: transactionName,\n            projectID: event.projectID,\n            query: location.query,\n          })\n        : null;\n\n    return (\n      <React.Fragment>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <DiscoverBreadcrumb\n              eventView={eventView}\n              event={event}\n              organization={organization}\n              location={location}\n            />\n            <EventHeader event={event} organization={organization} />\n          </Layout.HeaderContent>\n          <StyledHeaderActions>\n            <ButtonBar gap={1}>\n              <Button onClick={this.toggleSidebar}>\n                {isSidebarVisible ? 'Hide Details' : 'Show Details'}\n              </Button>\n              {transactionSummaryTarget && (\n                <Feature organization={organization} features={['performance-view']}>\n                  {({hasFeature}) => (\n                    <Button\n                      disabled={!hasFeature}\n                      priority=\"primary\"\n                      to={transactionSummaryTarget}\n                    >\n                      {t('Go to Summary')}\n                    </Button>\n                  )}\n                </Feature>\n              )}\n            </ButtonBar>\n          </StyledHeaderActions>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main fullWidth={!isSidebarVisible}>\n            <Projects orgId={organization.slug} slugs={[this.projectId]}>\n              {({projects, initiallyLoaded}) =>\n                initiallyLoaded ? (\n                  <SpanEntryContext.Provider\n                    value={{\n                      getViewChildTransactionTarget: childTransactionProps => {\n                        const childTransactionLink = eventDetailsRoute({\n                          eventSlug: childTransactionProps.eventSlug,\n                          orgSlug: organization.slug,\n                        });\n\n                        return {\n                          pathname: childTransactionLink,\n                          query: eventView.generateQueryStringObject(),\n                        };\n                      },\n                    }}\n                  >\n                    <BorderlessEventEntries\n                      organization={organization}\n                      event={event}\n                      project={projects[0] as Project}\n                      location={location}\n                      showExampleCommit={false}\n                      showTagSummary={false}\n                    />\n                  </SpanEntryContext.Provider>\n                ) : (\n                  <LoadingIndicator />\n                )\n              }\n            </Projects>\n          </Layout.Main>\n          {isSidebarVisible && (\n            <Layout.Side>\n              <EventMetadata\n                event={event}\n                organization={organization}\n                projectId={this.projectId}\n              />\n              <RootSpanStatus event={event} />\n              <OpsBreakdown event={event} />\n              <RealUserMonitoring event={event} />\n              {event.groupID && (\n                <LinkedIssue groupId={event.groupID} eventId={event.eventID} />\n              )}\n              <TagsTable\n                generateUrl={this.generateTagUrl}\n                event={event}\n                query={eventView.query}\n              />\n            </Layout.Side>\n          )}\n        </Layout.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderError(error: Error) {\n    const notFound = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 404\n    );\n    const permissionDenied = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 403\n    );\n\n    if (notFound) {\n      return <NotFound />;\n    }\n    if (permissionDenied) {\n      return (\n        <LoadingError message={t('You do not have permission to view that event.')} />\n      );\n    }\n\n    return super.renderError(error, true, true);\n  }\n\n  renderComponent() {\n    const {eventView, organization} = this.props;\n    const {event} = this.state;\n\n    const title = generateTitle({eventView, event, organization});\n\n    return (\n      <SentryDocumentTitle title={title} objSlug={organization.slug}>\n        {super.renderComponent()}\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nconst EventHeader = ({\n  event,\n  organization,\n}: {\n  event: Event;\n  organization: Organization;\n}) => {\n  const {title} = getTitle(event, organization);\n\n  const message = getMessage(event);\n\n  return (\n    <Layout.Title data-test-id=\"event-header\">\n      <span>\n        {title}\n        {message && message.length > 0 ? ':' : null}\n      </span>\n      <EventSubheading>{getMessage(event)}</EventSubheading>\n    </Layout.Title>\n  );\n};\n\nconst StyledHeaderActions = styled(Layout.HeaderActions)`\n  @media (max-width: ${p => p.theme.breakpoints[1]}) {\n    display: none;\n  }\n`;\n\nconst EventSubheading = styled('span')`\n  color: ${p => p.theme.gray300};\n  margin-left: ${space(1)};\n`;\n\nexport default EventDetailsContent;\n","import React from 'react';\nimport {Params} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport PropTypes from 'prop-types';\n\nimport LightWeightNoProjectMessage from 'app/components/lightWeightNoProjectMessage';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport {PageContent} from 'app/styles/organization';\nimport {Organization} from 'app/types';\nimport EventView from 'app/utils/discover/eventView';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport EventDetailsContent from './content';\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n  params: Params;\n};\n\nclass EventDetails extends React.Component<Props> {\n  static propTypes: any = {\n    organization: SentryTypes.Organization.isRequired,\n    location: PropTypes.object.isRequired,\n  };\n\n  getEventSlug = (): string => {\n    const {eventSlug} = this.props.params;\n\n    if (typeof eventSlug === 'string') {\n      return eventSlug.trim();\n    }\n\n    return '';\n  };\n\n  getEventView = (): EventView => {\n    const {location} = this.props;\n\n    return EventView.fromLocation(location);\n  };\n\n  getDocumentTitle = (name: string | undefined): Array<string> =>\n    typeof name === 'string' && String(name).trim().length > 0\n      ? [String(name).trim(), t('Discover')]\n      : [t('Discover')];\n\n  render() {\n    const {organization, location, params} = this.props;\n    const eventView = this.getEventView();\n\n    const documentTitle = this.getDocumentTitle(eventView.name).join(' - ');\n\n    return (\n      <SentryDocumentTitle title={documentTitle} objSlug={organization.slug}>\n        <StyledPageContent>\n          <LightWeightNoProjectMessage organization={organization}>\n            <EventDetailsContent\n              organization={organization}\n              location={location}\n              params={params}\n              eventView={eventView}\n              eventSlug={this.getEventSlug()}\n            />\n          </LightWeightNoProjectMessage>\n        </StyledPageContent>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nexport default withOrganization(EventDetails);\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n"],"sourceRoot":""}