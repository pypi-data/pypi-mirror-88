{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/account/apiApplications/row.tsx","webpack:///./app/views/settings/account/apiApplications/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","Row","state","loading","handleRemove","api","app","onRemove","setState","a","addLoadingMessage","requestPromise","id","method","clearIndicators","addErrorMessage","t","StyledPanelItem","ApplicationNameWrapper","ApplicationName","to","getDynamicText","value","name","fixed","ClientId","clientID","aria-label","onClick","disabled","PanelItem","Link","headerFontSize","gray200","fontSizeMedium","ApiApplications","handleCreateApplication","addSuccessMessage","router","push","handleRemoveApplication","appList","filter","priority","size","isCircled","isEmpty","length","map","key"],"mappings":"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","file":"ApiApplications.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  action?: React.ReactNode;\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, subtitle, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 ${space(3)};\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport Link from 'app/components/links/link';\nimport {PanelItem} from 'app/components/panels';\nimport {IconDelete} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {ApiApplication} from 'app/types';\nimport getDynamicText from 'app/utils/getDynamicText';\n\nconst ROUTE_PREFIX = '/settings/account/api/';\n\ntype Props = {\n  api: Client;\n  app: ApiApplication;\n  onRemove: (app: ApiApplication) => void;\n};\n\ntype State = {\n  loading: boolean;\n};\n\nclass Row extends React.Component<Props, State> {\n  state = {\n    loading: false,\n  };\n\n  handleRemove = () => {\n    if (this.state.loading) {\n      return;\n    }\n\n    const {api, app, onRemove} = this.props;\n\n    this.setState(\n      {\n        loading: true,\n      },\n      async () => {\n        addLoadingMessage();\n\n        try {\n          await api.requestPromise(`/api-applications/${app.id}/`, {\n            method: 'DELETE',\n          });\n\n          clearIndicators();\n          onRemove(app);\n        } catch (_err) {\n          addErrorMessage(t('Unable to remove application. Please try again.'));\n        }\n      }\n    );\n  };\n\n  render() {\n    const {app} = this.props;\n\n    return (\n      <StyledPanelItem>\n        <ApplicationNameWrapper>\n          <ApplicationName to={`${ROUTE_PREFIX}applications/${app.id}/`}>\n            {getDynamicText({value: app.name, fixed: 'CI_APPLICATION_NAME'})}\n          </ApplicationName>\n          <ClientId>\n            {getDynamicText({value: app.clientID, fixed: 'CI_CLIENT_ID'})}\n          </ClientId>\n        </ApplicationNameWrapper>\n\n        <Button\n          aria-label=\"Remove\"\n          onClick={this.handleRemove}\n          disabled={this.state.loading}\n          icon={<IconDelete />}\n        />\n      </StyledPanelItem>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  padding: ${space(2)};\n  align-items: center;\n`;\n\nconst ApplicationNameWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nconst ApplicationName = styled(Link)`\n  font-size: ${p => p.theme.headerFontSize};\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n`;\n\nconst ClientId = styled('div')`\n  color: ${p => p.theme.gray200};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nexport default Row;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {IconAdd} from 'app/icons';\nimport {t} from 'app/locale';\nimport {ApiApplication} from 'app/types';\nimport AsyncView from 'app/views/asyncView';\nimport Row from 'app/views/settings/account/apiApplications/row';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nconst ROUTE_PREFIX = '/settings/account/api/';\n\ntype Props = RouteComponentProps<{}, {}>;\ntype State = {\n  appList: ApiApplication[];\n} & AsyncView['state'];\n\nclass ApiApplications extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['appList', '/api-applications/']];\n  }\n\n  getTitle() {\n    return t('API Applications');\n  }\n\n  handleCreateApplication = async () => {\n    addLoadingMessage();\n\n    try {\n      const app = await this.api.requestPromise('/api-applications/', {\n        method: 'POST',\n      });\n\n      addSuccessMessage(t('Created a new API Application'));\n      this.props.router.push(`${ROUTE_PREFIX}applications/${app.id}/`);\n    } catch (_err) {\n      addErrorMessage(t('Unable to remove application. Please try again.'));\n    }\n  };\n\n  handleRemoveApplication = (app: ApiApplication) => {\n    this.setState({\n      appList: this.state.appList.filter(a => a.id !== app.id),\n    });\n  };\n\n  renderBody() {\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        onClick={this.handleCreateApplication}\n        icon={<IconAdd size=\"xs\" isCircled />}\n      >\n        {t('Create New Application')}\n      </Button>\n    );\n\n    const isEmpty = this.state.appList.length === 0;\n\n    return (\n      <div>\n        <SettingsPageHeader title=\"API Applications\" action={action} />\n\n        <Panel>\n          <PanelHeader>{t('Application Name')}</PanelHeader>\n\n          <PanelBody>\n            {!isEmpty ? (\n              this.state.appList.map(app => (\n                <Row\n                  api={this.api}\n                  key={app.id}\n                  app={app}\n                  onRemove={this.handleRemoveApplication}\n                />\n              ))\n            ) : (\n              <EmptyMessage>\n                {t(\"You haven't created any applications yet.\")}\n              </EmptyMessage>\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default ApiApplications;\n"],"sourceRoot":""}