{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/organization/permissionAlert.tsx","webpack:///./app/views/settings/organizationAuth/providerItem.tsx","webpack:///./app/views/settings/organizationAuth/organizationAuthList.tsx","webpack:///./app/views/settings/organizationAuth/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","routeTitleGen","routeName","orgSlug","withSentry","tmpl","PermissionAlert","access","hasAccess","type","size","t","ProviderItem","provider","active","onConfigure","handleConfigure","e","key","renderDisabledLock","features","defaultRenderInstallButton","hasFeature","name","value","disabled","onClick","featureKey","requiredFeature","hookName","descopeFeatureName","featureProps","filter","f","renderDisabled","children","renderInstallButton","alignItems","ProviderInfo","ProviderLogo","className","replace","toLowerCase","ProviderName","ProviderDescription","FeatureBadge","ActiveIndicator","green300","white","DisabledHovercard","Hovercard","LockedFeature","containerClassName","body","hideHelpToggle","message","featureName","providerPopularity","google","github","okta","saml2","onelogin","rippling","auth0","OrganizationAuthList","organization","providerList","activeProvider","list","sort","a","b","aEnabled","includes","warn2FADisable","require2FA","some","tct","link","href","slug","method","getCookie","CSRF_COOKIE_NAME","map","length","withOrganization","OrganizationAuth","handleSendReminders","_provider","setState","sendRemindersBusy","api","request","params","orgId","data","success","addSuccessMessage","error","addErrorMessage","complete","busy","init","auth_url","window","location","handleDisableProvider","_nextProps","nextState","assign","state","renderLoading","find"],"mappings":"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","file":"OrganizationAuth.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  action?: React.ReactNode;\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, subtitle, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 ${space(3)};\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default SettingsPageHeader;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['org:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"sm\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner or manager role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nPermissionAlert.propTypes = {\n  access: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default PermissionAlert;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'app/components/acl/access';\nimport Feature from 'app/components/acl/feature';\nimport FeatureDisabled from 'app/components/acl/featureDisabled';\nimport Button from 'app/components/button';\nimport Hovercard from 'app/components/hovercard';\nimport {PanelItem} from 'app/components/panels';\nimport Tag from 'app/components/tag';\nimport {IconLock} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {AuthProvider} from 'app/types';\nimport {FeatureDisabledHooks} from 'app/types/hooks';\nimport {descopeFeatureName} from 'app/utils';\n\ntype RenderInstallButtonProps = {\n  /**\n   * We pass the provider so that it may be passed into any hook provided\n   * callbacks.\n   */\n  provider: AuthProvider;\n  hasFeature: boolean;\n};\n\ntype LockedFeatureProps = {\n  provider: AuthProvider;\n  features: string[];\n  className?: string;\n};\n\ntype FeatureRenderProps = {\n  children?: (p: FeatureRenderProps) => React.ReactNode;\n  hasFeature: boolean;\n  features: string[];\n  renderDisabled: (p: LockedFeatureProps) => React.ReactNode;\n  renderInstallButton: (p: RenderInstallButtonProps) => React.ReactNode;\n};\n\ntype Props = {\n  provider: AuthProvider;\n  active: boolean;\n  onConfigure?: (providerKey: string, e: React.MouseEvent) => void;\n};\n\nconst ProviderItem = ({provider, active, onConfigure}: Props) => {\n  const handleConfigure = (e: React.MouseEvent) => {\n    onConfigure?.(provider.key, e);\n  };\n\n  const renderDisabledLock = (p: LockedFeatureProps) => (\n    <LockedFeature provider={p.provider} features={p.features} />\n  );\n\n  const defaultRenderInstallButton = ({hasFeature}: RenderInstallButtonProps) => (\n    <Access access={['org:write']}>\n      {({hasAccess}) => (\n        <Button\n          type=\"submit\"\n          name=\"provider\"\n          size=\"small\"\n          value={provider.key}\n          disabled={!hasFeature || !hasAccess}\n          onClick={handleConfigure}\n        >\n          {t('Configure')}\n        </Button>\n      )}\n    </Access>\n  );\n\n  // TODO(epurkhiser): We should probably use a more explicit hook name,\n  // instead of just the feature names (sso-basic, sso-saml2, etc).\n  const featureKey = provider.requiredFeature;\n  const hookName = featureKey\n    ? (`feature-disabled:${descopeFeatureName(featureKey)}` as keyof FeatureDisabledHooks)\n    : null;\n\n  const featureProps = hookName ? {hookName} : {};\n\n  return (\n    <Feature\n      {...featureProps}\n      features={[featureKey].filter(f => f)}\n      renderDisabled={({children, ...props}) =>\n        typeof children === 'function' &&\n        // TODO(ts): the Feature component isn't correctly templatized to allow\n        // for custom props in the renderDisabled function\n        children({...props, renderDisabled: renderDisabledLock as any})\n      }\n    >\n      {({\n        hasFeature,\n        features,\n        renderDisabled,\n        renderInstallButton,\n      }: FeatureRenderProps) => (\n        <PanelItem alignItems=\"center\">\n          <ProviderInfo>\n            <ProviderLogo\n              className={`provider-logo ${provider.name\n                .replace(/\\s/g, '-')\n                .toLowerCase()}`}\n            />\n            <div>\n              <ProviderName>{provider.name}</ProviderName>\n              <ProviderDescription>\n                {t('Enable your organization to sign in with %s.', provider.name)}\n              </ProviderDescription>\n            </div>\n          </ProviderInfo>\n\n          <FeatureBadge>\n            {!hasFeature && renderDisabled({provider, features})}\n          </FeatureBadge>\n\n          <div>\n            {active ? (\n              <ActiveIndicator />\n            ) : (\n              (renderInstallButton ?? defaultRenderInstallButton)({provider, hasFeature})\n            )}\n          </div>\n        </PanelItem>\n      )}\n    </Feature>\n  );\n};\n\nexport default ProviderItem;\n\nconst ProviderInfo = styled('div')`\n  flex: 1;\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-gap: ${space(2)};\n`;\n\nconst ProviderLogo = styled('div')`\n  height: 36px;\n  width: 36px;\n  border-radius: 3px;\n  margin-right: 0;\n  top: auto;\n`;\n\nconst ProviderName = styled('div')`\n  font-weight: bold;\n`;\n\nconst ProviderDescription = styled('div')`\n  margin-top: ${space(0.75)};\n  font-size: 0.8em;\n`;\n\nconst FeatureBadge = styled('div')`\n  flex: 1;\n`;\n\nconst ActiveIndicator = styled('div')`\n  background: ${p => p.theme.green300};\n  color: ${p => p.theme.white};\n  padding: ${space(1)} ${space(1.5)};\n  border-radius: 2px;\n  font-size: 0.8em;\n`;\n\nActiveIndicator.defaultProps = {\n  children: t('Active'),\n};\n\nconst DisabledHovercard = styled(Hovercard)`\n  width: 350px;\n`;\n\nconst LockedFeature = ({provider, features, className}: LockedFeatureProps) => (\n  <DisabledHovercard\n    containerClassName={className}\n    body={\n      <FeatureDisabled\n        features={features}\n        hideHelpToggle\n        message={t('%s SSO is disabled.', provider.name)}\n        featureName={t('SSO Auth')}\n      />\n    }\n  >\n    <Tag icon={<IconLock />}>{t('disabled')}</Tag>\n  </DisabledHovercard>\n);\n","import React from 'react';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {CSRF_COOKIE_NAME} from 'app/constants';\nimport {t, tct} from 'app/locale';\nimport {AuthProvider, Organization} from 'app/types';\nimport {descopeFeatureName} from 'app/utils';\nimport getCookie from 'app/utils/getCookie';\nimport withOrganization from 'app/utils/withOrganization';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'app/views/settings/organization/permissionAlert';\n\nimport ProviderItem from './providerItem';\n\nconst providerPopularity = {\n  google: 0,\n  github: 1,\n  okta: 2,\n  'active-directory': 3,\n  saml2: 4,\n  onelogin: 5,\n  rippling: 6,\n  auth0: 7,\n};\n\ntype Props = {\n  organization: Organization;\n  providerList: AuthProvider[];\n  activeProvider?: AuthProvider;\n};\n\nconst OrganizationAuthList = ({organization, providerList, activeProvider}: Props) => {\n  const features = organization.features;\n\n  // Sort provider list twice: first, by popularity,\n  // and then a second time, to sort unavailable providers for the current plan to the end of the list.\n  const sortedByPopularity = (providerList ?? []).sort((a, b) => {\n    if (!(a.key in providerPopularity)) {\n      return -1;\n    }\n    if (!(b.key in providerPopularity)) {\n      return 1;\n    }\n    if (providerPopularity[a.key] === providerPopularity[b.key]) {\n      return 0;\n    }\n    return providerPopularity[a.key] > providerPopularity[b.key] ? 1 : -1;\n  });\n\n  const list = sortedByPopularity.sort((a, b) => {\n    const aEnabled = features.includes(descopeFeatureName(a.requiredFeature));\n    const bEnabled = features.includes(descopeFeatureName(b.requiredFeature));\n    if (aEnabled === bEnabled) {\n      return 0;\n    }\n    return aEnabled ? -1 : 1;\n  });\n\n  const warn2FADisable =\n    organization.require2FA &&\n    list.some(({requiredFeature}) =>\n      features.includes(descopeFeatureName(requiredFeature))\n    );\n\n  return (\n    <div className=\"sso\">\n      <SettingsPageHeader title=\"Authentication\" />\n      <PermissionAlert />\n      <Panel>\n        <PanelHeader>{t('Choose a provider')}</PanelHeader>\n        <PanelBody>\n          {!activeProvider && (\n            <PanelAlert type=\"info\">\n              {tct(\n                'Get started with Single Sign-on for your organization by selecting a provider. Read more in our [link:SSO documentation].',\n                {\n                  link: <ExternalLink href=\"https://docs.sentry.io/learn/sso/\" />,\n                }\n              )}\n            </PanelAlert>\n          )}\n\n          {warn2FADisable && (\n            <PanelAlert type=\"warning\">\n              {t('Require 2FA will be disabled if you enable SSO.')}\n            </PanelAlert>\n          )}\n\n          <form\n            action={`/organizations/${organization.slug}/auth/configure/`}\n            method=\"POST\"\n          >\n            <input\n              type=\"hidden\"\n              name=\"csrfmiddlewaretoken\"\n              value={getCookie(CSRF_COOKIE_NAME) || ''}\n            />\n            <input type=\"hidden\" name=\"init\" value=\"1\" />\n\n            {list.map(provider => (\n              <ProviderItem\n                key={provider.key}\n                provider={provider}\n                active={!!activeProvider && provider.key === activeProvider.key}\n              />\n            ))}\n            {list.length === 0 && (\n              <EmptyMessage>\n                {t('No authentication providers are available.')}\n              </EmptyMessage>\n            )}\n          </form>\n        </PanelBody>\n      </Panel>\n    </div>\n  );\n};\n\nexport default withOrganization(OrganizationAuthList);\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport {AuthProvider, Organization} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\n\nimport OrganizationAuthList from './organizationAuthList';\n\ntype Props = AsyncView['props'] &\n  RouteComponentProps<{orgId: string}, {}> & {\n    organization: Organization;\n  };\n\ntype State = AsyncView['state'] & {\n  providerList: AuthProvider[] | null;\n  provider: AuthProvider | null;\n};\n\nclass OrganizationAuth extends AsyncView<Props, State> {\n  UNSAFE_componentWillUpdate(_nextProps: Props, nextState: State) {\n    const access = this.props.organization.access;\n\n    if (nextState.provider && access.includes('org:write')) {\n      // If SSO provider is configured, keep showing loading while we redirect\n      // to django configuration view\n      window.location.assign(`/organizations/${this.props.params.orgId}/auth/configure/`);\n    }\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [\n      ['providerList', `/organizations/${this.props.params.orgId}/auth-providers/`],\n      ['provider', `/organizations/${this.props.params.orgId}/auth-provider/`],\n    ];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('Auth Settings'), this.props.organization.slug, false);\n  }\n\n  /**\n   * TODO(epurkhiser): This does not work right now as we still fallback to the\n   * old SSO auth configuration page\n   */\n  handleSendReminders = (_provider: AuthProvider) => {\n    this.setState({sendRemindersBusy: true});\n\n    this.api.request(\n      `/organizations/${this.props.params.orgId}/auth-provider/send-reminders/`,\n      {\n        method: 'POST',\n        data: {},\n        success: () => addSuccessMessage(t('Sent reminders to members')),\n        error: () => addErrorMessage(t('Failed to send reminders')),\n        complete: () => this.setState({sendRemindersBusy: false}),\n      }\n    );\n  };\n\n  /**\n   * TODO(epurkhiser): This does not work right now as we still fallback to the\n   * old SSO auth configuration page\n   */\n  handleConfigure = (provider: AuthProvider) => {\n    this.setState({busy: true});\n\n    this.api.request(`/organizations/${this.props.params.orgId}/auth-provider/`, {\n      method: 'POST',\n      data: {provider, init: true},\n      success: data => {\n        // Redirect to auth provider URL\n        if (data && data.auth_url) {\n          window.location.href = data.auth_url;\n        }\n      },\n      error: () => {\n        this.setState({busy: false});\n      },\n    });\n  };\n\n  /**\n   * TODO(epurkhiser): This does not work right now as we still fallback to the\n   * old SSO auth configuration page\n   */\n  handleDisableProvider = (provider: AuthProvider) => {\n    this.setState({busy: true});\n\n    this.api.request(`/organizations/${this.props.params.orgId}/auth-provider/`, {\n      method: 'DELETE',\n      data: {provider},\n      success: () => {\n        this.setState({provider: null, busy: false});\n      },\n      error: () => {\n        this.setState({busy: false});\n      },\n    });\n  };\n\n  renderBody() {\n    const {providerList, provider} = this.state;\n\n    if (providerList === null) {\n      return null;\n    }\n\n    if (this.props.organization.access.includes('org:write') && provider) {\n      // If SSO provider is configured, keep showing loading while we redirect\n      // to django configuration view\n      return this.renderLoading();\n    }\n\n    const activeProvider = providerList?.find(p => p.key === provider?.key);\n\n    return (\n      <OrganizationAuthList activeProvider={activeProvider} providerList={providerList} />\n    );\n  }\n}\n\nexport default withOrganization(OrganizationAuth);\n"],"sourceRoot":""}