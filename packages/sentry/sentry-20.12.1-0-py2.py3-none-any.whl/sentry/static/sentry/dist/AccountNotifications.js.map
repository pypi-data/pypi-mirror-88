{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/components/forms/jsonForm.tsx","webpack:///./app/views/settings/components/forms/formPanel.tsx","webpack:///./app/components/alertLink.tsx","webpack:///./app/data/forms/accountNotificationSettings.tsx","webpack:///./app/views/settings/account/accountNotifications.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","JsonForm","state","highlighted","getLocation","context","hash","scrollToHash","nextProps","setState","toHash","scrollToElement","sanitizeQuerySelector","decodeURIComponent","align","offset","err","Sentry","fields","fieldsWithVisibleProp","filter","field","defined","visible","length","additionalFieldProps","every","formPanelProps","shouldDisplayForm","renderFooter","renderHeader","access","forms","disabled","features","otherProps","location","map","formGroup","i","Fragment","key","renderForm","contextTypes","PropTypes","object","FormPanel","id","undefined","defaultValue","fieldWithoutDefaultValue","disabledReason","name","AlertLink","size","priority","children","onClick","withoutMarginBottom","openInNewTab","to","href","dataTestId","StyledLink","data-test-id","IconWrapper","AlertLinkText","IconLink","direction","linkProps","omit","alert","backgroundLight","textColor","border","route","subscribeByDefault","type","label","t","help","tct","locationPath","workflowNotifications","choices","weeklyReports","deployNotifications","personalActivityNotifications","selfAssignOnResolve","formGroups","FINE_TUNE_FOOTERS","text","path","AccountNotifications","initialData","data","saveOnBlur","apiMethod","apiEndpoint","accountNotificationFields","FineTuningFooter","FineTuneLink","Link","css"],"mappings":"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","file":"AccountNotifications.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  action?: React.ReactNode;\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, subtitle, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 ${space(3)};\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport * as Sentry from '@sentry/react';\nimport {Location} from 'history';\nimport PropTypes from 'prop-types';\nimport {Box} from 'reflexbox'; // eslint-disable-line no-restricted-imports\nimport scrollToElement from 'scroll-to-element';\n\nimport {defined} from 'app/utils';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\n\nimport FieldFromConfig from './fieldFromConfig';\nimport FormPanel from './formPanel';\nimport {Field, FieldObject, JsonFormObject} from './type';\n\ntype DefaultProps = {\n  additionalFieldProps: {[key: string]: any};\n};\n\ntype Props = {\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n  location?: Location;\n} & DefaultProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype Context = {\n  location?: Location;\n};\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends React.Component<Props, State> {\n  static propTypes = {\n    /**\n     * Fields that are grouped by \"section\"\n     */\n    forms: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        fields: PropTypes.arrayOf(\n          PropTypes.oneOfType([PropTypes.func, FieldFromConfig.propTypes.field])\n        ),\n      })\n    ),\n\n    /**\n     * If `forms` is not defined, `title` + `fields` must be required.\n     * Allows more fine grain control of title/fields\n     */\n    fields: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.func, FieldFromConfig.propTypes.field])\n    ),\n    /**\n     * Panel title if `forms` is not defined\n     */\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n    access: PropTypes.object,\n    features: PropTypes.object,\n    renderFooter: PropTypes.func,\n    /**\n     * Renders inside of PanelBody\n     */\n    renderHeader: PropTypes.func,\n    /**\n     * Disables the entire form\n     */\n    disabled: PropTypes.bool,\n  };\n\n  static contextTypes = {\n    location: PropTypes.object,\n  };\n\n  static defaultProps: DefaultProps = {\n    additionalFieldProps: {},\n  };\n\n  state: State = {\n    highlighted: getLocation(this.props, this.context).hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (\n      getLocation(this.props, this.context).hash !==\n      getLocation(nextProps, this.context).hash\n    ) {\n      const hash = getLocation(nextProps, this.context).hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    const hash = toHash || getLocation(this.props, this.context).hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n    };\n\n    return (\n      <Box {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <React.Fragment key={i}>\n              {this.renderForm({formPanelProps, ...formGroup})}\n            </React.Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </Box>\n    );\n  }\n}\n\nexport default JsonForm;\n\nfunction getLocation(props: Props, context: Context): Location | {hash?: string} {\n  return props.location || context.location || {};\n}\n","import React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {Scope} from 'app/types';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\nimport FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';\n\nimport {FieldObject, JsonFormObject} from './type';\n\ntype Props = {\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n\n  access?: Set<Scope>;\n  features?: Record<string, any>;\n\n  additionalFieldProps: {[key: string]: any};\n\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n};\n\nexport default class FormPanel extends React.Component<Props> {\n  render() {\n    const {\n      title,\n      fields,\n      access,\n      disabled,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n        {title && <PanelHeader>{title}</PanelHeader>}\n        <PanelBody>\n          {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n          {fields.map(field => {\n            if (typeof field === 'function') {\n              return field();\n            }\n\n            const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n            // Allow the form panel disabled prop to override the fields\n            // disabled prop, with fallback to the fields disabled state.\n            if (disabled === true) {\n              fieldWithoutDefaultValue.disabled = true;\n              fieldWithoutDefaultValue.disabledReason = undefined;\n            }\n\n            return (\n              <FieldFromConfig\n                access={access}\n                disabled={disabled}\n                key={field.name}\n                {...otherProps}\n                {...additionalFieldProps}\n                field={fieldWithoutDefaultValue}\n                highlighted={this.props.highlighted === `#${field.name}`}\n              />\n            );\n          })}\n          {typeof renderFooter === 'function' && renderFooter({title, fields})}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n      ['data-test-id']: dataTestId,\n    } = this.props;\n\n    return (\n      <StyledLink\n        data-test-id={dataTestId}\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import {t, tct} from 'app/locale';\nimport {Field, JsonFormObject} from 'app/views/settings/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/notifications/';\n\nexport const fields: {[key: string]: Field} = {\n  subscribeByDefault: {\n    name: 'subscribeByDefault',\n    type: 'boolean',\n    label: t('Send Me Alerts'),\n    // TODO(billy): Make this a real link\n    help: tct(\n      'Alerts are defined in [locationPath]. Enable this to receive alerts sent to your teams. You will always receive alerts configured to be sent directly to you.',\n      {\n        locationPath: '[Project] » Project Settings » Alerts',\n      }\n    ),\n  },\n  workflowNotifications: {\n    name: 'workflowNotifications',\n    type: 'radio',\n    label: t('Send Me Workflow Notifications'),\n    choices: [\n      [0, t('Always')],\n      [1, t('Only On Issues I Subscribe To')],\n      [2, t('Never')],\n    ],\n    help: t('E.g. changes in issue assignment, resolution status, and comments.'),\n  },\n  weeklyReports: {\n    // Form is not visible because currently not implemented\n    name: 'weeklyReports',\n    type: 'boolean',\n    label: t('Send Me Weekly Reports'),\n    help: t(\"Reports contain a summary of what's happened within your organization.\"),\n    disabled: true,\n  },\n  deployNotifications: {\n    name: 'deployNotifications',\n    type: 'radio',\n    label: t('Send Me Deploy Notifications'),\n    choices: [\n      [2, t('Always')],\n      [3, t('Only On Deploys With My Commits')],\n      [4, t('Never')],\n    ],\n    help: t('Deploy emails include release, environment and commit overviews.'),\n  },\n  personalActivityNotifications: {\n    name: 'personalActivityNotifications',\n    type: 'boolean',\n    label: t('Notify Me About My Own Activity'),\n    help: t('Enable this to receive notifications about your own actions on Sentry.'),\n  },\n  selfAssignOnResolve: {\n    name: 'selfAssignOnResolve',\n    type: 'boolean',\n    label: t(\"Claim Unassigned Issues I've Resolved\"),\n    help: t(\"You'll receive notifications about any changes that happen afterwards.\"),\n  },\n};\n\nconst formGroups: JsonFormObject[] = [\n  {\n    title: t('Alerts'),\n    fields: [fields.subscribeByDefault],\n  },\n\n  {\n    title: t('Workflow Notifications'),\n    fields: [fields.workflowNotifications],\n  },\n\n  {\n    title: t('Email Routing'),\n    fields: [],\n  },\n\n  {\n    title: t('Weekly Reports'),\n    fields: [],\n  },\n\n  {\n    title: t('Deploy Notifications'),\n    fields: [fields.deployNotifications],\n  },\n\n  {\n    title: t('My Activity'),\n    fields: [fields.personalActivityNotifications, fields.selfAssignOnResolve],\n  },\n];\n\nexport default formGroups;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport AlertLink from 'app/components/alertLink';\nimport Link from 'app/components/links/link';\nimport {PanelFooter} from 'app/components/panels';\nimport accountNotificationFields from 'app/data/forms/accountNotificationSettings';\nimport {IconChevron, IconMail} from 'app/icons';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nconst FINE_TUNE_FOOTERS = {\n  [t('Alerts')]: {\n    text: t('Fine tune alerts by project'),\n    path: 'alerts/',\n  },\n  [t('Workflow Notifications')]: {\n    text: t('Fine tune workflow notifications by project'),\n    path: 'workflow/',\n  },\n  [t('Email Routing')]: {\n    text: t('Fine tune email routing by project'),\n    path: 'email/',\n  },\n  [t('Weekly Reports')]: {\n    text: t('Fine tune weekly reports by organization'),\n    path: 'reports/',\n  },\n  [t('Deploy Notifications')]: {\n    text: t('Fine tune deploy notifications by organization'),\n    path: 'deploy/',\n  },\n};\n\ntype Props = AsyncView['props'] & {};\n\ntype State = AsyncView['state'] & {\n  data: Record<string, unknown> | null;\n};\n\nexport default class AccountNotifications extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['data', '/users/me/notifications/']];\n  }\n\n  getTitle() {\n    return 'Notifications';\n  }\n\n  renderBody() {\n    return (\n      <div>\n        <SettingsPageHeader title=\"Notifications\" />\n        <Form\n          initialData={this.state.data ?? undefined}\n          saveOnBlur\n          apiMethod=\"PUT\"\n          apiEndpoint=\"/users/me/notifications/\"\n        >\n          <JsonForm\n            forms={accountNotificationFields}\n            renderFooter={({title}) => {\n              if (typeof title !== 'string') {\n                return null;\n              }\n              if (FINE_TUNE_FOOTERS[title]) {\n                return <FineTuningFooter {...FINE_TUNE_FOOTERS[title]} />;\n              }\n              return null;\n            }}\n          />\n          <AlertLink to=\"/settings/account/emails\" icon={<IconMail />}>\n            {t('Looking to add or remove an email address? Use the emails panel.')}\n          </AlertLink>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst FineTuneLink = styled(Link)`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px 20px;\n  color: inherit;\n`;\n\ntype FooterProps = {\n  path: string;\n  text: string;\n};\n\nconst FineTuningFooter = ({path, text}: FooterProps) => (\n  <PanelFooter css={{borderTop: 'none'}}>\n    <FineTuneLink to={`/settings/account/notifications/${path}`}>\n      <span>{text}</span>\n      <IconChevron direction=\"right\" size=\"15px\" />\n    </FineTuneLink>\n  </PanelFooter>\n);\n"],"sourceRoot":""}