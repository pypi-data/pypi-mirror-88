{"version":3,"file":"leaflet.js","sources":["../../../packages/leaflet/src/components/Map.js","../../../packages/leaflet/src/components/Legend.js","../../../packages/leaflet/src/components/basemaps/Tile.js","../../../packages/leaflet/src/components/basemaps/EsriBasemap.js","../../../packages/leaflet/src/components/overlays/Geojson.js","../../../packages/leaflet/src/components/overlays/Highlight.js","../../../packages/leaflet/src/components/overlays/Draw.js","../../../packages/leaflet/src/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { usePlugin } from '@wq/react';\nimport PropTypes from 'prop-types';\nimport { Map as LMap, useLeaflet } from 'react-leaflet';\n\nfunction Ready() {\n    const { ready } = usePlugin('map') || {},\n        { map } = useLeaflet();\n    useEffect(() => {\n        ready && map && ready(map);\n    }, [ready, map]);\n    return null;\n}\n\nexport default function Map({ bounds, children, mapProps, containerStyle }) {\n    const style = {\n        flex: '1',\n        minHeight: 200,\n        ...containerStyle\n    };\n    const maxZoom = (mapProps && mapProps.maxZoom) || 18;\n    return (\n        <LMap bounds={bounds} style={style} maxZoom={maxZoom} {...mapProps}>\n            <Ready />\n            {children}\n        </LMap>\n    );\n}\n\nMap.propTypes = {\n    bounds: PropTypes.array,\n    children: PropTypes.node,\n    mapProps: PropTypes.object,\n    containerStyle: PropTypes.object\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LayersControl } from 'react-leaflet';\nconst { BaseLayer, Overlay } = LayersControl;\n\nexport default function Legend({ position, collapsed, children }) {\n    if (!position) {\n        position = 'topright';\n    }\n    if (collapsed === undefined) {\n        collapsed = true;\n    }\n    return (\n        <LayersControl position={position} collapsed={collapsed}>\n            {children}\n        </LayersControl>\n    );\n}\nLegend.propTypes = {\n    position: PropTypes.object,\n    collapsed: PropTypes.bool,\n    children: PropTypes.node\n};\n\nexport function BasemapToggle({ name, active, children, ...rest }) {\n    return (\n        <BaseLayer name={name} checked={active} {...rest}>\n            {children}\n        </BaseLayer>\n    );\n}\nBasemapToggle.propTypes = {\n    name: PropTypes.string,\n    active: PropTypes.bool,\n    children: PropTypes.node\n};\n\nexport function OverlayToggle({ name, active, children, ...rest }) {\n    return (\n        <Overlay name={name} checked={active} {...rest}>\n            {children}\n        </Overlay>\n    );\n}\nOverlayToggle.propTypes = {\n    name: PropTypes.string,\n    active: PropTypes.bool,\n    children: PropTypes.node\n};\n","import React from 'react';\nimport { TileLayer } from 'react-leaflet';\n\nexport default function Tile(props) {\n    return <TileLayer {...props} />;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LayerGroup, MapLayer, useLeaflet } from 'react-leaflet';\nimport { basemapLayer } from 'esri-leaflet';\n\nclass BasemapLayer extends MapLayer {\n    createLeafletElement({ layer, ...rest }) {\n        return basemapLayer(layer, rest);\n    }\n}\n\nexport default function EsriBasemap({ layer, labels, ...rest }) {\n    const leaflet = useLeaflet(),\n        props = {\n            ...rest,\n            layer,\n            leaflet\n        };\n    if (labels) {\n        const labelProps = {\n            ...props,\n            layer: props.layer + 'Labels'\n        };\n        return (\n            <LayerGroup>\n                <BasemapLayer {...props} />\n                <BasemapLayer {...labelProps} />\n            </LayerGroup>\n        );\n    } else {\n        return <BasemapLayer {...props} />;\n    }\n}\nEsriBasemap.propTypes = {\n    layer: PropTypes.string.isRequired,\n    labels: PropTypes.bool\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Mustache from 'mustache';\nimport { useGeoJSON } from '@wq/map';\nimport { usePlugin } from '@wq/react';\nimport { GeoJSON as LGeoJSON } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport L from 'leaflet';\n\nexport default function Geojson({\n    url,\n    data,\n    style,\n    icon,\n    popup,\n    oneach,\n    cluster,\n    clusterIcon\n}) {\n    const { config } = usePlugin('leaflet'),\n        { config: jqmConfig } = usePlugin('jqmrenderer') || {},\n        geojson = useGeoJSON(url, data),\n        options = {};\n\n    if (!geojson || !geojson.type) {\n        return null;\n    }\n\n    if (popup) {\n        const template =\n            config.popups[popup] ||\n            (jqmConfig && jqmConfig.templates[`${popup}_popup`]) ||\n            popup;\n        popup = ({ id, properties }, layer) => {\n            layer.bindPopup(Mustache.render(template, { id, ...properties }));\n        };\n    }\n\n    if (oneach && popup) {\n        options.onEachFeature = function (feat, layer) {\n            popup(feat, layer);\n            oneach(feat, layer);\n        };\n    } else if (oneach) {\n        options.onEachFeature = oneach;\n    } else if (popup) {\n        options.onEachFeature = popup;\n    }\n\n    if (icon) {\n        options.pointToLayer = function pointToLayer(geojson, latlng) {\n            // Define icon as a function to customize per-feature\n            var key;\n            if (typeof icon == 'function') {\n                key = icon(geojson.properties);\n            } else if (icon.indexOf('{{') > -1) {\n                key = Mustache.render(icon, geojson.properties);\n            } else {\n                key = icon;\n            }\n            return L.marker(latlng, { icon: config.icons[key] });\n        };\n    }\n\n    let Component;\n    if (cluster) {\n        Component = MarkerCluster;\n        options.clusterIcon = clusterIcon;\n    } else {\n        Component = LGeoJSON;\n    }\n\n    return <Component data={geojson} style={style} {...options} />;\n}\n\nGeojson.propTypes = {\n    url: PropTypes.string,\n    data: PropTypes.object,\n    style: PropTypes.func,\n    icon: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    popup: PropTypes.string,\n    oneach: PropTypes.func,\n    cluster: PropTypes.bool,\n    clusterIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\n\nfunction MarkerCluster({ clusterIcon, ...rest }) {\n    const options = {};\n    if (clusterIcon) {\n        options.iconCreateFunction = function clusterDiv(cluster) {\n            var cls;\n            var context = {\n                count: cluster.getChildCount()\n            };\n            if (context.count >= 100) {\n                context.large = true;\n            } else if (context.count >= 10) {\n                context.medium = true;\n            } else {\n                context.small = true;\n            }\n            if (typeof clusterIcon == 'function') {\n                cls = clusterIcon(context);\n            } else if (clusterIcon.indexOf('{{') > -1) {\n                cls = Mustache.render(clusterIcon, context);\n            } else {\n                cls = clusterIcon;\n            }\n            var html = Mustache.render(\n                '<div><span>{{count}}</span></div>',\n                context\n            );\n            return new L.DivIcon({\n                html: html,\n                className: 'marker-cluster ' + cls,\n                iconSize: new L.Point(40, 40)\n            });\n        };\n    }\n    return (\n        <MarkerClusterGroup {...options}>\n            <LGeoJSON {...rest} />\n        </MarkerClusterGroup>\n    );\n}\nMarkerCluster.propTypes = {\n    clusterIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GeoJSON } from 'react-leaflet';\n\nexport default function Highlight({ data }) {\n    function style() {\n        return {\n            color: '#00ffff'\n        };\n    }\n    return <GeoJSON data={data} style={style} />;\n}\n\nHighlight.propTypes = {\n    data: PropTypes.object\n};\n","import React, { useRef } from 'react';\nimport { useLeaflet, FeatureGroup, MapLayer } from 'react-leaflet';\nimport { GeoJSON as leaflet } from 'leaflet';\nimport { EditControl } from 'react-leaflet-draw';\nimport PropTypes from 'prop-types';\n\nconst TYPES = {\n    point: ['marker'],\n    line_string: ['polyline'],\n    polygon: ['polygon', 'rectangle'],\n    all: ['marker', 'polyline', 'polygon', 'rectangle']\n};\n\nclass FeatureImpl extends MapLayer {\n    createLeafletElement(props) {\n        return leaflet.geometryToLayer(props.data);\n    }\n}\n\nfunction Feature(props) {\n    const leaflet = useLeaflet();\n    return <FeatureImpl leaflet={leaflet} {...props} />;\n}\n\nexport default function Draw({ type, data, setData }) {\n    const ref = useRef(),\n        controls = {\n            polyline: false,\n            polygon: false,\n            rectangle: false,\n            circle: false,\n            marker: false,\n            circlemarker: false\n        },\n        types = TYPES[type] || TYPES.all;\n\n    types.forEach(type => (controls[type] = {}));\n\n    function save() {\n        const { leafletElement } = ref && ref.current;\n        if (!leafletElement) {\n            return;\n        }\n        setData(leafletElement.toGeoJSON());\n    }\n\n    return (\n        <FeatureGroup ref={ref}>\n            <EditControl\n                draw={controls}\n                onCreated={save}\n                onEdited={save}\n                onDeleted={save}\n            />\n            {data &&\n                data.features.map((feature, i) => (\n                    <Feature key={i} data={feature.geometry} />\n                ))}\n        </FeatureGroup>\n    );\n\n    /* FIXME\n    var $submit = $geom.parents('form').find('[type=submit]');\n    m.on('draw:drawstart draw:editstart draw:deletestart', function() {\n        $submit.attr('disabled', true);\n    });\n\n    m.on('draw:drawstop draw:editstop draw:deletestop', function() {\n        $submit.attr('disabled', false);\n    });\n    */\n}\n\nDraw.propTypes = {\n    type: PropTypes.string,\n    data: PropTypes.object,\n    setData: PropTypes.func\n};\n","import map from '@wq/map';\nimport { Map, Legend, BasemapToggle, OverlayToggle } from './components/index';\nimport { Tile } from './components/basemaps/index';\nimport { Geojson, Highlight, Draw } from './components/overlays/index';\nimport { LayerGroup as Group } from 'react-leaflet';\nimport L from 'leaflet';\n\n// import 'leaflet/dist/leaflet.css';\n\nexport default {\n    name: 'leaflet',\n    dependencies: [map],\n    config: {\n        popups: {},\n        icons: {\n            default: new L.Icon.Default()\n        },\n        defaults: {\n            // Defaults to simplify creation of new icons of the same dimensions\n            // as L.Icon.Default\n            icon: {\n                iconSize: [25, 41],\n                iconAnchor: [12, 41],\n                popupAnchor: [1, -34],\n                shadowSize: [41, 41]\n            }\n        }\n    },\n    init(config) {\n        if (config) {\n            this.config = { ...this.config, ...config };\n        }\n    },\n    createIcon(name, options) {\n        return (this.config.icons[name] = L.icon({\n            ...this.config.defaults.icon,\n            ...options\n        }));\n    },\n    components: {\n        Map,\n        Legend,\n        BasemapToggle,\n        OverlayToggle\n    },\n    basemaps: {\n        Group,\n        Empty: Group,\n        Tile\n    },\n    overlays: {\n        Group,\n        Empty: Group,\n        Geojson,\n        Highlight,\n        Draw\n    }\n};\n"],"names":["Ready","usePlugin","ready","useLeaflet","map","useEffect","Map","bounds","children","mapProps","containerStyle","style","flex","minHeight","maxZoom","React","LMap","propTypes","PropTypes","array","node","object","BaseLayer","LayersControl","Overlay","Legend","position","collapsed","undefined","bool","BasemapToggle","name","active","rest","string","OverlayToggle","Tile","props","TileLayer","BasemapLayer","layer","basemapLayer","MapLayer","EsriBasemap","labels","leaflet","labelProps","LayerGroup","isRequired","Geojson","url","data","icon","popup","oneach","cluster","clusterIcon","config","jqmConfig","geojson","useGeoJSON","options","type","template","popups","templates","id","properties","bindPopup","Mustache","render","onEachFeature","feat","pointToLayer","latlng","key","indexOf","L","marker","icons","Component","MarkerCluster","LGeoJSON","func","oneOfType","iconCreateFunction","clusterDiv","cls","context","count","getChildCount","large","medium","small","html","DivIcon","className","iconSize","Point","MarkerClusterGroup","Highlight","color","GeoJSON","TYPES","point","line_string","polygon","all","FeatureImpl","geometryToLayer","Feature","Draw","setData","ref","useRef","controls","polyline","rectangle","circle","circlemarker","types","forEach","save","current","leafletElement","toGeoJSON","FeatureGroup","EditControl","features","feature","i","geometry","dependencies","default","Icon","Default","defaults","iconAnchor","popupAnchor","shadowSize","init","createIcon","components","basemaps","Group","Empty","overlays"],"mappings":"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"}