{"version":3,"file":"model.js","sources":["../../../packages/model/src/model.js"],"sourcesContent":["import ds from '@wq/store';\nimport deepcopy from 'deepcopy';\nimport {\n    Model as ORMModel,\n    ORM,\n    attr,\n    fk,\n    ForeignKey\n} from 'redux-orm/src/index.js';\n\nfunction model(config) {\n    return new Model(config);\n}\n\nconst _orms = {};\n\nconst CREATE = 'CREATE',\n    UPDATE = 'UPDATE',\n    SUCCESS = 'SUCCESS',\n    DELETE = 'DELETE',\n    OVERWRITE = 'OVERWRITE';\n\nclass ORMWithReducer extends ORM {\n    constructor(store) {\n        super({\n            stateSelector: state => state.orm\n        });\n        this.store = store;\n    }\n\n    getReverseRels(modelName) {\n        if (!this._rrel) {\n            this._rrel = {};\n            const models = {};\n            this.getModelClasses().forEach(cls => {\n                models[cls.modelName] = cls;\n            });\n            Object.values(models).forEach(cls => {\n                Object.entries(cls.fields).forEach(([name, field]) => {\n                    if (!(field instanceof ForeignKey)) {\n                        return;\n                    }\n\n                    const to = field.toModelName,\n                        toModel = models[to];\n\n                    if (!toModel || !toModel.wqConfig) {\n                        return;\n                    }\n                    const isNested =\n                        (toModel.wqConfig.form || []).filter(\n                            f =>\n                                f.type === 'repeat' &&\n                                f.name === field.relatedName\n                        ).length > 0;\n\n                    if (!this._rrel[to]) {\n                        this._rrel[to] = [];\n                    }\n\n                    this._rrel[to].push({\n                        model: cls.modelName,\n                        fkName: name,\n                        relatedName: field.relatedName,\n                        nested: isNested\n                    });\n                });\n            });\n        }\n        return this._rrel[modelName] || [];\n    }\n\n    getNestedModels(modelName) {\n        return this.getReverseRels(modelName).filter(rel => rel.nested);\n    }\n\n    get prefix() {\n        if (this.store.name === 'main') {\n            return 'ORM';\n        } else {\n            return `${this.store.name.toUpperCase()}ORM`;\n        }\n    }\n    reducer(state, action) {\n        const session = this.session(state || this.getEmptyState()),\n            match = action.type.match(/^([^_]+)_(.+)_([^_]+)$/);\n\n        if (!match || match[1] !== this.prefix) {\n            return session.state;\n        }\n\n        const modelName = match[2].toLowerCase(),\n            actName = match[3],\n            cls = session[modelName];\n\n        if (!cls) {\n            return session.state;\n        }\n        const currentCount = cls.count();\n\n        let updateCount;\n\n        switch (actName) {\n            case CREATE: {\n                this._nestedCreate(cls, action.payload);\n                updateCount = true;\n                break;\n            }\n            case UPDATE:\n            case SUCCESS: {\n                const items = Array.isArray(action.payload)\n                    ? action.payload\n                    : [action.payload];\n\n                if (\n                    action.meta &&\n                    action.meta.currentId &&\n                    action.meta.currentId != items[0].id\n                ) {\n                    this._updateID(cls, action.meta.currentId, items[0].id);\n                }\n\n                items.forEach(item => this._nestedUpdate(cls, item));\n\n                updateCount = true;\n\n                break;\n            }\n            case DELETE: {\n                this._nestedDelete(cls.withId(action.payload));\n                updateCount = true;\n                break;\n            }\n\n            case OVERWRITE: {\n                const { list, ...info } = action.payload;\n                this._removeObsolete(cls.all(), list, true);\n                list.forEach(item => this._nestedUpdate(cls, item));\n                session._modelmeta.upsert({\n                    id: cls.modelName,\n                    ...info\n                });\n                break;\n            }\n        }\n\n        if (updateCount) {\n            const meta = session._modelmeta.withId(cls.modelName);\n            if (meta) {\n                // Use delta in case server count != local count.\n                const countChange = cls.count() - currentCount,\n                    update = { count: meta.count + countChange };\n                if (meta.pages === 1 && meta.per_page === meta.count) {\n                    update.per_page = update.count;\n                }\n                meta.update(update);\n            } else {\n                session._modelmeta.create({\n                    id: cls.modelName,\n                    pages: 1,\n                    count: cls.count(),\n                    per_page: cls.count()\n                });\n            }\n            // FIXME: Update count for nested models\n        }\n\n        return session.state;\n    }\n\n    _setNested(cls, data) {\n        const item = { ...data },\n            session = cls.session,\n            nested = this.getNestedModels(cls.modelName);\n\n        const exist = data.id ? cls.withId(data.id) : null;\n\n        // Normalize nested records into their own models\n        nested.forEach(({ model, fkName, relatedName }) => {\n            if (!Array.isArray(item[relatedName])) {\n                return;\n            }\n            if (exist && exist[relatedName] && exist[relatedName].toRefArray) {\n                this._removeObsolete(exist[relatedName], item[relatedName]);\n            }\n            item[relatedName].forEach(row => {\n                session[model].upsert({\n                    ...row,\n                    [fkName]: item.id\n                });\n            });\n            delete item[relatedName];\n        });\n        return item;\n    }\n\n    _removeObsolete(qs, newItems, nested) {\n        const idsToKeep = newItems.map(row => row.id).filter(id => !!id),\n            obsolete = qs.filter(item => !idsToKeep.includes(item.id));\n        if (nested) {\n            obsolete.toModelArray().forEach(item => this._nestedDelete(item));\n        } else {\n            obsolete.delete();\n        }\n    }\n\n    _nestedCreate(cls, data) {\n        const item = this._setNested(cls, data);\n        cls.create(item);\n    }\n\n    _nestedUpdate(cls, data) {\n        const item = this._setNested(cls, data);\n        cls.upsert(item);\n    }\n\n    _nestedDelete(instance) {\n        const nested = this.getNestedModels(instance.getClass().modelName);\n        nested.forEach(({ relatedName }) => {\n            instance[relatedName].delete();\n        });\n        instance.delete();\n    }\n\n    _updateID(cls, oldId, newId) {\n        // New ID was assigned (i.e. by the server)\n        const exist = cls.withId(oldId),\n            rrel = this.getReverseRels(cls.modelName);\n        if (!exist) {\n            return;\n        }\n        // Update any existing FKs to point to the new ID\n        // (including both nested and non-nested relationships)\n        rrel.forEach(({ fkName, relatedName }) => {\n            exist[relatedName].update({\n                [fkName]: newId\n            });\n        });\n\n        // Remove and replace (see redux-orm #176)\n        cls.upsert({\n            ...exist.ref,\n            id: newId\n        });\n        exist.delete();\n    }\n}\n\nclass ModelMeta extends ORMModel {}\nModelMeta.modelName = '_modelmeta';\n\nfunction orm(store) {\n    if (!_orms[store.name]) {\n        const orm = (_orms[store.name] = new ORMWithReducer(store));\n        store.addReducer(\n            'orm',\n            (state, action) => orm.reducer(state, action),\n            true\n        );\n        orm.register(ModelMeta);\n    }\n    return _orms[store.name];\n}\n\nmodel.cacheOpts = {\n    // First page (e.g. 50 records) is stored locally; subsequent pages can be\n    // loaded from server.\n    first_page: {\n        server: true,\n        client: true,\n        page: 1,\n        reversed: true\n    },\n\n    // All data is prefetched and stored locally, no subsequent requests are\n    // necessary.\n    all: {\n        server: false,\n        client: true,\n        page: 0,\n        reversed: false\n    },\n\n    // \"Important\" data is cached; other data can be accessed via pagination.\n    filter: {\n        server: true,\n        client: true,\n        page: 0,\n        reversed: true\n    },\n\n    // No data is cached locally; all data require a network request.\n    none: {\n        server: true,\n        client: false,\n        page: 0,\n        reversed: false\n    }\n};\n\n// Retrieve a stored list as an object with helper functions\n//  - especially useful for server-paginated lists\n//  - methods must be called asynchronously\nclass Model {\n    constructor(config) {\n        if (!config) {\n            throw 'No configuration provided!';\n        }\n        if (typeof config == 'string') {\n            config = { query: config, name: config };\n        }\n\n        if (!config.name) {\n            throw new Error('Model name is now required.');\n        }\n\n        if (!config.cache) {\n            config.cache = 'first_page';\n        }\n\n        this.config = config;\n        this.name = config.name;\n        this.idCol = config.idCol || 'id';\n        this.opts = model.cacheOpts[config.cache];\n\n        if (!this.opts) {\n            throw 'Unknown cache option ' + config.cache;\n        }\n        ['max_local_pages', 'partial', 'reversed'].forEach(function (name) {\n            if (name in config) {\n                throw '\"' + name + '\" is deprecated in favor of \"cache\"';\n            }\n        });\n\n        // Default to main store, but allow overriding\n        if (config.store) {\n            if (config.store instanceof ds.constructor) {\n                this.store = config.store;\n            } else {\n                this.store = ds.getStore(config.store);\n            }\n        } else {\n            this.store = ds;\n        }\n\n        this.orm = orm(this.store);\n\n        try {\n            this._model = this.orm.get(this.name);\n        } catch (e) {\n            const idCol = this.idCol;\n            class M extends ORMModel {\n                static get idAttribute() {\n                    return idCol;\n                }\n                static get fields() {\n                    const fields = {};\n                    (config.form || []).forEach(field => {\n                        if (field['wq:ForeignKey']) {\n                            fields[field.name + '_id'] = fk({\n                                to: field['wq:ForeignKey'],\n                                as: field.name,\n                                relatedName:\n                                    field['wq:related_name'] ||\n                                    config.url ||\n                                    config.name + 's'\n                            });\n                        } else if (field.type !== 'repeat') {\n                            fields[field.name] = attr();\n                        }\n                    });\n                    return fields;\n                }\n                static get wqConfig() {\n                    return config;\n                }\n            }\n            M.modelName = this.name;\n            this.orm.register(M);\n            this._model = M;\n        }\n\n        if (config.query) {\n            this.query = this.store.normalizeQuery(config.query);\n        } else if (config.url !== undefined) {\n            this.query = { url: config.url };\n        }\n\n        // Configurable functions to e.g. filter data by\n        this.functions = config.functions || {};\n    }\n\n    expandActionType(type) {\n        return `${this.orm.prefix}_${this.name.toUpperCase()}_${type}`;\n    }\n\n    dispatch(type, payload, meta) {\n        const action = {\n            type: this.expandActionType(type),\n            payload: payload\n        };\n        if (meta) {\n            action.meta = meta;\n        }\n        return this.store.dispatch(action);\n    }\n\n    getSession() {\n        return this.orm.session(this.store.getState().orm);\n    }\n\n    getSessionModel() {\n        const model = this.getSession()[this.name];\n        if (!model) {\n            throw new Error('Could not find model in session');\n        }\n        return model;\n    }\n\n    get model() {\n        return this.getSessionModel();\n    }\n\n    getQuerySet() {\n        const model = this.getSessionModel();\n        return model\n            .all()\n            .orderBy(this.idCol, this.opts.reversed ? 'desc' : 'asc');\n    }\n\n    get objects() {\n        return this.getQuerySet();\n    }\n\n    async getPage(page_num) {\n        var query = { ...this.query };\n        if (page_num !== null) {\n            query.page = page_num;\n        }\n\n        const result = await this.store.fetch(query);\n        var data = this._processData(result);\n        if (!data.page) {\n            data.page = page_num;\n        }\n        return data;\n    }\n\n    _processData(data) {\n        if (!data) {\n            data = [];\n        }\n        if (Array.isArray(data)) {\n            data = { list: data };\n        }\n        if (!data.pages) {\n            data.pages = 1;\n        }\n        if (!data.count) {\n            data.count = data.list.length;\n        }\n        if (!data.per_page) {\n            data.per_page = data.list.length;\n        }\n        return data;\n    }\n\n    _withNested(instance) {\n        const data = deepcopy(instance.ref);\n        const nested = this.orm.getNestedModels(instance.getClass().modelName);\n        nested.forEach(({ relatedName }) => {\n            data[relatedName] = instance[relatedName].toRefArray();\n        });\n        return data;\n    }\n\n    async load() {\n        const info = await this.info();\n        return {\n            ...info,\n            list: this.getQuerySet()\n                .toModelArray()\n                .map(instance => this._withNested(instance))\n        };\n    }\n\n    async info(retry = true) {\n        const info = this.getSession()._modelmeta.withId(this.name);\n        if (info) {\n            const { pages, count, per_page } = info.ref;\n            return { pages, count, per_page };\n        } else {\n            if (this.query && retry) {\n                await this.prefetch();\n                return this.info(false);\n            } else {\n                return {\n                    pages: 1,\n                    count: 0,\n                    per_page: 0\n                };\n            }\n        }\n    }\n\n    async ensureLoaded() {\n        await this.info();\n    }\n\n    // Load data for the given page number\n    async page(page_num) {\n        if (!this.config.url) {\n            if (page_num > this.opts.page) {\n                throw new Error('No URL, cannot retrieve page ' + page_num);\n            }\n        }\n        if (page_num <= this.opts.page) {\n            // Store data locally\n            return this.load();\n        } else {\n            // Fetch on demand but don't store\n            return this.getPage(page_num);\n        }\n    }\n\n    // Iterate across stored data\n    async forEach(cb, thisarg) {\n        const data = await this.load();\n        data.list.forEach(cb, thisarg);\n    }\n\n    // Find an object by id\n    async find(value, localOnly) {\n        if (localOnly && typeof localOnly !== 'boolean') {\n            throw new Error(\n                'Usage: find(value[, localOnly).  To customize id attr use config.idCol'\n            );\n        }\n        await this.ensureLoaded();\n        const model = this.getSessionModel(),\n            instance = model.withId(value);\n\n        if (instance) {\n            return this._withNested(instance);\n        } else if (\n            value !== undefined &&\n            !localOnly &&\n            this.opts.server &&\n            this.config.url\n        ) {\n            return await this.store.fetch('/' + this.config.url + '/' + value);\n        } else {\n            return null;\n        }\n    }\n\n    filterFields() {\n        let fields = [this.idCol];\n        fields = fields.concat(\n            (this.config.form || []).map(field =>\n                field['wq:ForeignKey'] ? `${field.name}_id` : field.name\n            )\n        );\n        fields = fields.concat(Object.keys(this.functions));\n        fields = fields.concat(this.config.filter_fields || []);\n        if (this.config.filter_ignore) {\n            fields = fields.filter(\n                field => !this.config.filter_ignore.includes(field)\n            );\n        }\n        return fields;\n    }\n\n    // Filter an array of objects by one or more attributes\n    async filterPage(filter, any, localOnly) {\n        // Ignore fields that are not explicitly registered\n        // (e.g. for use with list views that have custom URL params)\n        const filterFields = this.filterFields();\n        Object.keys(filter).forEach(field => {\n            if (!filterFields.includes(field)) {\n                if (!(this.config.filter_ignore || []).includes(field)) {\n                    console.warn(\n                        `Ignoring unrecognized field \"${field}\"` +\n                            ` while filtering ${this.name} list.` +\n                            ' Add to form or filter_fields to enable filtering,' +\n                            ' or to filter_ignore to remove this warning.'\n                    );\n                }\n                filter = { ...filter };\n                delete filter[field];\n            }\n        });\n\n        // If partial list, we can never be 100% sure all filter matches are\n        // stored locally. In that case, run query on server.\n        if (!localOnly && this.opts.server && this.config.url) {\n            // FIXME: won't work as expected if any == true\n            const result = await this.store.fetch({\n                url: this.config.url,\n                ...filter\n            });\n            return this._processData(result);\n        }\n\n        if (!filter || !Object.keys(filter).length) {\n            // No filter: return unmodified list directly\n            return this.load();\n        }\n\n        await this.ensureLoaded();\n\n        var qs = this.getQuerySet();\n        if (any) {\n            // any=true: Match on any of the provided filter attributes\n            qs = qs.filter(item => {\n                return (\n                    Object.keys(filter).filter(attr => {\n                        return this.matches(item, attr, filter[attr]);\n                    }).length > 0\n                );\n            });\n        } else {\n            // Default: require match on all filter attributes\n\n            // Use object filter to take advantage of redux-orm indexes -\n            // except for boolean/array/computed filters.\n            var defaultFilter = {},\n                customFilter = {},\n                hasDefaultFilter = false,\n                hasCustomFilter = false;\n            Object.keys(filter).forEach(attr => {\n                const comp = filter[attr];\n                if (this.isCustomFilter(attr, comp)) {\n                    customFilter[attr] = comp;\n                    hasCustomFilter = true;\n                } else {\n                    defaultFilter[attr] = comp;\n                    hasDefaultFilter = true;\n                }\n            });\n            if (hasDefaultFilter) {\n                qs = qs.filter(defaultFilter);\n            }\n            if (hasCustomFilter) {\n                qs = qs.filter(item => {\n                    var match = true;\n                    Object.keys(customFilter).forEach(attr => {\n                        if (!this.matches(item, attr, customFilter[attr])) {\n                            match = false;\n                        }\n                    });\n                    return match;\n                });\n            }\n        }\n        return this._processData(\n            qs.toModelArray().map(instance => this._withNested(instance))\n        );\n    }\n\n    // Filter an array of objects by one or more attributes\n    async filter(filter, any, localOnly) {\n        const data = await this.filterPage(filter, any, localOnly);\n        return data.list;\n    }\n\n    // Create new item\n    async create(object, meta) {\n        this.dispatch(CREATE, object, meta);\n    }\n\n    // Merge new/updated items into list\n    async update(update, meta) {\n        if (meta && typeof meta === 'string') {\n            throw new Error(\n                'Usage: update(items[, meta]).  To customize id attr use config.idCol'\n            );\n        }\n        return this.dispatch(UPDATE, update, meta);\n    }\n\n    async remove(id, meta) {\n        if (meta && typeof meta === 'string') {\n            throw new Error(\n                'Usage: remove(id).  To customize id attr use config.idCol'\n            );\n        }\n        return this.dispatch(DELETE, id, meta);\n    }\n\n    // Overwrite entire list\n    async overwrite(data, meta) {\n        if (data.pages == 1 && data.list) {\n            data.count = data.per_page = data.list.length;\n        } else {\n            data = this._processData(data);\n        }\n        return this.dispatch(OVERWRITE, data, meta);\n    }\n\n    // Prefetch list\n    async prefetch() {\n        const data = await this.getPage(null);\n        return this.overwrite(data);\n    }\n\n    // Helper for partial list updates (useful for large lists)\n    // Note: params should contain correct arguments to fetch only \"recent\"\n    // items from server; idcol should be a unique identifier for the list\n    async fetchUpdate(params, idCol) {\n        if (idCol) {\n            throw new Error(\n                'Usage: fetchUpdate(params).  To customize id attr use config.idCol'\n            );\n        }\n        // Update local list with recent items from server\n        var q = { ...this.query, ...params };\n        const data = await this.store.fetch(q);\n        return this.update(data);\n    }\n\n    // Unsaved form items related to this list\n    unsyncedItems(withData) {\n        // Note: wq/outbox needs to have already been loaded for this to work\n        var outbox = this.store.outbox;\n        if (!outbox) {\n            return Promise.resolve([]);\n        }\n        return outbox.unsyncedItems(this.query, withData);\n    }\n\n    // Apply a predefined function to a retreived item\n    compute(fn, item) {\n        if (this.functions[fn]) {\n            return this.functions[fn](item);\n        } else {\n            return null;\n        }\n    }\n\n    isCustomFilter(attr, comp) {\n        return (\n            this.functions[attr] ||\n            isPotentialBoolean(comp) ||\n            Array.isArray(comp)\n        );\n    }\n\n    matches(item, attr, comp) {\n        var value;\n\n        if (this.functions[attr]) {\n            value = this.compute(attr, item);\n        } else {\n            value = item[attr];\n        }\n\n        if (Array.isArray(comp)) {\n            return comp.filter(c => checkValue(value, c)).length > 0;\n        } else {\n            return checkValue(value, comp);\n        }\n\n        function checkValue(value, comp) {\n            if (isRawBoolean(value)) {\n                return value === toBoolean(comp);\n            } else if (typeof value === 'number') {\n                return value === +comp;\n            } else if (Array.isArray(value)) {\n                return value.filter(v => checkValue(v, comp)).length > 0;\n            } else {\n                return value === comp;\n            }\n        }\n    }\n}\n\nfunction isRawBoolean(value) {\n    return [null, true, false].indexOf(value) > -1;\n}\n\nfunction toBoolean(value) {\n    if ([true, 'true', 1, '1', 't', 'y'].indexOf(value) > -1) {\n        return true;\n    } else if ([false, 'false', 0, '0', 'f', 'n'].indexOf(value) > -1) {\n        return false;\n    } else if ([null, 'null'].indexOf(value) > -1) {\n        return null;\n    } else {\n        return value;\n    }\n}\n\nfunction isPotentialBoolean(value) {\n    return isRawBoolean(toBoolean(value));\n}\n\nmodel.Model = Model;\n\nexport default model;\n\nexport { Model };\n"],"names":["model","config","Model","_orms","CREATE","UPDATE","SUCCESS","DELETE","OVERWRITE","ORMWithReducer","store","stateSelector","state","orm","modelName","_rrel","models","getModelClasses","forEach","cls","Object","values","entries","fields","name","field","ForeignKey","to","toModelName","toModel","wqConfig","isNested","form","filter","f","type","relatedName","length","push","fkName","nested","getReverseRels","rel","action","session","getEmptyState","match","prefix","toLowerCase","actName","currentCount","count","updateCount","_nestedCreate","payload","items","Array","isArray","meta","currentId","id","_updateID","item","_nestedUpdate","_nestedDelete","withId","list","info","_removeObsolete","all","_modelmeta","upsert","countChange","update","pages","per_page","create","data","getNestedModels","exist","toRefArray","row","qs","newItems","idsToKeep","map","obsolete","includes","toModelArray","delete","_setNested","instance","getClass","oldId","newId","rrel","ref","toUpperCase","ORM","ModelMeta","ORMModel","addReducer","reducer","register","cacheOpts","first_page","server","client","page","reversed","none","query","Error","cache","idCol","opts","ds","constructor","getStore","_model","get","e","M","fk","as","url","attr","normalizeQuery","undefined","functions","expandActionType","dispatch","getState","getSession","getSessionModel","orderBy","page_num","fetch","result","_processData","deepcopy","getQuerySet","_withNested","retry","prefetch","load","getPage","cb","thisarg","value","localOnly","ensureLoaded","concat","keys","filter_fields","filter_ignore","any","filterFields","console","warn","matches","defaultFilter","customFilter","hasDefaultFilter","hasCustomFilter","comp","isCustomFilter","filterPage","object","overwrite","params","q","withData","outbox","Promise","resolve","unsyncedItems","fn","isPotentialBoolean","compute","c","checkValue","isRawBoolean","toBoolean","v","indexOf"],"mappings":"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"}