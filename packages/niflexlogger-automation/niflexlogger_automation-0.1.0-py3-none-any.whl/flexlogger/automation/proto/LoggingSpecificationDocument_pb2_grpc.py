# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexlogger.automation.proto import LoggingSpecificationDocument_pb2 as flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2


class LoggingSpecificationDocumentStub(object):
    """Service interface for a server side logging specification document.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetLogFileBasePath = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/GetLogFileBasePath',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetLogFileBasePathRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetLogFileBasePathResponse.FromString,
                )
        self.SetLogFileBasePath = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/SetLogFileBasePath',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetLogFileBasePathRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetLogFileBasePathResponse.FromString,
                )
        self.GetLogFileName = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/GetLogFileName',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetLogFileNameRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetLogFileNameResponse.FromString,
                )
        self.SetLogFileName = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/SetLogFileName',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetLogFileNameRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetLogFileNameResponse.FromString,
                )
        self.GetTestProperties = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/GetTestProperties',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetTestPropertiesRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetTestPropertiesResponse.FromString,
                )
        self.GetTestProperty = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/GetTestProperty',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetTestPropertyRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetTestPropertyResponse.FromString,
                )
        self.SetTestProperty = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/SetTestProperty',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetTestPropertyRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetTestPropertyResponse.FromString,
                )
        self.RemoveTestProperty = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/RemoveTestProperty',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.RemoveTestPropertyRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.RemoveTestPropertyResponse.FromString,
                )
        self.GetResolvedLogFileBasePath = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/GetResolvedLogFileBasePath',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetResolvedLogFileBasePathRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetResolvedLogFileBasePathResponse.FromString,
                )
        self.GetResolvedLogFileName = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/GetResolvedLogFileName',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetResolvedLogFileNameRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetResolvedLogFileNameResponse.FromString,
                )


class LoggingSpecificationDocumentServicer(object):
    """Service interface for a server side logging specification document.
    """

    def GetLogFileBasePath(self, request, context):
        """RPC call to get the log file base path
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLogFileBasePath(self, request, context):
        """RPC call to set the log file base path
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLogFileName(self, request, context):
        """RPC call to get the log file name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLogFileName(self, request, context):
        """RPC call to set the log file name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTestProperties(self, request, context):
        """RPC call to get all test properties
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTestProperty(self, request, context):
        """RPC call to get a specific test property
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTestProperty(self, request, context):
        """RPC call to set a specific test property
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveTestProperty(self, request, context):
        """RPC call to remove a specific test property
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResolvedLogFileBasePath(self, request, context):
        """RPC call to get the resolved log file base path
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResolvedLogFileName(self, request, context):
        """RPC call to get the resolved log file name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LoggingSpecificationDocumentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetLogFileBasePath': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLogFileBasePath,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetLogFileBasePathRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetLogFileBasePathResponse.SerializeToString,
            ),
            'SetLogFileBasePath': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLogFileBasePath,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetLogFileBasePathRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetLogFileBasePathResponse.SerializeToString,
            ),
            'GetLogFileName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLogFileName,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetLogFileNameRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetLogFileNameResponse.SerializeToString,
            ),
            'SetLogFileName': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLogFileName,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetLogFileNameRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetLogFileNameResponse.SerializeToString,
            ),
            'GetTestProperties': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTestProperties,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetTestPropertiesRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetTestPropertiesResponse.SerializeToString,
            ),
            'GetTestProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTestProperty,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetTestPropertyRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetTestPropertyResponse.SerializeToString,
            ),
            'SetTestProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTestProperty,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetTestPropertyRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetTestPropertyResponse.SerializeToString,
            ),
            'RemoveTestProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveTestProperty,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.RemoveTestPropertyRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.RemoveTestPropertyResponse.SerializeToString,
            ),
            'GetResolvedLogFileBasePath': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResolvedLogFileBasePath,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetResolvedLogFileBasePathRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetResolvedLogFileBasePathResponse.SerializeToString,
            ),
            'GetResolvedLogFileName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResolvedLogFileName,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetResolvedLogFileNameRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetResolvedLogFileNameResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LoggingSpecificationDocument(object):
    """Service interface for a server side logging specification document.
    """

    @staticmethod
    def GetLogFileBasePath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/GetLogFileBasePath',
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetLogFileBasePathRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetLogFileBasePathResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLogFileBasePath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/SetLogFileBasePath',
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetLogFileBasePathRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetLogFileBasePathResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLogFileName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/GetLogFileName',
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetLogFileNameRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetLogFileNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLogFileName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/SetLogFileName',
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetLogFileNameRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetLogFileNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTestProperties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/GetTestProperties',
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetTestPropertiesRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetTestPropertiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTestProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/GetTestProperty',
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetTestPropertyRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetTestPropertyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetTestProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/SetTestProperty',
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetTestPropertyRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.SetTestPropertyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveTestProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/RemoveTestProperty',
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.RemoveTestPropertyRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.RemoveTestPropertyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetResolvedLogFileBasePath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/GetResolvedLogFileBasePath',
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetResolvedLogFileBasePathRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetResolvedLogFileBasePathResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetResolvedLogFileName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.LoggingSpecificationDocument/GetResolvedLogFileName',
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetResolvedLogFileNameRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_LoggingSpecificationDocument__pb2.GetResolvedLogFileNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
