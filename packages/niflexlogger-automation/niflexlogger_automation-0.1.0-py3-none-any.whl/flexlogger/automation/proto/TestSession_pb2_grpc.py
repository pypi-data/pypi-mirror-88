# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexlogger.automation.proto import TestSession_pb2 as flexlogger_dot_automation_dot_proto_dot_TestSession__pb2


class TestSessionStub(object):
    """Service interface for a server side test session.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddNote = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.TestSession/AddNote',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.AddNoteRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.AddNoteResponse.FromString,
                )
        self.GetState = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.TestSession/GetState',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.GetTestSessionStateRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.GetTestSessionStateResponse.FromString,
                )
        self.Start = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.TestSession/Start',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.StartTestSessionRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.StartTestSessionResponse.FromString,
                )
        self.Stop = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.TestSession/Stop',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.StopTestSessionRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.StopTestSessionResponse.FromString,
                )


class TestSessionServicer(object):
    """Service interface for a server side test session.
    """

    def AddNote(self, request, context):
        """RPC call to add a note to the log file. Notes can only be added while the test session is running.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetState(self, request, context):
        """RPC call to get the state of the test session.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """RPC call to start the test session.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """RPC call to stop the test session.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TestSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddNote': grpc.unary_unary_rpc_method_handler(
                    servicer.AddNote,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.AddNoteRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.AddNoteResponse.SerializeToString,
            ),
            'GetState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetState,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.GetTestSessionStateRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.GetTestSessionStateResponse.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.StartTestSessionRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.StartTestSessionResponse.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.StopTestSessionRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.StopTestSessionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'national_instruments.flex_logger.automation.protocols.TestSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TestSession(object):
    """Service interface for a server side test session.
    """

    @staticmethod
    def AddNote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.TestSession/AddNote',
            flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.AddNoteRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.AddNoteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.TestSession/GetState',
            flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.GetTestSessionStateRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.GetTestSessionStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.TestSession/Start',
            flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.StartTestSessionRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.StartTestSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.TestSession/Stop',
            flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.StopTestSessionRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_TestSession__pb2.StopTestSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
