# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexlogger.automation.proto import ChannelSpecificationDocument_pb2 as flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2


class ChannelSpecificationDocumentStub(object):
    """Service interface for a server side channel specification document.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetChannelNames = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.ChannelSpecificationDocument/GetChannelNames',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.GetChannelNamesRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.GetChannelNamesResponse.FromString,
                )
        self.GetDoubleChannelValue = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.ChannelSpecificationDocument/GetDoubleChannelValue',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.GetDoubleChannelValueRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.GetDoubleChannelValueResponse.FromString,
                )
        self.SetDoubleChannelValue = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.ChannelSpecificationDocument/SetDoubleChannelValue',
                request_serializer=flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.SetDoubleChannelValueRequest.SerializeToString,
                response_deserializer=flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.SetDoubleChannelValueResponse.FromString,
                )


class ChannelSpecificationDocumentServicer(object):
    """Service interface for a server side channel specification document.
    """

    def GetChannelNames(self, request, context):
        """RPC call to get all channel names
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDoubleChannelValue(self, request, context):
        """RPC call to get the latest value of a double channel
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDoubleChannelValue(self, request, context):
        """RPC call to set the value of a double channel
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChannelSpecificationDocumentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetChannelNames': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChannelNames,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.GetChannelNamesRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.GetChannelNamesResponse.SerializeToString,
            ),
            'GetDoubleChannelValue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDoubleChannelValue,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.GetDoubleChannelValueRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.GetDoubleChannelValueResponse.SerializeToString,
            ),
            'SetDoubleChannelValue': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDoubleChannelValue,
                    request_deserializer=flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.SetDoubleChannelValueRequest.FromString,
                    response_serializer=flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.SetDoubleChannelValueResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'national_instruments.flex_logger.automation.protocols.ChannelSpecificationDocument', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChannelSpecificationDocument(object):
    """Service interface for a server side channel specification document.
    """

    @staticmethod
    def GetChannelNames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.ChannelSpecificationDocument/GetChannelNames',
            flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.GetChannelNamesRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.GetChannelNamesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDoubleChannelValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.ChannelSpecificationDocument/GetDoubleChannelValue',
            flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.GetDoubleChannelValueRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.GetDoubleChannelValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDoubleChannelValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.ChannelSpecificationDocument/SetDoubleChannelValue',
            flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.SetDoubleChannelValueRequest.SerializeToString,
            flexlogger_dot_automation_dot_proto_dot_ChannelSpecificationDocument__pb2.SetDoubleChannelValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
