# coding: utf-8

"""
    bmlx api-server.

    Documentation of bmlx api-server apis. To find more info about generating spec from source, please refer to https://goswagger.io/use/spec.html  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class CreatePipelineVersionRequest(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'pipeline_id': 'int',
        'commit_id': 'str',
        'dag': 'str',
        'name': 'str',
        'package_uri': 'str',
        'parameters': 'str',
        'settings': 'str'
    }

    attribute_map = {
        'pipeline_id': 'PipelineID',
        'commit_id': 'commit_id',
        'dag': 'dag',
        'name': 'name',
        'package_uri': 'package_uri',
        'parameters': 'parameters',
        'settings': 'settings'
    }

    def __init__(self, pipeline_id=None, commit_id=None, dag=None, name=None, package_uri=None, parameters=None, settings=None, local_vars_configuration=None):  # noqa: E501
        """CreatePipelineVersionRequest - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._pipeline_id = None
        self._commit_id = None
        self._dag = None
        self._name = None
        self._package_uri = None
        self._parameters = None
        self._settings = None
        self.discriminator = None

        if pipeline_id is not None:
            self.pipeline_id = pipeline_id
        if commit_id is not None:
            self.commit_id = commit_id
        if dag is not None:
            self.dag = dag
        if name is not None:
            self.name = name
        if package_uri is not None:
            self.package_uri = package_uri
        if parameters is not None:
            self.parameters = parameters
        if settings is not None:
            self.settings = settings

    @property
    def pipeline_id(self):
        """Gets the pipeline_id of this CreatePipelineVersionRequest.  # noqa: E501

        所属的pipeline  # noqa: E501

        :return: The pipeline_id of this CreatePipelineVersionRequest.  # noqa: E501
        :rtype: int
        """
        return self._pipeline_id

    @pipeline_id.setter
    def pipeline_id(self, pipeline_id):
        """Sets the pipeline_id of this CreatePipelineVersionRequest.

        所属的pipeline  # noqa: E501

        :param pipeline_id: The pipeline_id of this CreatePipelineVersionRequest.  # noqa: E501
        :type pipeline_id: int
        """

        self._pipeline_id = pipeline_id

    @property
    def commit_id(self):
        """Gets the commit_id of this CreatePipelineVersionRequest.  # noqa: E501


        :return: The commit_id of this CreatePipelineVersionRequest.  # noqa: E501
        :rtype: str
        """
        return self._commit_id

    @commit_id.setter
    def commit_id(self, commit_id):
        """Sets the commit_id of this CreatePipelineVersionRequest.


        :param commit_id: The commit_id of this CreatePipelineVersionRequest.  # noqa: E501
        :type commit_id: str
        """

        self._commit_id = commit_id

    @property
    def dag(self):
        """Gets the dag of this CreatePipelineVersionRequest.  # noqa: E501

        spec中解析出的DAG图,json 格式的字符串  # noqa: E501

        :return: The dag of this CreatePipelineVersionRequest.  # noqa: E501
        :rtype: str
        """
        return self._dag

    @dag.setter
    def dag(self, dag):
        """Sets the dag of this CreatePipelineVersionRequest.

        spec中解析出的DAG图,json 格式的字符串  # noqa: E501

        :param dag: The dag of this CreatePipelineVersionRequest.  # noqa: E501
        :type dag: str
        """

        self._dag = dag

    @property
    def name(self):
        """Gets the name of this CreatePipelineVersionRequest.  # noqa: E501


        :return: The name of this CreatePipelineVersionRequest.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreatePipelineVersionRequest.


        :param name: The name of this CreatePipelineVersionRequest.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def package_uri(self):
        """Gets the package_uri of this CreatePipelineVersionRequest.  # noqa: E501


        :return: The package_uri of this CreatePipelineVersionRequest.  # noqa: E501
        :rtype: str
        """
        return self._package_uri

    @package_uri.setter
    def package_uri(self, package_uri):
        """Sets the package_uri of this CreatePipelineVersionRequest.


        :param package_uri: The package_uri of this CreatePipelineVersionRequest.  # noqa: E501
        :type package_uri: str
        """

        self._package_uri = package_uri

    @property
    def parameters(self):
        """Gets the parameters of this CreatePipelineVersionRequest.  # noqa: E501

        从spec中解析的parameters和默认值,json 格式的字符串, 值为默认值  # noqa: E501

        :return: The parameters of this CreatePipelineVersionRequest.  # noqa: E501
        :rtype: str
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this CreatePipelineVersionRequest.

        从spec中解析的parameters和默认值,json 格式的字符串, 值为默认值  # noqa: E501

        :param parameters: The parameters of this CreatePipelineVersionRequest.  # noqa: E501
        :type parameters: str
        """

        self._parameters = parameters

    @property
    def settings(self):
        """Gets the settings of this CreatePipelineVersionRequest.  # noqa: E501

        从spec中解析的settings和默认值,json 格式的字符串, 值为默认值  # noqa: E501

        :return: The settings of this CreatePipelineVersionRequest.  # noqa: E501
        :rtype: str
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this CreatePipelineVersionRequest.

        从spec中解析的settings和默认值,json 格式的字符串, 值为默认值  # noqa: E501

        :param settings: The settings of this CreatePipelineVersionRequest.  # noqa: E501
        :type settings: str
        """

        self._settings = settings

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreatePipelineVersionRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, CreatePipelineVersionRequest):
            return True

        return self.to_dict() != other.to_dict()
