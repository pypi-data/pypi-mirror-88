# coding: utf-8

"""
    Foxtail Trainer

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import foxtail_trainer_api
from foxtail_trainer_api.models.ml_model import MLModel  # noqa: E501
from foxtail_trainer_api.rest import ApiException

class TestMLModel(unittest.TestCase):
    """MLModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test MLModel
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = foxtail_trainer_api.models.ml_model.MLModel()  # noqa: E501
        if include_optional :
            return MLModel(
                id = '0', 
                name = '0', 
                training_config = foxtail_trainer_api.models.training_config.TrainingConfig(
                    id = '0', 
                    training_set_url = '0', 
                    test_set_url = '0', 
                    features = [
                        '0'
                        ], 
                    targets = [
                        '0'
                        ], 
                    model_type = 'Xgboost', 
                    problem_type = 'Regression', 
                    validation_split = 1.337, ), 
                training_result = foxtail_trainer_api.models.training_result.TrainingResult(
                    id = '0', 
                    trainig_time_seconds = 1.337, 
                    training_metrics = [
                        foxtail_trainer_api.models.metric.Metric(
                            id = '0', 
                            metric_type = 'MAE', 
                            value = 1.337, )
                        ], 
                    validation_metrics = [
                        foxtail_trainer_api.models.metric.Metric(
                            id = '0', 
                            value = 1.337, )
                        ], 
                    test_metrics = [
                        foxtail_trainer_api.models.metric.Metric(
                            id = '0', 
                            value = 1.337, )
                        ], 
                    training_history = foxtail_trainer_api.models.training_history.TrainingHistory(
                        id = '0', 
                        metric_name = '0', 
                        train_metrics = [
                            1.337
                            ], 
                        iterations_count = 1.337, ), 
                    model_as_string = '0', ), 
                status = 'Created', 
                url = '0'
            )
        else :
            return MLModel(
        )

    def testMLModel(self):
        """Test MLModel"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
