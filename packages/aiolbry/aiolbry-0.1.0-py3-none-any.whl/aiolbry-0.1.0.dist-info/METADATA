Metadata-Version: 2.1
Name: aiolbry
Version: 0.1.0
Summary: An asynchronous binded Python3.7+ API for the LBRYD and LBRYCRD network
Home-page: https://gitlab.com/jamieoglindsey0/aiolbry
Author: Jamie Lindsey
Author-email: jamieoglindsey0@gmail.com
License: MIT License
Platform: UNKNOWN
Requires: black
Requires: aiohttp
Requires: aiofiles
Requires-Python: >=3
Description-Content-Type: text/markdown

# aioLBRY, a Python API Wrapper for lbry & lbrycrd

[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)

aioLBRY is a wrapper for the [lbry daemon](https://github.com/lbryio/lbry) and
[lbrycrd daemon](https://github.com/lbryio/lbrycrd) API for Python 3.7+

(Python 2 will never be supported)

## Installation

### With pip

Simply run the following

```bash
$ pip install aiolbry
```

And you're done!

### Manually Cloning the Repository

You can either clone this repository or get a tarball from PyPI's
website for whatever version you want. Simply download it and

```bash
# Simply clone the repository somewhere
$ git clone https://gitlab.com/jamieoglindsey0/aiolbry

# Or obtain a release from PyPI's site.
$ wget <extremely long link generated by PyPI>

$ tar -xzf aiolbry-x.x.x.tar.gz aiolbry/

# Change directories into the newly created repository
$ cd aiolbry/

# Now you simply run the setup.py file:
$ python3 setup.py build_py install

```

## Usage

### Using the API

0. Make sure that `lbry-daemon` is up and running, as you will not be able to
   do anything without it.

1. First, import `LbrydApi` or `LbrycrdApi` from `aiolbry` into your project.

### API for LBRYD

#### Using the Generated Code

The API generates all the functions from the `lbryd` documentation, and translates
it into tangible, documented code.

```python
[1] import asyncio
[2] from aiolbry import LbrydApi

# Initialize the API
[3] lbry = LbrydApi()

[4] loop = asyncio.get_event_loop()

# Just call the method as documented in the LBRYD API
[5] loop.run_until_complete(lbry.claim_list(name="@lbry"))
```

#### Calling the API Manually

Since all the code does is make requests to the lbry daemon, you can also
use it as you would with cURL on the commandline. In fact, this is
actually what the bodies of generated code do.

```python
# You can also use the traditional method of making requests
# if you prefer the cURL commandline syntax, works the same.
response = lbry.call("claim_list", {"name": "bellflower"})

```

### API For LbryCRD

```python
from aiolbry import LbrycrdApi

# Provide the username and password
lbrycrd = LbrycrdApi("username", "password")

# Just specify the method and the parameters
response = lbrycrd.call("wallet_unlock", {"wallet_username", "wallet_password"})

```


