#include <pybind11/pybind11.h>
#include <pybind11/operators.h>

#include <string>

#include "KIM_FieldName.hpp"

namespace py = pybind11;
using namespace KIM;


PYBIND11_MODULE(field_name, module) {
  module.doc() = "Python binding to KIM_FieldName.hpp";

  // classes

  py::class_<FieldName> cl(module, "FieldName");
  
  cl.def(py::init<>())
    .def(py::init<int const>())
    .def(py::init<std::string const>())
    .def("known", &FieldName::Known)
    .def(py::self == py::self)
    .def(py::self != py::self)
    .def("__repr__", &FieldName::ToString);


  // functions

  module.def("get_field_name",
    [](int const index) {
      FieldName fieldName;
      int error = FIELD_NAME::GetFieldName(index, &fieldName);

      py::tuple re(2);
      re[0] = fieldName;
      re[1] = error;
      return re;
    },
    py::arg("index"),
    "Return(FieldName, error)"
  );

  module.def("get_number_of_field_names",
    []() {
      int numberOfFieldNames;
      FIELD_NAME::GetNumberOfFieldNames(&numberOfFieldNames);
      return numberOfFieldNames;
    },
    "Return numberOfFieldNames"
  );


  // attributes

rpls_attributes

}

