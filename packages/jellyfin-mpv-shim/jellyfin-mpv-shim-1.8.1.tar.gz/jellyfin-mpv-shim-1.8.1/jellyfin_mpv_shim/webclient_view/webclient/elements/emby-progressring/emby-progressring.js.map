{"version":3,"sources":["elements/emby-progressring/emby-progressring.js"],"names":["define","require","EmbyProgressRing","Object","create","HTMLDivElement","prototype","createdCallback","this","classList","add","instance","template","innerHTML","setProgress","parseFloat","getAttribute","progress","angle","Math","floor","querySelector","style","transform","attachedCallback","detachedCallback","observer","disconnect","document","registerElement","extends"],"mappings":"AAAA,aAAAA,OAAO,CAAC,UAAW,0BAA2B,kBAAkB,SAAUC,SAGtE,IAAIC,iBAAmBC,OAAOC,OAAOC,eAAeC,WAgGpD,OA9FAJ,iBAAiBK,gBAAkB,WAE/BC,KAAKC,UAAUC,IAAI,gBACnB,IAAIC,SAAWH,KAEfP,QAAQ,CAAC,2CAA2C,SAAUW,UAC1DD,SAASE,UAAYD,SAoBrBD,SAASG,YAAYC,WAAWJ,SAASK,aAAa,kBAAoB,UAIlFd,iBAAiBY,YAAc,SAAUG,UAIrC,IAAIC,OAFJD,SAAWE,KAAKC,MAAMH,WAIP,IACXC,MAAeD,SAAW,IAAO,IAAxB,GAETT,KAAKa,cAAc,mBAAmBC,MAAMC,UAAY,UAAYL,MAAQ,OAE5EV,KAAKa,cAAc,oBAAoBC,MAAMC,UAAY,iBACzDf,KAAKa,cAAc,oBAAoBC,MAAMC,UAAY,iBACzDf,KAAKa,cAAc,qBAAqBC,MAAMC,UAAY,kBACnDN,UAAY,IAAMA,SAAW,IAEpCC,OAAgBD,SAAW,IAAM,IAAO,IAA/B,GAETT,KAAKa,cAAc,mBAAmBC,MAAMC,UAAY,OACxDf,KAAKa,cAAc,oBAAoBC,MAAMC,UAAY,UAAYL,MAAQ,OAE7EV,KAAKa,cAAc,oBAAoBC,MAAMC,UAAY,iBACzDf,KAAKa,cAAc,qBAAqBC,MAAMC,UAAY,kBACnDN,UAAY,IAAMA,SAAW,IACpCC,OAAgBD,SAAW,IAAM,IAAO,IAA/B,GAETT,KAAKa,cAAc,mBAAmBC,MAAMC,UAAY,OACxDf,KAAKa,cAAc,oBAAoBC,MAAMC,UAAY,OACzDf,KAAKa,cAAc,oBAAoBC,MAAMC,UAAY,UAAYL,MAAQ,OAE7EV,KAAKa,cAAc,qBAAqBC,MAAMC,UAAY,kBACnDN,UAAY,IAAMA,UAAY,MACrCC,OAAgBD,SAAW,IAAM,IAAO,IAA/B,GAETT,KAAKa,cAAc,mBAAmBC,MAAMC,UAAY,OACxDf,KAAKa,cAAc,oBAAoBC,MAAMC,UAAY,OACzDf,KAAKa,cAAc,oBAAoBC,MAAMC,UAAY,OACzDf,KAAKa,cAAc,qBAAqBC,MAAMC,UAAY,UAAYL,MAAQ,QAGlFV,KAAKa,cAAc,sBAAsBR,UAAYI,SAAW,KAGpEf,iBAAiBsB,iBAAmB,aAIpCtB,iBAAiBuB,iBAAmB,WAEhC,IAAIC,SAAWlB,KAAKkB,SAEhBA,WAEAA,SAASC,aAETnB,KAAKkB,SAAW,OAIxBE,SAASC,gBAAgB,oBAAqB,CAC1CvB,UAAWJ,iBACX4B,QAAS,QAGN5B","file":"emby-progressring.js","sourcesContent":["define(['require', 'css!./emby-progressring', 'webcomponents'], function (require) {\n    'use strict';\n\n    var EmbyProgressRing = Object.create(HTMLDivElement.prototype);\n\n    EmbyProgressRing.createdCallback = function () {\n\n        this.classList.add('progressring');\n        var instance = this;\n\n        require(['text!./emby-progressring.template.html'], function (template) {\n            instance.innerHTML = template;\n\n            //if (window.MutationObserver) {\n            //    // create an observer instance\n            //    var observer = new MutationObserver(function (mutations) {\n            //        mutations.forEach(function (mutation) {\n\n            //            instance.setProgress(parseFloat(instance.getAttribute('data-progress') || '0'));\n            //        });\n            //    });\n\n            //    // configuration of the observer:\n            //    var config = { attributes: true, childList: false, characterData: false };\n\n            //    // pass in the target node, as well as the observer options\n            //    observer.observe(instance, config);\n\n            //    instance.observer = observer;\n            //}\n\n            instance.setProgress(parseFloat(instance.getAttribute('data-progress') || '0'));\n        });\n    };\n\n    EmbyProgressRing.setProgress = function (progress) {\n\n        progress = Math.floor(progress);\n\n        var angle;\n\n        if (progress < 25) {\n            angle = -90 + (progress / 100) * 360;\n\n            this.querySelector('.animate-0-25-b').style.transform = 'rotate(' + angle + 'deg)';\n\n            this.querySelector('.animate-25-50-b').style.transform = 'rotate(-90deg)';\n            this.querySelector('.animate-50-75-b').style.transform = 'rotate(-90deg)';\n            this.querySelector('.animate-75-100-b').style.transform = 'rotate(-90deg)';\n        } else if (progress >= 25 && progress < 50) {\n\n            angle = -90 + ((progress - 25) / 100) * 360;\n\n            this.querySelector('.animate-0-25-b').style.transform = 'none';\n            this.querySelector('.animate-25-50-b').style.transform = 'rotate(' + angle + 'deg)';\n\n            this.querySelector('.animate-50-75-b').style.transform = 'rotate(-90deg)';\n            this.querySelector('.animate-75-100-b').style.transform = 'rotate(-90deg)';\n        } else if (progress >= 50 && progress < 75) {\n            angle = -90 + ((progress - 50) / 100) * 360;\n\n            this.querySelector('.animate-0-25-b').style.transform = 'none';\n            this.querySelector('.animate-25-50-b').style.transform = 'none';\n            this.querySelector('.animate-50-75-b').style.transform = 'rotate(' + angle + 'deg)';\n\n            this.querySelector('.animate-75-100-b').style.transform = 'rotate(-90deg)';\n        } else if (progress >= 75 && progress <= 100) {\n            angle = -90 + ((progress - 75) / 100) * 360;\n\n            this.querySelector('.animate-0-25-b').style.transform = 'none';\n            this.querySelector('.animate-25-50-b').style.transform = 'none';\n            this.querySelector('.animate-50-75-b').style.transform = 'none';\n            this.querySelector('.animate-75-100-b').style.transform = 'rotate(' + angle + 'deg)';\n        }\n\n        this.querySelector('.progressring-text').innerHTML = progress + '%';\n    };\n\n    EmbyProgressRing.attachedCallback = function () {\n\n    };\n\n    EmbyProgressRing.detachedCallback = function () {\n\n        var observer = this.observer;\n\n        if (observer) {\n            // later, you can stop observing\n            observer.disconnect();\n\n            this.observer = null;\n        }\n    };\n\n    document.registerElement('emby-progressring', {\n        prototype: EmbyProgressRing,\n        extends: 'div'\n    });\n\n    return EmbyProgressRing;\n});\n"]}