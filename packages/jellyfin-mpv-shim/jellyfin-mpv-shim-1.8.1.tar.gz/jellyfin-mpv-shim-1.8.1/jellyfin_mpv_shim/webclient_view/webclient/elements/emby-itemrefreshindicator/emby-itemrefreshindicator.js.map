{"version":3,"sources":["elements/emby-itemrefreshindicator/emby-itemrefreshindicator.js"],"names":["define","EmbyProgressRing","dom","serverNotifications","events","onRefreshProgress","e","apiClient","info","this","itemId","parentWithAttribute","getAttribute","ItemId","progress","parseFloat","Progress","classList","remove","add","setProgress","EmbyItemRefreshIndicatorPrototype","Object","create","createdCallback","call","addNotificationEvent","instance","name","handler","localHandler","bind","on","attachedCallback","detachedCallback","removeNotificationEvent","off","document","registerElement","prototype","extends"],"mappings":"AAAA,aAAAA,OAAO,CAAC,oBAAqB,MAAO,sBAAuB,SAAU,kBAAkB,SAAUC,iBAAkBC,IAAKC,oBAAqBC,QAmBzI,SAASC,kBAAkBC,EAAGC,UAAWC,MAQrC,GANgBC,KAEDC,SAFCD,KAGFC,OAASR,IAAIS,oBAHXF,KAG0C,WAAWG,aAAa,YAG9EJ,KAAKK,SANOJ,KAMcC,OAAQ,CAElC,IAAII,SAAWC,WAAWP,KAAKQ,UAE3BF,UAAYA,SAAW,IACvBL,KAAKQ,UAAUC,OAAO,QAEtBT,KAAKQ,UAAUE,IAAI,QAGvBV,KAAKW,YAAYN,WAIzB,IAAIO,kCAAoCC,OAAOC,OAAOtB,kBAEtDoB,kCAAkCG,gBAAkB,WAG5CvB,iBAAiBuB,iBACjBvB,iBAAiBuB,gBAAgBC,KAAKhB,MA5C9C,SAASiB,qBAAqBC,SAAUC,KAAMC,SAE1C,IAAIC,aAAeD,QAAQE,KAAKJ,UAChCvB,OAAO4B,GAAG7B,oBAAqByB,KAAME,cACrCH,SAASC,MAAQE,aA2CjBJ,CAAqBjB,KAAM,kBAAmBJ,oBAGlDgB,kCAAkCY,iBAAmB,WAG7ChC,iBAAiBgC,kBACjBhC,iBAAiBgC,iBAAiBR,KAAKhB,OAI/CY,kCAAkCa,iBAAmB,WAG7CjC,iBAAiBiC,kBACjBjC,iBAAiBiC,iBAAiBT,KAAKhB,MAvD/C,SAAS0B,wBAAwBR,SAAUC,MAEvC,IAAIC,QAAUF,SAASC,MACnBC,UACAzB,OAAOgC,IAAIjC,oBAAqByB,KAAMC,SACtCF,SAASC,MAAQ,MAqDrBO,CAAwB1B,KAAM,mBAC9BA,KAAKC,OAAS,MAGlB2B,SAASC,gBAAgB,4BAA6B,CAClDC,UAAWlB,kCACXmB,QAAS","file":"emby-itemrefreshindicator.js","sourcesContent":["define(['emby-progressring', 'dom', 'serverNotifications', 'events', 'webcomponents'], function (EmbyProgressRing, dom, serverNotifications, events) {\n    'use strict';\n\n    function addNotificationEvent(instance, name, handler) {\n\n        var localHandler = handler.bind(instance);\n        events.on(serverNotifications, name, localHandler);\n        instance[name] = localHandler;\n    }\n\n    function removeNotificationEvent(instance, name) {\n\n        var handler = instance[name];\n        if (handler) {\n            events.off(serverNotifications, name, handler);\n            instance[name] = null;\n        }\n    }\n\n    function onRefreshProgress(e, apiClient, info) {\n\n        var indicator = this;\n\n        if (!indicator.itemId) {\n            indicator.itemId = dom.parentWithAttribute(indicator, 'data-id').getAttribute('data-id');\n        }\n\n        if (info.ItemId === indicator.itemId) {\n\n            var progress = parseFloat(info.Progress);\n\n            if (progress && progress < 100) {\n                this.classList.remove('hide');\n            } else {\n                this.classList.add('hide');\n            }\n\n            this.setProgress(progress);\n        }\n    }\n\n    var EmbyItemRefreshIndicatorPrototype = Object.create(EmbyProgressRing);\n\n    EmbyItemRefreshIndicatorPrototype.createdCallback = function () {\n\n        // base method\n        if (EmbyProgressRing.createdCallback) {\n            EmbyProgressRing.createdCallback.call(this);\n        }\n\n        addNotificationEvent(this, 'RefreshProgress', onRefreshProgress);\n    };\n\n    EmbyItemRefreshIndicatorPrototype.attachedCallback = function () {\n\n        // base method\n        if (EmbyProgressRing.attachedCallback) {\n            EmbyProgressRing.attachedCallback.call(this);\n        }\n    };\n\n    EmbyItemRefreshIndicatorPrototype.detachedCallback = function () {\n\n        // base method\n        if (EmbyProgressRing.detachedCallback) {\n            EmbyProgressRing.detachedCallback.call(this);\n        }\n\n        removeNotificationEvent(this, 'RefreshProgress');\n        this.itemId = null;\n    };\n\n    document.registerElement('emby-itemrefreshindicator', {\n        prototype: EmbyItemRefreshIndicatorPrototype,\n        extends: 'div'\n    });\n});\n"]}