{"version":3,"sources":["controllers/livetvsettings.js"],"names":["define","$","loading","globalize","onSubmit","show","form","this","ApiClient","getNamedConfiguration","then","config","GuideDays","val","recordingPath","querySelector","value","movieRecordingPath","seriesRecordingPath","recordingPathChanged","RecordingPath","MovieRecordingPath","SeriesRecordingPath","RecordingEncodingFormat","PrePaddingSeconds","PostPaddingSeconds","RecordingPostProcessor","RecordingPostProcessorArguments","updateNamedConfiguration","Dashboard","processServerConfigurationUpdateResult","showSaveMessage","msg","translate","require","alert","document","on","page","off","directoryBrowser","picker","callback","path","close","validateWriteable","includeFiles","loadPage","hide"],"mappings":"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","file":"livetvsettings.js","sourcesContent":["define(['jQuery', 'loading', 'globalize', 'emby-button'], function ($, loading, globalize) {\n    'use strict';\n\n    function loadPage(page, config) {\n        $('.liveTvSettingsForm', page).show();\n        $('.noLiveTvServices', page).hide();\n        $('#selectGuideDays', page).val(config.GuideDays || '');\n        $('#txtPrePaddingMinutes', page).val(config.PrePaddingSeconds / 60);\n        $('#txtPostPaddingMinutes', page).val(config.PostPaddingSeconds / 60);\n        page.querySelector('#txtRecordingPath').value = config.RecordingPath || '';\n        page.querySelector('#txtMovieRecordingPath').value = config.MovieRecordingPath || '';\n        page.querySelector('#txtSeriesRecordingPath').value = config.SeriesRecordingPath || '';\n        page.querySelector('#txtPostProcessor').value = config.RecordingPostProcessor || '';\n        page.querySelector('#txtPostProcessorArguments').value = config.RecordingPostProcessorArguments || '';\n        loading.hide();\n    }\n\n    function onSubmit() {\n        loading.show();\n        var form = this;\n        ApiClient.getNamedConfiguration('livetv').then(function (config) {\n            config.GuideDays = $('#selectGuideDays', form).val() || null;\n            var recordingPath = form.querySelector('#txtRecordingPath').value || null;\n            var movieRecordingPath = form.querySelector('#txtMovieRecordingPath').value || null;\n            var seriesRecordingPath = form.querySelector('#txtSeriesRecordingPath').value || null;\n            var recordingPathChanged = recordingPath != config.RecordingPath || movieRecordingPath != config.MovieRecordingPath || seriesRecordingPath != config.SeriesRecordingPath;\n            config.RecordingPath = recordingPath;\n            config.MovieRecordingPath = movieRecordingPath;\n            config.SeriesRecordingPath = seriesRecordingPath;\n            config.RecordingEncodingFormat = 'mkv';\n            config.PrePaddingSeconds = 60 * $('#txtPrePaddingMinutes', form).val();\n            config.PostPaddingSeconds = 60 * $('#txtPostPaddingMinutes', form).val();\n            config.RecordingPostProcessor = $('#txtPostProcessor', form).val();\n            config.RecordingPostProcessorArguments = $('#txtPostProcessorArguments', form).val();\n            ApiClient.updateNamedConfiguration('livetv', config).then(function () {\n                Dashboard.processServerConfigurationUpdateResult();\n                showSaveMessage(recordingPathChanged);\n            });\n        });\n        return false;\n    }\n\n    function showSaveMessage(recordingPathChanged) {\n        var msg = '';\n\n        if (recordingPathChanged) {\n            msg += globalize.translate('RecordingPathChangeMessage');\n        }\n\n        if (msg) {\n            require(['alert'], function (alert) {\n                alert(msg);\n            });\n        }\n    }\n\n    $(document).on('pageinit', '#liveTvSettingsPage', function () {\n        var page = this;\n        $('.liveTvSettingsForm').off('submit', onSubmit).on('submit', onSubmit);\n        $('#btnSelectRecordingPath', page).on('click.selectDirectory', function () {\n            require(['directorybrowser'], function (directoryBrowser) {\n                var picker = new directoryBrowser();\n                picker.show({\n                    callback: function (path) {\n                        if (path) {\n                            $('#txtRecordingPath', page).val(path);\n                        }\n\n                        picker.close();\n                    },\n                    validateWriteable: true\n                });\n            });\n        });\n        $('#btnSelectMovieRecordingPath', page).on('click.selectDirectory', function () {\n            require(['directorybrowser'], function (directoryBrowser) {\n                var picker = new directoryBrowser();\n                picker.show({\n                    callback: function (path) {\n                        if (path) {\n                            $('#txtMovieRecordingPath', page).val(path);\n                        }\n\n                        picker.close();\n                    },\n                    validateWriteable: true\n                });\n            });\n        });\n        $('#btnSelectSeriesRecordingPath', page).on('click.selectDirectory', function () {\n            require(['directorybrowser'], function (directoryBrowser) {\n                var picker = new directoryBrowser();\n                picker.show({\n                    callback: function (path) {\n                        if (path) {\n                            $('#txtSeriesRecordingPath', page).val(path);\n                        }\n\n                        picker.close();\n                    },\n                    validateWriteable: true\n                });\n            });\n        });\n        $('#btnSelectPostProcessorPath', page).on('click.selectDirectory', function () {\n            require(['directorybrowser'], function (directoryBrowser) {\n                var picker = new directoryBrowser();\n                picker.show({\n                    includeFiles: true,\n                    callback: function (path) {\n                        if (path) {\n                            $('#txtPostProcessor', page).val(path);\n                        }\n\n                        picker.close();\n                    }\n                });\n            });\n        });\n    }).on('pageshow', '#liveTvSettingsPage', function () {\n        loading.show();\n        var page = this;\n        ApiClient.getNamedConfiguration('livetv').then(function (config) {\n            loadPage(page, config);\n        });\n    });\n});\n"]}