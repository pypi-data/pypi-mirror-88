{"version":3,"sources":["controllers/livetv/livetvchannels.js"],"names":["define","cardBuilder","imageLoader","libraryBrowser","loading","events","userSettings","view","params","tabContent","getQuery","getPageData","pageData","query","StartIndex","Fields","libraryPageSize","renderChannels","context","result","onNextPageClick","isLoading","Limit","reloadItems","onPreviousPageClick","Math","max","querySelector","innerHTML","getQueryPagingHtml","startIndex","limit","totalRecordCount","TotalRecordCount","showLimit","updatePageSizeSetting","filterButton","i","length","elems","html","getChannelsHtml","channels","getCardsHtml","items","shape","showTitle","lazy","cardLayout","showDetailsMenu","showCurrentProgram","showCurrentProgramTime","Items","elem","lazyChildren","querySelectorAll","addEventListener","save","show","apiClient","ApiClient","UserId","getCurrentUserId","getLiveTvChannels","then","hide","require","autoFocuser","autoFocus","showFilterMenu","_ref","filterDialog","filterDialogFactory","default","mode","serverId","on","this","renderTab"],"mappings":"AAAA,aAAAA,OAAO,CAAC,cAAe,cAAe,iBAAkB,UAAW,SAAU,eAAgB,wBAAwB,SAAUC,YAAaC,YAAaC,eAAgBC,QAASC,OAAQC,cAGtL,OAAO,SAAUC,KAAMC,OAAQC,YAkB3B,SAASC,WACL,OAlBJ,SAASC,cAcL,OAbKC,WACDA,SAAW,CACPC,MAAO,CACHC,WAAY,EACZC,OAAQ,6BAKhBT,aAAaU,kBAAoB,IACjCJ,SAASC,MAAT,MAA0BP,aAAaU,mBAGpCJ,SAIAD,GAAcE,MAgBzB,SAASI,eAAeC,QAASC,QAC7B,SAASC,kBACDC,YAIAf,aAAaU,kBAAoB,IACjCH,MAAMC,YAAcD,MAAMS,OAE9BC,YAAYL,UAGhB,SAASM,sBACDH,YAIAf,aAAaU,kBAAoB,IACjCH,MAAMC,WAAaW,KAAKC,IAAI,EAAGb,MAAMC,WAAaD,MAAMS,QAE5DC,YAAYL,UAGhB,IAAIL,MAAQH,WACZQ,QAAQS,cAAc,WAAWC,UAAYzB,eAAe0B,mBAAmB,CAC3EC,WAAYjB,MAAMC,WAClBiB,MAAOlB,MAAMS,MACbU,iBAAkBb,OAAOc,iBACzBC,WAAW,EACXC,uBAAuB,EACvBC,cAAc,IAElB,IAIIC,EACAC,OACAC,MANAC,KA7CR,SAASC,gBAAgBC,UACrB,OAAOzC,YAAY0C,aAAa,CAC5BC,MAAOF,SACPG,MAAO,SACPC,WAAW,EACXC,MAAM,EACNC,YAAY,EACZC,iBAAiB,EACjBC,oBAAoB,EACpBC,wBAAwB,IAoCjBV,CAAgBtB,OAAOiC,OAC9BC,KAAOnC,QAAQS,cAAc,UAOjC,IANA0B,KAAKzB,UAAYY,KACjBtC,YAAYoD,aAAaD,MAK8BhB,EAAI,EAAGC,QAAzDC,MAAQrB,QAAQqC,iBAAiB,iBAAuCjB,OAAQD,EAAIC,OAAQD,IAC7FE,MAAMF,GAAGmB,iBAAiB,QAASpC,iBAGvC,IAA2DiB,EAAI,EAAGC,QAA7DC,MAAQrB,QAAQqC,iBAAiB,qBAA2CjB,OAAQD,EAAIC,OAAQD,IACjGE,MAAMF,GAAGmB,iBAAiB,QAAShC,qBAkB3C,SAASD,YAAYL,QAASuC,MAC1BrD,QAAQsD,OACRrC,WAAY,EACZ,IAAIR,MAAQH,WACRiD,UAAYC,UAChB/C,MAAMgD,OAASF,UAAUG,mBACzBH,UAAUI,kBAAkBlD,OAAOmD,MAAK,SAAU7C,QAC9CF,eAAeC,QAASC,QACxBf,QAAQ6D,OACR5C,WAAY,EAEZ6C,QAAQ,CAAC,gBAAgB,SAAUC,aAC/BA,YAAYC,UAAU7D,YAKlC,IAAIK,SAEAS,WAAY,EAChBZ,WAAWkB,cAAc,cAAc6B,iBAAiB,SAAS,YAlCjE,SAASa,eAAenD,SACpBgD,QAAQ,CAAC,yCAAyC,SAAAI,MAA0C,IACpFC,aAAe,IAAIC,EADiEF,KAA/BG,SACd,CACvC5D,MAAOH,WACPgE,KAAM,iBACNC,SAAUf,UAAUe,aAExBtE,OAAOuE,GAAGL,aAAc,gBAAgB,WACpChD,YAAYL,YAEhBqD,aAAab,UAyBjBW,CAAe5D,eAHRoE,KAMNC,UAAY,WACbvD,YAAYd","file":"livetvchannels.js","sourcesContent":["define(['cardBuilder', 'imageLoader', 'libraryBrowser', 'loading', 'events', 'userSettings', 'emby-itemscontainer'], function (cardBuilder, imageLoader, libraryBrowser, loading, events, userSettings) {\n    'use strict';\n\n    return function (view, params, tabContent) {\n        function getPageData() {\n            if (!pageData) {\n                pageData = {\n                    query: {\n                        StartIndex: 0,\n                        Fields: 'PrimaryImageAspectRatio'\n                    }\n                };\n            }\n\n            if (userSettings.libraryPageSize() > 0) {\n                pageData.query['Limit'] = userSettings.libraryPageSize();\n            }\n\n            return pageData;\n        }\n\n        function getQuery() {\n            return getPageData().query;\n        }\n\n        function getChannelsHtml(channels) {\n            return cardBuilder.getCardsHtml({\n                items: channels,\n                shape: 'square',\n                showTitle: true,\n                lazy: true,\n                cardLayout: true,\n                showDetailsMenu: true,\n                showCurrentProgram: true,\n                showCurrentProgramTime: true\n            });\n        }\n\n        function renderChannels(context, result) {\n            function onNextPageClick() {\n                if (isLoading) {\n                    return;\n                }\n\n                if (userSettings.libraryPageSize() > 0) {\n                    query.StartIndex += query.Limit;\n                }\n                reloadItems(context);\n            }\n\n            function onPreviousPageClick() {\n                if (isLoading) {\n                    return;\n                }\n\n                if (userSettings.libraryPageSize() > 0) {\n                    query.StartIndex = Math.max(0, query.StartIndex - query.Limit);\n                }\n                reloadItems(context);\n            }\n\n            var query = getQuery();\n            context.querySelector('.paging').innerHTML = libraryBrowser.getQueryPagingHtml({\n                startIndex: query.StartIndex,\n                limit: query.Limit,\n                totalRecordCount: result.TotalRecordCount,\n                showLimit: false,\n                updatePageSizeSetting: false,\n                filterButton: false\n            });\n            var html = getChannelsHtml(result.Items);\n            var elem = context.querySelector('#items');\n            elem.innerHTML = html;\n            imageLoader.lazyChildren(elem);\n            var i;\n            var length;\n            var elems;\n\n            for (elems = context.querySelectorAll('.btnNextPage'), i = 0, length = elems.length; i < length; i++) {\n                elems[i].addEventListener('click', onNextPageClick);\n            }\n\n            for (elems = context.querySelectorAll('.btnPreviousPage'), i = 0, length = elems.length; i < length; i++) {\n                elems[i].addEventListener('click', onPreviousPageClick);\n            }\n        }\n\n        function showFilterMenu(context) {\n            require(['components/filterdialog/filterdialog'], function ({default: filterDialogFactory}) {\n                var filterDialog = new filterDialogFactory({\n                    query: getQuery(),\n                    mode: 'livetvchannels',\n                    serverId: ApiClient.serverId()\n                });\n                events.on(filterDialog, 'filterchange', function () {\n                    reloadItems(context);\n                });\n                filterDialog.show();\n            });\n        }\n\n        function reloadItems(context, save) {\n            loading.show();\n            isLoading = true;\n            var query = getQuery();\n            var apiClient = ApiClient;\n            query.UserId = apiClient.getCurrentUserId();\n            apiClient.getLiveTvChannels(query).then(function (result) {\n                renderChannels(context, result);\n                loading.hide();\n                isLoading = false;\n\n                require(['autoFocuser'], function (autoFocuser) {\n                    autoFocuser.autoFocus(view);\n                });\n            });\n        }\n\n        var pageData;\n        var self = this;\n        var isLoading = false;\n        tabContent.querySelector('.btnFilter').addEventListener('click', function () {\n            showFilterMenu(tabContent);\n        });\n\n        self.renderTab = function () {\n            reloadItems(tabContent);\n        };\n    };\n});\n"]}