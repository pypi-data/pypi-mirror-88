{"version":3,"sources":["controllers/wizard/settings.js"],"names":["define","loading","save","page","show","apiClient","ApiClient","getJSON","getUrl","then","config","PreferredMetadataLanguage","querySelector","value","MetadataCountryCode","ajax","type","data","url","hide","navigateToNextPage","Dashboard","navigate","reload","promise1","promise2","getCultures","promise3","getCountries","Promise","all","responses","reloadData","cultures","countries","populateLanguages","select","languages","html","i","length","culture","TwoLetterISOLanguageName","DisplayName","innerHTML","populateCountries","allCountries","TwoLetterISORegionName","onSubmit","e","this","preventDefault","view","params","addEventListener","document","classList","add","remove"],"mappings":"AAAA,aAAAA,OAAO,CAAC,UAAW,gBAAiB,cAAe,gBAAgB,SAAUC,SAGzE,SAASC,KAAKC,MACVF,QAAQG,OACR,IAAIC,UAAYC,UAChBD,UAAUE,QAAQF,UAAUG,OAAO,0BAA0BC,MAAK,SAAUC,QACxEA,OAAOC,0BAA4BR,KAAKS,cAAc,mBAAmBC,MACzEH,OAAOI,oBAAsBX,KAAKS,cAAc,kBAAkBC,MAClER,UAAUU,KAAK,CACXC,KAAM,OACNC,KAAMP,OACNQ,IAAKb,UAAUG,OAAO,2BACvBC,MAAK,WACJR,QAAQkB,OAiDpB,SAASC,qBACLC,UAAUC,SAAS,2BAjDXF,SAqCZ,SAASG,OAAOpB,MACZF,QAAQG,OACR,IAAIC,UAAYC,UACZkB,SAAWnB,UAAUE,QAAQF,UAAUG,OAAO,0BAC9CiB,SAAWpB,UAAUqB,cACrBC,SAAWtB,UAAUuB,eACzBC,QAAQC,IAAI,CAACN,SAAUC,SAAUE,WAAWlB,MAAK,SAAUsB,YAd/D,SAASC,WAAW7B,KAAMO,OAAQuB,SAAUC,YAxB5C,SAASC,kBAAkBC,OAAQC,WAC/B,IAAIC,KAAO,GACXA,MAAQ,6BAER,IAAK,IAAIC,EAAI,EAAGC,OAASH,UAAUG,OAAQD,EAAIC,OAAQD,IAAK,CACxD,IAAIE,QAAUJ,UAAUE,GACxBD,MAAQ,kBAAoBG,QAAQC,yBAA2B,KAAOD,QAAQE,YAAc,YAGhGP,OAAOQ,UAAYN,KAgBnBH,CAAkBhC,KAAKS,cAAc,mBAAoBqB,UAb7D,SAASY,kBAAkBT,OAAQU,cAC/B,IAAIR,KAAO,GACXA,MAAQ,6BAER,IAAK,IAAIC,EAAI,EAAGC,OAASM,aAAaN,OAAQD,EAAIC,OAAQD,IAAK,CAC3D,IAAIE,QAAUK,aAAaP,GAC3BD,MAAQ,kBAAoBG,QAAQM,uBAAyB,KAAON,QAAQE,YAAc,YAG9FP,OAAOQ,UAAYN,KAKnBO,CAAkB1C,KAAKS,cAAc,kBAAmBsB,WACxD/B,KAAKS,cAAc,mBAAmBC,MAAQH,OAAOC,0BACrDR,KAAKS,cAAc,kBAAkBC,MAAQH,OAAOI,oBACpDb,QAAQkB,OAUJa,CAAW7B,KAAM4B,UAAU,GAAIA,UAAU,GAAIA,UAAU,OAQ/D,SAASiB,SAASC,GAGd,OAFA/C,KAAKgD,MACLD,EAAEE,kBACK,EAGX,OAAO,SAAUC,KAAMC,QACnBD,KAAKxC,cAAc,uBAAuB0C,iBAAiB,SAAUN,UACrEI,KAAKE,iBAAiB,YAAY,WAC9BC,SAAS3C,cAAc,eAAe4C,UAAUC,IAAI,sBACpDlC,OAAO2B,SAEXE,KAAKE,iBAAiB,YAAY,WAC9BC,SAAS3C,cAAc,eAAe4C,UAAUE,OAAO","file":"settings.js","sourcesContent":["define(['loading', 'emby-checkbox', 'emby-button', 'emby-select'], function (loading) {\n    'use strict';\n\n    function save(page) {\n        loading.show();\n        var apiClient = ApiClient;\n        apiClient.getJSON(apiClient.getUrl('Startup/Configuration')).then(function (config) {\n            config.PreferredMetadataLanguage = page.querySelector('#selectLanguage').value;\n            config.MetadataCountryCode = page.querySelector('#selectCountry').value;\n            apiClient.ajax({\n                type: 'POST',\n                data: config,\n                url: apiClient.getUrl('Startup/Configuration')\n            }).then(function () {\n                loading.hide();\n                navigateToNextPage();\n            });\n        });\n    }\n\n    function populateLanguages(select, languages) {\n        var html = '';\n        html += \"<option value=''></option>\";\n\n        for (var i = 0, length = languages.length; i < length; i++) {\n            var culture = languages[i];\n            html += \"<option value='\" + culture.TwoLetterISOLanguageName + \"'>\" + culture.DisplayName + '</option>';\n        }\n\n        select.innerHTML = html;\n    }\n\n    function populateCountries(select, allCountries) {\n        var html = '';\n        html += \"<option value=''></option>\";\n\n        for (var i = 0, length = allCountries.length; i < length; i++) {\n            var culture = allCountries[i];\n            html += \"<option value='\" + culture.TwoLetterISORegionName + \"'>\" + culture.DisplayName + '</option>';\n        }\n\n        select.innerHTML = html;\n    }\n\n    function reloadData(page, config, cultures, countries) {\n        populateLanguages(page.querySelector('#selectLanguage'), cultures);\n        populateCountries(page.querySelector('#selectCountry'), countries);\n        page.querySelector('#selectLanguage').value = config.PreferredMetadataLanguage;\n        page.querySelector('#selectCountry').value = config.MetadataCountryCode;\n        loading.hide();\n    }\n\n    function reload(page) {\n        loading.show();\n        var apiClient = ApiClient;\n        var promise1 = apiClient.getJSON(apiClient.getUrl('Startup/Configuration'));\n        var promise2 = apiClient.getCultures();\n        var promise3 = apiClient.getCountries();\n        Promise.all([promise1, promise2, promise3]).then(function (responses) {\n            reloadData(page, responses[0], responses[1], responses[2]);\n        });\n    }\n\n    function navigateToNextPage() {\n        Dashboard.navigate('wizardremoteaccess.html');\n    }\n\n    function onSubmit(e) {\n        save(this);\n        e.preventDefault();\n        return false;\n    }\n\n    return function (view, params) {\n        view.querySelector('.wizardSettingsForm').addEventListener('submit', onSubmit);\n        view.addEventListener('viewshow', function () {\n            document.querySelector('.skinHeader').classList.add('noHomeButtonHeader');\n            reload(this);\n        });\n        view.addEventListener('viewhide', function () {\n            document.querySelector('.skinHeader').classList.remove('noHomeButtonHeader');\n        });\n    };\n});\n"]}