{"version":3,"sources":["controllers/music/musicgenres.js"],"names":["define","libraryBrowser","cardBuilder","appHost","imageLoader","loading","view","params","tabContent","getPageData","key","getSavedQueryKey","pageData","data","query","SortBy","SortOrder","Recursive","Fields","StartIndex","getSavedView","ParentId","topParentId","loadSavedQueryValues","getQuery","promise","self","this","getViewStyles","split","getCurrentViewStyle","setCurrentViewStyle","viewStyle","saveViewSetting","fullyReload","preRender","renderTab","enableViewSelection","getPromise","show","ApiClient","getGenres","getCurrentUserId","reloadItems","context","then","result","html","getCardsHtml","items","Items","shape","preferThumb","centerText","overlayMoreButton","showTitle","cardLayout","elem","querySelector","innerHTML","lazyChildren","saveQueryValues","hide","require","autoFocuser","autoFocus"],"mappings":"AAAA,aAAAA,OAAO,CAAC,iBAAkB,cAAe,UAAW,cAAe,YAAY,SAAUC,eAAgBC,YAAaC,QAASC,YAAaC,SAGxI,OAAO,SAAUC,KAAMC,OAAQC,YAC3B,SAASC,cACL,IAAIC,IAAMC,mBACNC,SAAWC,KAAKH,KAiBpB,OAfKE,YACDA,SAAWC,KAAKH,KAAO,CACnBI,MAAO,CACHC,OAAQ,WACRC,UAAW,YACXC,WAAW,EACXC,OAAQ,qCACRC,WAAY,GAEhBb,KAAML,eAAemB,aAAaV,MAAQ,WAErCI,MAAMO,SAAWd,OAAOe,YACjCrB,eAAesB,qBAAqBb,IAAKE,SAASE,QAG/CF,SAGX,SAASY,WACL,OAAOf,cAAcK,MAGzB,SAASH,mBACL,OAAOV,eAAeU,iBAAiB,UAsE3C,IAkBIc,QAlBAC,KAAOC,KACPd,KAAO,GAEXa,KAAKE,cAAgB,WACjB,MAAO,oCAAoCC,MAAM,MAGrDH,KAAKI,oBAAsB,WACvB,OAAOrB,cAAcH,MAGzBoB,KAAKK,oBAAsB,SAAUC,WACjCvB,cAAcH,KAAO0B,UACrB/B,eAAegC,gBAAgBtB,mBAAoBqB,WAlBvD,SAASE,cACLR,KAAKS,YACLT,KAAKU,YAiBLF,IAGJR,KAAKW,qBAAsB,EAG3BX,KAAKS,UAAY,WACbV,QAxFJ,SAASa,aACLjC,QAAQkC,OACR,IAAIzB,MAAQU,WACZ,OAAOgB,UAAUC,UAAUD,UAAUE,mBAAoB5B,OAqF/CwB,IAGdZ,KAAKU,UAAY,YArFjB,SAASO,YAAYC,QAASnB,SAC1B,IAAIX,MAAQU,WACZC,QAAQoB,MAAK,SAAUC,QACnB,IAAIC,KAAO,GACPf,UAAYN,KAAKI,sBAEJ,SAAbE,UACAe,KAAO7C,YAAY8C,aAAa,CAC5BC,MAAOH,OAAOI,MACdC,MAAO,WACPC,aAAa,EACbR,QAAS,QACTS,YAAY,EACZC,mBAAmB,EACnBC,WAAW,IAEK,aAAbvB,UACPe,KAAO7C,YAAY8C,aAAa,CAC5BC,MAAOH,OAAOI,MACdC,MAAO,WACPC,aAAa,EACbR,QAAS,QACTY,YAAY,EACZD,WAAW,IAEK,cAAbvB,UACPe,KAAO7C,YAAY8C,aAAa,CAC5BC,MAAOH,OAAOI,MACdC,MAAO,OACPP,QAAS,QACTY,YAAY,EACZD,WAAW,IAEK,UAAbvB,YACPe,KAAO7C,YAAY8C,aAAa,CAC5BC,MAAOH,OAAOI,MACdC,MAAO,OACPP,QAAS,QACTS,YAAY,EACZC,mBAAmB,EACnBC,WAAW,KAInB,IAAIE,KAAOb,QAAQc,cAAc,UACjCD,KAAKE,UAAYZ,KACjB3C,YAAYwD,aAAaH,MACzBxD,eAAe4D,gBAAgBlD,mBAAoBG,OACnDT,QAAQyD,OAERC,QAAQ,CAAC,gBAAgB,SAAUC,aAC/BA,YAAYC,UAAUrB,eAmC9BD,CAAYnC,WAAYiB","file":"musicgenres.js","sourcesContent":["define(['libraryBrowser', 'cardBuilder', 'apphost', 'imageLoader', 'loading'], function (libraryBrowser, cardBuilder, appHost, imageLoader, loading) {\n    'use strict';\n\n    return function (view, params, tabContent) {\n        function getPageData() {\n            var key = getSavedQueryKey();\n            var pageData = data[key];\n\n            if (!pageData) {\n                pageData = data[key] = {\n                    query: {\n                        SortBy: 'SortName',\n                        SortOrder: 'Ascending',\n                        Recursive: true,\n                        Fields: 'PrimaryImageAspectRatio,ItemCounts',\n                        StartIndex: 0\n                    },\n                    view: libraryBrowser.getSavedView(key) || 'Poster'\n                };\n                pageData.query.ParentId = params.topParentId;\n                libraryBrowser.loadSavedQueryValues(key, pageData.query);\n            }\n\n            return pageData;\n        }\n\n        function getQuery() {\n            return getPageData().query;\n        }\n\n        function getSavedQueryKey() {\n            return libraryBrowser.getSavedQueryKey('genres');\n        }\n\n        function getPromise() {\n            loading.show();\n            var query = getQuery();\n            return ApiClient.getGenres(ApiClient.getCurrentUserId(), query);\n        }\n\n        function reloadItems(context, promise) {\n            var query = getQuery();\n            promise.then(function (result) {\n                var html = '';\n                var viewStyle = self.getCurrentViewStyle();\n\n                if (viewStyle == 'Thumb') {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'backdrop',\n                        preferThumb: true,\n                        context: 'music',\n                        centerText: true,\n                        overlayMoreButton: true,\n                        showTitle: true\n                    });\n                } else if (viewStyle == 'ThumbCard') {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'backdrop',\n                        preferThumb: true,\n                        context: 'music',\n                        cardLayout: true,\n                        showTitle: true\n                    });\n                } else if (viewStyle == 'PosterCard') {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'auto',\n                        context: 'music',\n                        cardLayout: true,\n                        showTitle: true\n                    });\n                } else if (viewStyle == 'Poster') {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'auto',\n                        context: 'music',\n                        centerText: true,\n                        overlayMoreButton: true,\n                        showTitle: true\n                    });\n                }\n\n                var elem = context.querySelector('#items');\n                elem.innerHTML = html;\n                imageLoader.lazyChildren(elem);\n                libraryBrowser.saveQueryValues(getSavedQueryKey(), query);\n                loading.hide();\n\n                require(['autoFocuser'], function (autoFocuser) {\n                    autoFocuser.autoFocus(context);\n                });\n            });\n        }\n\n        function fullyReload() {\n            self.preRender();\n            self.renderTab();\n        }\n\n        var self = this;\n        var data = {};\n\n        self.getViewStyles = function () {\n            return 'Poster,PosterCard,Thumb,ThumbCard'.split(',');\n        };\n\n        self.getCurrentViewStyle = function () {\n            return getPageData().view;\n        };\n\n        self.setCurrentViewStyle = function (viewStyle) {\n            getPageData().view = viewStyle;\n            libraryBrowser.saveViewSetting(getSavedQueryKey(), viewStyle);\n            fullyReload();\n        };\n\n        self.enableViewSelection = true;\n        var promise;\n\n        self.preRender = function () {\n            promise = getPromise();\n        };\n\n        self.renderTab = function () {\n            reloadItems(tabContent, promise);\n        };\n    };\n});\n"]}