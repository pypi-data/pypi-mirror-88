{"version":3,"sources":["controllers/livetvstatus.js"],"names":["define","$","globalize","taskButton","dom","libraryMenu","layoutManager","loading","browser","enableFocusTransform","slow","edge","getDeviceHtml","device","html","cssClass","tv","Id","FriendlyName","getTunerName","providerId","toLowerCase","Type","Url","reload","page","show","ApiClient","getNamedConfiguration","then","config","renderDevices","devices","map","join","querySelector","innerHTML","TunerHosts","renderProviders","providers","length","i","provider","getProviderConfigurationUrl","getProviderName","Path","ListingsId","elem","on","id","this","getAttribute","showProviderOptions","button","items","push","name","translate","require","actionsheet","positionTo","deleteProvider","message","confirm","ajax","type","url","getUrl","mapChannels","channelmapper","serverId","serverInfo","ListingProviders","hide","showDeviceMenu","tunerDeviceId","deleteDevice","parentWithClass","Dashboard","navigate","onDevicesListClick","e","card","target","btnCardOptions","document","addDevice","submitAddDeviceForm","close","data","JSON","stringify","val","contentType","alert","addProvider","menuItems","callback","addEventListener","mode","progressElem","taskKey"],"mappings":"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","file":"livetvstatus.js","sourcesContent":["define(['jQuery', 'globalize', 'scripts/taskbutton', 'dom', 'libraryMenu', 'layoutManager', 'loading', 'browser', 'listViewStyle', 'flexStyles', 'emby-itemscontainer', 'cardStyle', 'material-icons', 'emby-button'], function ($, globalize, taskButton, dom, libraryMenu, layoutManager, loading, browser) {\n    'use strict';\n\n    var enableFocusTransform = !browser.slow && !browser.edge;\n\n    function getDeviceHtml(device) {\n        var padderClass;\n        var html = '';\n        var cssClass = 'card scalableCard';\n        var cardBoxCssClass = 'cardBox visualCardBox';\n        cssClass += ' backdropCard backdropCard-scalable';\n        padderClass = 'cardPadder-backdrop';\n\n        // TODO move card creation code to Card component\n\n        if (layoutManager.tv) {\n            cssClass += ' show-focus';\n\n            if (enableFocusTransform) {\n                cssClass += ' show-animation';\n            }\n        }\n\n        html += '<div type=\"button\" class=\"' + cssClass + '\" data-id=\"' + device.Id + '\">';\n        html += '<div class=\"' + cardBoxCssClass + '\">';\n        html += '<div class=\"cardScalable visualCardBox-cardScalable\">';\n        html += '<div class=\"' + padderClass + '\"></div>';\n        html += '<div class=\"cardContent searchImage\">';\n        html += '<div class=\"cardImageContainer coveredImage\"><span class=\"cardImageIcon material-icons dvr\"></span></div>';\n        html += '</div>';\n        html += '</div>';\n        html += '<div class=\"cardFooter visualCardBox-cardFooter\">';\n        html += '<button is=\"paper-icon-button-light\" class=\"itemAction btnCardOptions autoSize\" data-action=\"menu\"><span class=\"material-icons more_vert\"></span></button>';\n        html += '<div class=\"cardText\">' + (device.FriendlyName || getTunerName(device.Type)) + '</div>';\n        html += '<div class=\"cardText cardText-secondary\">';\n        html += device.Url || '&nbsp;';\n        html += '</div>';\n        html += '</div>';\n        html += '</div>';\n        return html += '</div>';\n    }\n\n    function renderDevices(page, devices) {\n        var html = devices.map(getDeviceHtml).join('');\n        page.querySelector('.devicesList').innerHTML = html;\n    }\n\n    function deleteDevice(page, id) {\n        var message = globalize.translate('MessageConfirmDeleteTunerDevice');\n\n        require(['confirm'], function (confirm) {\n            confirm(message, globalize.translate('HeaderDeleteDevice')).then(function () {\n                loading.show();\n                ApiClient.ajax({\n                    type: 'DELETE',\n                    url: ApiClient.getUrl('LiveTv/TunerHosts', {\n                        Id: id\n                    })\n                }).then(function () {\n                    reload(page);\n                });\n            });\n        });\n    }\n\n    function reload(page) {\n        loading.show();\n        ApiClient.getNamedConfiguration('livetv').then(function (config) {\n            renderDevices(page, config.TunerHosts);\n            renderProviders(page, config.ListingProviders);\n        });\n        loading.hide();\n    }\n\n    function submitAddDeviceForm(page) {\n        page.querySelector('.dlgAddDevice').close();\n        loading.show();\n        ApiClient.ajax({\n            type: 'POST',\n            url: ApiClient.getUrl('LiveTv/TunerHosts'),\n            data: JSON.stringify({\n                Type: $('#selectTunerDeviceType', page).val(),\n                Url: $('#txtDevicePath', page).val()\n            }),\n            contentType: 'application/json'\n        }).then(function () {\n            reload(page);\n        }, function () {\n            Dashboard.alert({\n                message: globalize.translate('ErrorAddingTunerDevice')\n            });\n        });\n    }\n\n    function renderProviders(page, providers) {\n        var html = '';\n\n        if (providers.length) {\n            html += '<div class=\"paperList\">';\n\n            for (var i = 0, length = providers.length; i < length; i++) {\n                var provider = providers[i];\n                html += '<div class=\"listItem\">';\n                html += '<span class=\"listItemIcon material-icons dvr\"></span>';\n                html += '<div class=\"listItemBody two-line\">';\n                html += '<a is=\"emby-linkbutton\" style=\"display:block;padding:0;margin:0;text-align:left;\" class=\"clearLink\" href=\"' + getProviderConfigurationUrl(provider.Type) + '&id=' + provider.Id + '\">';\n                html += '<h3 class=\"listItemBodyText\">';\n                html += getProviderName(provider.Type);\n                html += '</h3>';\n                html += '<div class=\"listItemBodyText secondary\">';\n                html += provider.Path || provider.ListingsId || '';\n                html += '</div>';\n                html += '</a>';\n                html += '</div>';\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"btnOptions\" data-id=\"' + provider.Id + '\"><span class=\"material-icons listItemAside more_vert\"></span></button>';\n                html += '</div>';\n            }\n\n            html += '</div>';\n        }\n\n        var elem = $('.providerList', page).html(html);\n        $('.btnOptions', elem).on('click', function () {\n            var id = this.getAttribute('data-id');\n            showProviderOptions(page, id, this);\n        });\n    }\n\n    function showProviderOptions(page, providerId, button) {\n        var items = [];\n        items.push({\n            name: globalize.translate('ButtonDelete'),\n            id: 'delete'\n        });\n        items.push({\n            name: globalize.translate('MapChannels'),\n            id: 'map'\n        });\n\n        require(['actionsheet'], function (actionsheet) {\n            actionsheet.show({\n                items: items,\n                positionTo: button\n            }).then(function (id) {\n                switch (id) {\n                    case 'delete':\n                        deleteProvider(page, providerId);\n                        break;\n\n                    case 'map':\n                        mapChannels(page, providerId);\n                }\n            });\n        });\n    }\n\n    function mapChannels(page, providerId) {\n        require(['components/channelMapper/channelMapper'], function (channelmapper) {\n            new channelmapper({\n                serverId: ApiClient.serverInfo().Id,\n                providerId: providerId\n            }).show();\n        });\n    }\n\n    function deleteProvider(page, id) {\n        var message = globalize.translate('MessageConfirmDeleteGuideProvider');\n\n        require(['confirm'], function (confirm) {\n            confirm(message, globalize.translate('HeaderDeleteProvider')).then(function () {\n                loading.show();\n                ApiClient.ajax({\n                    type: 'DELETE',\n                    url: ApiClient.getUrl('LiveTv/ListingProviders', {\n                        Id: id\n                    })\n                }).then(function () {\n                    reload(page);\n                }, function () {\n                    reload(page);\n                });\n            });\n        });\n    }\n\n    function getTunerName(providerId) {\n        switch (providerId = providerId.toLowerCase()) {\n            case 'm3u':\n                return 'M3U';\n            case 'hdhomerun':\n                return 'HDHomeRun';\n            case 'hauppauge':\n                return 'Hauppauge';\n            case 'satip':\n                return 'DVB';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    function getProviderName(providerId) {\n        switch (providerId = providerId.toLowerCase()) {\n            case 'schedulesdirect':\n                return 'Schedules Direct';\n            case 'xmltv':\n                return 'XMLTV';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    function getProviderConfigurationUrl(providerId) {\n        switch (providerId = providerId.toLowerCase()) {\n            case 'xmltv':\n                return 'livetvguideprovider.html?type=xmltv';\n            case 'schedulesdirect':\n                return 'livetvguideprovider.html?type=schedulesdirect';\n        }\n    }\n\n    function addProvider(button) {\n        var menuItems = [];\n        menuItems.push({\n            name: 'Schedules Direct',\n            id: 'SchedulesDirect'\n        });\n        menuItems.push({\n            name: 'XMLTV',\n            id: 'xmltv'\n        });\n\n        require(['actionsheet'], function (actionsheet) {\n            actionsheet.show({\n                items: menuItems,\n                positionTo: button,\n                callback: function (id) {\n                    Dashboard.navigate(getProviderConfigurationUrl(id));\n                }\n            });\n        });\n    }\n\n    function addDevice(button) {\n        Dashboard.navigate('livetvtuner.html');\n    }\n\n    function showDeviceMenu(button, tunerDeviceId) {\n        var items = [];\n        items.push({\n            name: globalize.translate('ButtonDelete'),\n            id: 'delete'\n        });\n        items.push({\n            name: globalize.translate('ButtonEdit'),\n            id: 'edit'\n        });\n\n        require(['actionsheet'], function (actionsheet) {\n            actionsheet.show({\n                items: items,\n                positionTo: button\n            }).then(function (id) {\n                switch (id) {\n                    case 'delete':\n                        deleteDevice(dom.parentWithClass(button, 'page'), tunerDeviceId);\n                        break;\n\n                    case 'edit':\n                        Dashboard.navigate('livetvtuner.html?id=' + tunerDeviceId);\n                }\n            });\n        });\n    }\n\n    function onDevicesListClick(e) {\n        var card = dom.parentWithClass(e.target, 'card');\n\n        if (card) {\n            var id = card.getAttribute('data-id');\n            var btnCardOptions = dom.parentWithClass(e.target, 'btnCardOptions');\n\n            if (btnCardOptions) {\n                showDeviceMenu(btnCardOptions, id);\n            } else {\n                Dashboard.navigate('livetvtuner.html?id=' + id);\n            }\n        }\n    }\n\n    $(document).on('pageinit', '#liveTvStatusPage', function () {\n        var page = this;\n        $('.btnAddDevice', page).on('click', function () {\n            addDevice(this);\n        });\n        $('.formAddDevice', page).on('submit', function () {\n            submitAddDeviceForm(page);\n            return false;\n        });\n        $('.btnAddProvider', page).on('click', function () {\n            addProvider(this);\n        });\n        page.querySelector('.devicesList').addEventListener('click', onDevicesListClick);\n    }).on('pageshow', '#liveTvStatusPage', function () {\n        var page = this;\n        reload(page);\n        taskButton({\n            mode: 'on',\n            progressElem: page.querySelector('.refreshGuideProgress'),\n            taskKey: 'RefreshGuide',\n            button: page.querySelector('.btnRefresh')\n        });\n    }).on('pagehide', '#liveTvStatusPage', function () {\n        var page = this;\n        taskButton({\n            mode: 'off',\n            progressElem: page.querySelector('.refreshGuideProgress'),\n            taskKey: 'RefreshGuide',\n            button: page.querySelector('.btnRefresh')\n        });\n    });\n});\n"]}