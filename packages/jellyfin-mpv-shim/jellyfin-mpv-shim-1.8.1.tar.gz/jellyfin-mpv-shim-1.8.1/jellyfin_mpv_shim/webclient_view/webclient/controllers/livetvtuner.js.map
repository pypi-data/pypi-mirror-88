{"version":3,"sources":["controllers/livetvtuner.js"],"names":["define","globalize","loading","libraryMenu","dom","isM3uVariant","type","indexOf","fillTunerHostInfo","view","info","selectType","querySelector","Type","Source","value","onTypeChange","call","Url","FriendlyName","UserAgent","DeviceId","checked","ImportFavoritesOnly","AllowHWTranscoding","EnableStreamLooping","TunerCount","getDetectedDevice","getRequirePromise","deps","Promise","resolve","reject","require","then","tunerPicker","show","serverId","ApiClient","this","parentWithClass","mayIncludeUnsupportedDrmChannels","supportsTranscoding","supportsFavorites","supportsTunerIpAddress","supportsTunerFileOrUrl","supportsStreamLooping","supportsTunerCount","supportsUserAgent","suppportsSubmit","supportsSelectablePath","txtDevicePath","label","translate","classList","remove","add","setAttribute","removeAttribute","params","id","addEventListener","currentId","fillTypes","getJSON","getUrl","types","html","map","tuner","Id","Name","join","innerHTML","disabled","reload","providerId","getNamedConfiguration","config","TunerHosts","filter","i","e","submitForm","page","getParameterByName","ajax","url","data","JSON","stringify","contentType","result","Dashboard","processServerConfigurationUpdateResult","navigate","hide","alert","message","preventDefault","stopPropagation","directoryBrowser","picker","includeFiles","callback","path","close"],"mappings":"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","file":"livetvtuner.js","sourcesContent":["define(['globalize', 'loading', 'libraryMenu', 'dom', 'emby-input', 'emby-button', 'emby-checkbox', 'emby-select'], function (globalize, loading, libraryMenu, dom) {\n    'use strict';\n\n    function isM3uVariant(type) {\n        return ['nextpvr'].indexOf(type || '') !== -1;\n    }\n\n    function fillTypes(view, currentId) {\n        return ApiClient.getJSON(ApiClient.getUrl('LiveTv/TunerHosts/Types')).then(function (types) {\n            var selectType = view.querySelector('.selectType');\n            var html = '';\n            html += types.map(function (tuner) {\n                return '<option value=\"' + tuner.Id + '\">' + tuner.Name + '</option>';\n            }).join('');\n            html += '<option value=\"other\">';\n            html += globalize.translate('TabOther');\n            html += '</option>';\n            selectType.innerHTML = html;\n            selectType.disabled = null != currentId;\n            selectType.value = '';\n            onTypeChange.call(selectType);\n        });\n    }\n\n    function reload(view, providerId) {\n        view.querySelector('.txtDevicePath').value = '';\n        view.querySelector('.chkFavorite').checked = false;\n        view.querySelector('.txtDevicePath').value = '';\n\n        if (providerId) {\n            ApiClient.getNamedConfiguration('livetv').then(function (config) {\n                var info = config.TunerHosts.filter(function (i) {\n                    return i.Id === providerId;\n                })[0];\n                fillTunerHostInfo(view, info);\n            });\n        }\n    }\n\n    function fillTunerHostInfo(view, info) {\n        var selectType = view.querySelector('.selectType');\n        var type = info.Type || '';\n\n        if (info.Source && isM3uVariant(info.Source)) {\n            type = info.Source;\n        }\n\n        selectType.value = type;\n        onTypeChange.call(selectType);\n        view.querySelector('.txtDevicePath').value = info.Url || '';\n        view.querySelector('.txtFriendlyName').value = info.FriendlyName || '';\n        view.querySelector('.txtUserAgent').value = info.UserAgent || '';\n        view.querySelector('.fldDeviceId').value = info.DeviceId || '';\n        view.querySelector('.chkFavorite').checked = info.ImportFavoritesOnly;\n        view.querySelector('.chkTranscode').checked = info.AllowHWTranscoding;\n        view.querySelector('.chkStreamLoop').checked = info.EnableStreamLooping;\n        view.querySelector('.txtTunerCount').value = info.TunerCount || '0';\n    }\n\n    function submitForm(page) {\n        loading.show();\n        var info = {\n            Type: page.querySelector('.selectType').value,\n            Url: page.querySelector('.txtDevicePath').value || null,\n            UserAgent: page.querySelector('.txtUserAgent').value || null,\n            FriendlyName: page.querySelector('.txtFriendlyName').value || null,\n            DeviceId: page.querySelector('.fldDeviceId').value || null,\n            TunerCount: page.querySelector('.txtTunerCount').value || 0,\n            ImportFavoritesOnly: page.querySelector('.chkFavorite').checked,\n            AllowHWTranscoding: page.querySelector('.chkTranscode').checked,\n            EnableStreamLooping: page.querySelector('.chkStreamLoop').checked\n        };\n\n        if (isM3uVariant(info.Type)) {\n            info.Source = info.Type;\n            info.Type = 'm3u';\n        }\n\n        var id = getParameterByName('id');\n\n        if (id) {\n            info.Id = id;\n        }\n\n        ApiClient.ajax({\n            type: 'POST',\n            url: ApiClient.getUrl('LiveTv/TunerHosts'),\n            data: JSON.stringify(info),\n            contentType: 'application/json'\n        }).then(function (result) {\n            Dashboard.processServerConfigurationUpdateResult();\n            Dashboard.navigate('livetvstatus.html');\n        }, function () {\n            loading.hide();\n            Dashboard.alert({\n                message: globalize.translate('ErrorSavingTvProvider')\n            });\n        });\n    }\n\n    function getRequirePromise(deps) {\n        return new Promise(function (resolve, reject) {\n            require(deps, resolve);\n        });\n    }\n\n    function getDetectedDevice() {\n        return getRequirePromise(['tunerPicker']).then(function (tunerPicker) {\n            return new tunerPicker().show({\n                serverId: ApiClient.serverId()\n            });\n        });\n    }\n\n    function onTypeChange() {\n        var value = this.value;\n        var view = dom.parentWithClass(this, 'page');\n        var mayIncludeUnsupportedDrmChannels = 'hdhomerun' === value;\n        var supportsTranscoding = 'hdhomerun' === value;\n        var supportsFavorites = 'hdhomerun' === value;\n        var supportsTunerIpAddress = 'hdhomerun' === value;\n        var supportsTunerFileOrUrl = 'm3u' === value;\n        var supportsStreamLooping = 'm3u' === value;\n        var supportsTunerCount = 'm3u' === value;\n        var supportsUserAgent = 'm3u' === value;\n        var suppportsSubmit = 'other' !== value;\n        var supportsSelectablePath = supportsTunerFileOrUrl;\n        var txtDevicePath = view.querySelector('.txtDevicePath');\n\n        if (supportsTunerIpAddress) {\n            txtDevicePath.label(globalize.translate('LabelTunerIpAddress'));\n            view.querySelector('.fldPath').classList.remove('hide');\n        } else if (supportsTunerFileOrUrl) {\n            txtDevicePath.label(globalize.translate('LabelFileOrUrl'));\n            view.querySelector('.fldPath').classList.remove('hide');\n        } else {\n            view.querySelector('.fldPath').classList.add('hide');\n        }\n\n        if (supportsSelectablePath) {\n            view.querySelector('.btnSelectPath').classList.remove('hide');\n            view.querySelector('.txtDevicePath').setAttribute('required', 'required');\n        } else {\n            view.querySelector('.btnSelectPath').classList.add('hide');\n            view.querySelector('.txtDevicePath').removeAttribute('required');\n        }\n\n        if (supportsUserAgent) {\n            view.querySelector('.fldUserAgent').classList.remove('hide');\n        } else {\n            view.querySelector('.fldUserAgent').classList.add('hide');\n        }\n\n        if (supportsFavorites) {\n            view.querySelector('.fldFavorites').classList.remove('hide');\n        } else {\n            view.querySelector('.fldFavorites').classList.add('hide');\n        }\n\n        if (supportsTranscoding) {\n            view.querySelector('.fldTranscode').classList.remove('hide');\n        } else {\n            view.querySelector('.fldTranscode').classList.add('hide');\n        }\n\n        if (supportsStreamLooping) {\n            view.querySelector('.fldStreamLoop').classList.remove('hide');\n        } else {\n            view.querySelector('.fldStreamLoop').classList.add('hide');\n        }\n\n        if (supportsTunerCount) {\n            view.querySelector('.fldTunerCount').classList.remove('hide');\n            view.querySelector('.txtTunerCount').setAttribute('required', 'required');\n        } else {\n            view.querySelector('.fldTunerCount').classList.add('hide');\n            view.querySelector('.txtTunerCount').removeAttribute('required');\n        }\n\n        if (mayIncludeUnsupportedDrmChannels) {\n            view.querySelector('.drmMessage').classList.remove('hide');\n        } else {\n            view.querySelector('.drmMessage').classList.add('hide');\n        }\n\n        if (suppportsSubmit) {\n            view.querySelector('.button-submit').classList.remove('hide');\n        } else {\n            view.querySelector('.button-submit').classList.add('hide');\n        }\n    }\n\n    return function (view, params) {\n        if (!params.id) {\n            view.querySelector('.btnDetect').classList.remove('hide');\n        }\n\n        view.addEventListener('viewshow', function () {\n            var currentId = params.id;\n            fillTypes(view, currentId).then(function () {\n                reload(view, currentId);\n            });\n        });\n        view.querySelector('form').addEventListener('submit', function (e) {\n            submitForm(view);\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        });\n        view.querySelector('.selectType').addEventListener('change', onTypeChange);\n        view.querySelector('.btnDetect').addEventListener('click', function () {\n            getDetectedDevice().then(function (info) {\n                fillTunerHostInfo(view, info);\n            });\n        });\n        view.querySelector('.btnSelectPath').addEventListener('click', function () {\n            require(['directorybrowser'], function (directoryBrowser) {\n                var picker = new directoryBrowser();\n                picker.show({\n                    includeFiles: true,\n                    callback: function (path) {\n                        if (path) {\n                            view.querySelector('.txtDevicePath').value = path;\n                        }\n\n                        picker.close();\n                    }\n                });\n            });\n        });\n    };\n});\n"]}