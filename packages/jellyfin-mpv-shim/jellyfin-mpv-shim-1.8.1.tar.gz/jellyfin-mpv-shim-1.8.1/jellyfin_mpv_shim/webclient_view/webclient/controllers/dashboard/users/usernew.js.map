{"version":3,"sources":["controllers/dashboard/users/usernew.js"],"names":["define","$","loading","globalize","loadUser","page","val","show","promiseFolders","ApiClient","getJSON","getUrl","IsHidden","promiseChannels","Promise","all","then","responses","loadMediaFolders","mediaFolders","html","translate","i","length","folder","Id","Name","trigger","prop","Items","loadChannels","channels","hide","onSubmit","this","parents","saveUser","user","Password","createUser","Policy","EnableAllFolders","is","EnabledFolders","get","filter","checked","map","getAttribute","EnableAllChannels","EnabledChannels","updateUserPolicy","Dashboard","navigate","response","require","toast","document","on","off","loadData"],"mappings":"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","file":"usernew.js","sourcesContent":["define(['jQuery', 'loading', 'globalize', 'emby-checkbox'], function ($, loading, globalize) {\n    'use strict';\n\n    function loadMediaFolders(page, mediaFolders) {\n        var html = '';\n        html += '<h3 class=\"checkboxListLabel\">' + globalize.translate('HeaderLibraries') + '</h3>';\n        html += '<div class=\"checkboxList paperList\" style=\"padding:.5em 1em;\">';\n\n        for (var i = 0; i < mediaFolders.length; i++) {\n            var folder = mediaFolders[i];\n            html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkFolder\" data-id=\"' + folder.Id + '\"/><span>' + folder.Name + '</span></label>';\n        }\n\n        html += '</div>';\n        $('.folderAccess', page).html(html).trigger('create');\n        $('#chkEnableAllFolders', page).prop('checked', false);\n    }\n\n    function loadChannels(page, channels) {\n        var html = '';\n        html += '<h3 class=\"checkboxListLabel\">' + globalize.translate('HeaderChannels') + '</h3>';\n        html += '<div class=\"checkboxList paperList\" style=\"padding:.5em 1em;\">';\n\n        for (var i = 0; i < channels.length; i++) {\n            var folder = channels[i];\n            html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkChannel\" data-id=\"' + folder.Id + '\"/><span>' + folder.Name + '</span></label>';\n        }\n\n        html += '</div>';\n        $('.channelAccess', page).show().html(html).trigger('create');\n\n        if (channels.length) {\n            $('.channelAccessContainer', page).show();\n        } else {\n            $('.channelAccessContainer', page).hide();\n        }\n\n        $('#chkEnableAllChannels', page).prop('checked', false);\n    }\n\n    function loadUser(page) {\n        $('#txtUsername', page).val('');\n        $('#txtPassword', page).val('');\n        loading.show();\n        var promiseFolders = ApiClient.getJSON(ApiClient.getUrl('Library/MediaFolders', {\n            IsHidden: false\n        }));\n        var promiseChannels = ApiClient.getJSON(ApiClient.getUrl('Channels'));\n        Promise.all([promiseFolders, promiseChannels]).then(function (responses) {\n            loadMediaFolders(page, responses[0].Items);\n            loadChannels(page, responses[1].Items);\n            loading.hide();\n        });\n    }\n\n    function saveUser(page) {\n        var user = {};\n        user.Name = $('#txtUsername', page).val();\n        user.Password = $('#txtPassword', page).val();\n        ApiClient.createUser(user).then(function (user) {\n            user.Policy.EnableAllFolders = $('#chkEnableAllFolders', page).is(':checked');\n            user.Policy.EnabledFolders = [];\n\n            if (!user.Policy.EnableAllFolders) {\n                user.Policy.EnabledFolders = $('.chkFolder', page).get().filter(function (i) {\n                    return i.checked;\n                }).map(function (i) {\n                    return i.getAttribute('data-id');\n                });\n            }\n\n            user.Policy.EnableAllChannels = $('#chkEnableAllChannels', page).is(':checked');\n            user.Policy.EnabledChannels = [];\n\n            if (!user.Policy.EnableAllChannels) {\n                user.Policy.EnabledChannels = $('.chkChannel', page).get().filter(function (i) {\n                    return i.checked;\n                }).map(function (i) {\n                    return i.getAttribute('data-id');\n                });\n            }\n\n            ApiClient.updateUserPolicy(user.Id, user.Policy).then(function () {\n                Dashboard.navigate('useredit.html?userId=' + user.Id);\n            });\n        }, function (response) {\n            require(['toast'], function (toast) {\n                toast(globalize.translate('DefaultErrorMessage'));\n            });\n\n            loading.hide();\n        });\n    }\n\n    function onSubmit() {\n        var page = $(this).parents('.page')[0];\n        loading.show();\n        saveUser(page);\n        return false;\n    }\n\n    function loadData(page) {\n        loadUser(page);\n    }\n\n    $(document).on('pageinit', '#newUserPage', function () {\n        var page = this;\n        $('#chkEnableAllChannels', page).on('change', function () {\n            if (this.checked) {\n                $('.channelAccessListContainer', page).hide();\n            } else {\n                $('.channelAccessListContainer', page).show();\n            }\n        });\n        $('#chkEnableAllFolders', page).on('change', function () {\n            if (this.checked) {\n                $('.folderAccessListContainer', page).hide();\n            } else {\n                $('.folderAccessListContainer', page).show();\n            }\n        });\n        $('.newUserProfileForm').off('submit', onSubmit).on('submit', onSubmit);\n    }).on('pageshow', '#newUserPage', function () {\n        loadData(this);\n    });\n});\n"]}