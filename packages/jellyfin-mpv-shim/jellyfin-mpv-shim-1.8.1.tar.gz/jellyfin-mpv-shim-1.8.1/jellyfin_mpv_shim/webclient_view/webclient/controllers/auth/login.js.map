{"version":3,"sources":["controllers/auth/login.js"],"names":["define","appHost","appSettings","dom","connectionManager","loading","layoutManager","browser","globalize","enableFocusTransform","slow","edge","authenticateUserByName","page","apiClient","username","password","show","then","result","user","User","hide","Dashboard","onServerChanged","Id","AccessToken","navigate","response","querySelector","value","includes","status","require","toast","messageKey","translate","alert","message","title","showManualForm","context","showCancel","focusPassword","checked","enableAutoLogin","classList","remove","add","focus","metroColors","getMetroColor","str","character","String","substr","charCodeAt","sum","i","length","parseInt","charAt","index","getRandomMetroColor","Math","floor","random","view","params","getApiClient","serverId","serverid","getOrCreateApiClient","ApiClient","showVisualForm","autoFocuser","autoFocus","addEventListener","e","card","parentWithClass","target","cardContent","id","getAttribute","name","haspw","preventDefault","selectServer","supports","getPublicUsers","users","loadUserList","html","cssClass","tv","HasPassword","Name","PrimaryImageTag","getUserImageUrl","width","tag","type","innerHTML","catch","getJSON","getUrl","options","textContent","LoginDisclaimer"],"mappings":"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","file":"login.js","sourcesContent":["define(['apphost', 'appSettings', 'dom', 'connectionManager', 'loading', 'layoutManager', 'browser', 'globalize', 'cardStyle', 'emby-checkbox'], function (appHost, appSettings, dom, connectionManager, loading, layoutManager, browser, globalize) {\n    'use strict';\n\n    var enableFocusTransform = !browser.slow && !browser.edge;\n\n    function authenticateUserByName(page, apiClient, username, password) {\n        loading.show();\n        apiClient.authenticateUserByName(username, password).then(function (result) {\n            var user = result.User;\n            loading.hide();\n\n            Dashboard.onServerChanged(user.Id, result.AccessToken, apiClient);\n            Dashboard.navigate('home.html');\n        }, function (response) {\n            page.querySelector('#txtManualName').value = '';\n            page.querySelector('#txtManualPassword').value = '';\n            loading.hide();\n\n            const UnauthorizedOrForbidden = [401, 403];\n            if (UnauthorizedOrForbidden.includes(response.status)) {\n                require(['toast'], function (toast) {\n                    const messageKey = response.status === 401 ? 'MessageInvalidUser' : 'MessageUnauthorizedUser';\n                    toast(globalize.translate(messageKey));\n                });\n            } else {\n                Dashboard.alert({\n                    message: globalize.translate('MessageUnableToConnectToServer'),\n                    title: globalize.translate('HeaderConnectionFailure')\n                });\n            }\n        });\n    }\n\n    function showManualForm(context, showCancel, focusPassword) {\n        context.querySelector('.chkRememberLogin').checked = appSettings.enableAutoLogin();\n        context.querySelector('.manualLoginForm').classList.remove('hide');\n        context.querySelector('.visualLoginForm').classList.add('hide');\n        context.querySelector('.btnManual').classList.add('hide');\n\n        if (focusPassword) {\n            context.querySelector('#txtManualPassword').focus();\n        } else {\n            context.querySelector('#txtManualName').focus();\n        }\n\n        if (showCancel) {\n            context.querySelector('.btnCancel').classList.remove('hide');\n        } else {\n            context.querySelector('.btnCancel').classList.add('hide');\n        }\n    }\n\n    var metroColors = ['#6FBD45', '#4BB3DD', '#4164A5', '#E12026', '#800080', '#E1B222', '#008040', '#0094FF', '#FF00C7', '#FF870F', '#7F0037'];\n\n    function getRandomMetroColor() {\n        var index = Math.floor(Math.random() * (metroColors.length - 1));\n        return metroColors[index];\n    }\n\n    function getMetroColor(str) {\n        if (str) {\n            var character = String(str.substr(0, 1).charCodeAt());\n            var sum = 0;\n\n            for (var i = 0; i < character.length; i++) {\n                sum += parseInt(character.charAt(i));\n            }\n\n            var index = String(sum).substr(-1);\n            return metroColors[index];\n        }\n\n        return getRandomMetroColor();\n    }\n\n    function loadUserList(context, apiClient, users) {\n        var html = '';\n\n        for (var i = 0; i < users.length; i++) {\n            var user = users[i];\n\n            // TODO move card creation code to Card component\n            var cssClass = 'card squareCard scalableCard squareCard-scalable';\n\n            if (layoutManager.tv) {\n                cssClass += ' show-focus';\n\n                if (enableFocusTransform) {\n                    cssClass += ' show-animation';\n                }\n            }\n\n            var cardBoxCssClass = 'cardBox cardBox-bottompadded';\n            html += '<button type=\"button\" class=\"' + cssClass + '\">';\n            html += '<div class=\"' + cardBoxCssClass + '\">';\n            html += '<div class=\"cardScalable\">';\n            html += '<div class=\"cardPadder cardPadder-square\"></div>';\n            html += '<div class=\"cardContent\" data-haspw=\"' + user.HasPassword + '\" data-username=\"' + user.Name + '\" data-userid=\"' + user.Id + '\">';\n            var imgUrl;\n\n            if (user.PrimaryImageTag) {\n                imgUrl = apiClient.getUserImageUrl(user.Id, {\n                    width: 300,\n                    tag: user.PrimaryImageTag,\n                    type: 'Primary'\n                });\n                html += '<div class=\"cardImageContainer coveredImage coveredImage-noScale\" style=\"background-image:url(\\'' + imgUrl + \"');\\\"></div>\";\n            } else {\n                var background = getMetroColor(user.Id);\n                imgUrl = 'assets/img/avatar.png';\n                html += '<div class=\"cardImageContainer coveredImage coveredImage-noScale\" style=\"background-image:url(\\'' + imgUrl + \"');background-color:\" + background + ';\"></div>';\n            }\n\n            html += '</div>';\n            html += '</div>';\n            html += '<div class=\"cardFooter visualCardBox-cardFooter\">';\n            html += '<div class=\"cardText singleCardText cardTextCentered\">' + user.Name + '</div>';\n            html += '</div>';\n            html += '</div>';\n            html += '</button>';\n        }\n\n        context.querySelector('#divUsers').innerHTML = html;\n    }\n\n    return function (view, params) {\n        function getApiClient() {\n            var serverId = params.serverid;\n\n            if (serverId) {\n                return connectionManager.getOrCreateApiClient(serverId);\n            }\n\n            return ApiClient;\n        }\n\n        function showVisualForm() {\n            view.querySelector('.visualLoginForm').classList.remove('hide');\n            view.querySelector('.manualLoginForm').classList.add('hide');\n            view.querySelector('.btnManual').classList.remove('hide');\n\n            require(['autoFocuser'], function (autoFocuser) {\n                autoFocuser.autoFocus(view);\n            });\n        }\n\n        view.querySelector('#divUsers').addEventListener('click', function (e) {\n            var card = dom.parentWithClass(e.target, 'card');\n            var cardContent = card ? card.querySelector('.cardContent') : null;\n\n            if (cardContent) {\n                var context = view;\n                var id = cardContent.getAttribute('data-userid');\n                var name = cardContent.getAttribute('data-username');\n                var haspw = cardContent.getAttribute('data-haspw');\n\n                if (id === 'manual') {\n                    context.querySelector('#txtManualName').value = '';\n                    showManualForm(context, true);\n                } else if (haspw == 'false') {\n                    authenticateUserByName(context, getApiClient(), name, '');\n                } else {\n                    context.querySelector('#txtManualName').value = name;\n                    context.querySelector('#txtManualPassword').value = '';\n                    showManualForm(context, true, true);\n                }\n            }\n        });\n        view.querySelector('.manualLoginForm').addEventListener('submit', function (e) {\n            appSettings.enableAutoLogin(view.querySelector('.chkRememberLogin').checked);\n            var apiClient = getApiClient();\n            authenticateUserByName(view, apiClient, view.querySelector('#txtManualName').value, view.querySelector('#txtManualPassword').value);\n            e.preventDefault();\n            return false;\n        });\n        view.querySelector('.btnForgotPassword').addEventListener('click', function () {\n            Dashboard.navigate('forgotpassword.html');\n        });\n        view.querySelector('.btnCancel').addEventListener('click', showVisualForm);\n        view.querySelector('.btnManual').addEventListener('click', function () {\n            view.querySelector('#txtManualName').value = '';\n            showManualForm(view, true);\n        });\n        view.querySelector('.btnSelectServer').addEventListener('click', function () {\n            Dashboard.selectServer();\n        });\n        view.addEventListener('viewshow', function (e) {\n            loading.show();\n\n            if (!appHost.supports('multiserver')) {\n                view.querySelector('.btnSelectServer').classList.add('hide');\n            }\n\n            var apiClient = getApiClient();\n            apiClient.getPublicUsers().then(function (users) {\n                if (users.length) {\n                    showVisualForm();\n                    loadUserList(view, apiClient, users);\n                } else {\n                    view.querySelector('#txtManualName').value = '';\n                    showManualForm(view, false, false);\n                }\n            }).catch().then(function () {\n                loading.hide();\n            });\n            apiClient.getJSON(apiClient.getUrl('Branding/Configuration')).then(function (options) {\n                view.querySelector('.disclaimer').textContent = options.LoginDisclaimer || '';\n            });\n        });\n    };\n});\n"]}