{"version":3,"sources":["controllers/dashboard/users/userlibraryaccess.js"],"names":["define","$","loading","libraryMenu","globalize","loadMediaFolders","page","user","mediaFolders","html","translate","i","length","folder","checkedAttribute","Policy","EnableAllFolders","EnabledFolders","indexOf","Id","Name","querySelector","innerHTML","chkEnableAllFolders","checked","triggerChange","select","evt","document","createEvent","initEvent","dispatchEvent","loadUser","loggedInUser","channels","devices","setTitle","loadChannels","EnableAllChannels","EnabledChannels","show","hide","prop","loadDevices","device","EnableAllDevices","EnabledDevices","AppName","IsAdministrator","classList","add","remove","saveUser","is","get","filter","c","map","getAttribute","BlockedChannels","BlockedMediaFolders","ApiClient","updateUserPolicy","then","onSaveComplete","require","toast","onSubmit","this","parents","userId","getParameterByName","getUser","result","on","addEventListener","off","promise1","deferred","Deferred","resolveWith","Configuration","promise","promise2","Dashboard","getCurrentUser","promise4","getJSON","getUrl","IsHidden","promise5","promise6","Promise","all","responses","Items"],"mappings":"AAAA,aAAAA,OAAO,CAAC,SAAU,UAAW,cAAe,cAAc,SAAUC,EAAGC,QAASC,YAAaC,WASzF,SAASC,iBAAiBC,KAAMC,KAAMC,cAClC,IAAIC,KAAO,GACXA,MAAQ,iCAAmCL,UAAUM,UAAU,mBAAqB,QACpFD,MAAQ,8DAER,IAAK,IAAIE,EAAI,EAAGC,OAASJ,aAAaI,OAAQD,EAAIC,OAAQD,IAAK,CAC3D,IAAIE,OAASL,aAAaG,GAEtBG,iBADYP,KAAKQ,OAAOC,mBAAqB,GAAKT,KAAKQ,OAAOE,eAAeC,QAAQL,OAAOM,IAC7D,qBAAuB,GAC1DV,MAAQ,+EAAiFI,OAAOM,GAAK,KAAOL,iBAAmB,UAAYD,OAAOO,KAAO,kBAG7JX,MAAQ,SACRH,KAAKe,cAAc,iBAAiBC,UAAYb,KAChD,IAAIc,oBAAsBjB,KAAKe,cAAc,wBAC7CE,oBAAoBC,QAAUjB,KAAKQ,OAAOC,iBArB9C,SAASS,cAAcC,QACnB,IAAIC,IAAMC,SAASC,YAAY,cAC/BF,IAAIG,UAAU,UAAU,GAAO,GAC/BJ,OAAOK,cAAcJ,KAmBrBF,CAAcF,qBAiDlB,SAASS,SAAS1B,KAAMC,KAAM0B,aAAczB,aAAc0B,SAAUC,SAChE7B,KAAKe,cAAc,aAAaC,UAAYf,KAAKa,KACjDjB,YAAYiC,SAAS7B,KAAKa,MAhD9B,SAASiB,aAAa/B,KAAMC,KAAM2B,UAC9B,IAAIzB,KAAO,GACXA,MAAQ,iCAAmCL,UAAUM,UAAU,kBAAoB,QACnFD,MAAQ,8DAER,IAAK,IAAIE,EAAI,EAAGC,OAASsB,SAAStB,OAAQD,EAAIC,OAAQD,IAAK,CACvD,IAAIE,OAASqB,SAASvB,GAElBG,iBADYP,KAAKQ,OAAOuB,oBAAsB,GAAK/B,KAAKQ,OAAOwB,gBAAgBrB,QAAQL,OAAOM,IAC/D,qBAAuB,GAC1DV,MAAQ,gFAAkFI,OAAOM,GAAK,KAAOL,iBAAmB,UAAYD,OAAOO,KAAO,kBAG9JX,MAAQ,SACRR,EAAE,iBAAkBK,MAAMkC,OAAO/B,KAAKA,MAElCyB,SAAStB,OACTX,EAAE,0BAA2BK,MAAMkC,OAEnCvC,EAAE,0BAA2BK,MAAMmC,OAGvCxC,EAAE,wBAAyBK,MAAMoC,KAAK,UAAWnC,KAAKQ,OAAOuB,mBA4B7DD,CAAa/B,KAAMC,KAAM2B,UACzB7B,iBAAiBC,KAAMC,KAAMC,cA1BjC,SAASmC,YAAYrC,KAAMC,KAAM4B,SAC7B,IAAI1B,KAAO,GACXA,MAAQ,iCAAmCL,UAAUM,UAAU,iBAAmB,QAClFD,MAAQ,8DAER,IAAK,IAAIE,EAAI,EAAGC,OAASuB,QAAQvB,OAAQD,EAAIC,OAAQD,IAAK,CACtD,IAAIiC,OAAST,QAAQxB,GACjBG,iBAAmBP,KAAKQ,OAAO8B,mBAAqB,GAAKtC,KAAKQ,OAAO+B,eAAe5B,QAAQ0B,OAAOzB,IAAM,qBAAuB,GACpIV,MAAQ,+EAAiFmC,OAAOzB,GAAK,KAAOL,iBAAmB,UAAY8B,OAAOxB,KAAO,MAAQwB,OAAOG,QAAU,kBAGtLtC,MAAQ,SACRR,EAAE,gBAAiBK,MAAMkC,OAAO/B,KAAKA,MACrCR,EAAE,uBAAwBK,MAAMoC,KAAK,UAAWnC,KAAKQ,OAAO8B,kBAExDtC,KAAKQ,OAAOiC,gBACZ1C,KAAKe,cAAc,0BAA0B4B,UAAUC,IAAI,QAE3D5C,KAAKe,cAAc,0BAA0B4B,UAAUE,OAAO,QASlER,CAAYrC,KAAMC,KAAM4B,SACxBjC,QAAQuC,OAWZ,SAASW,SAAS7C,KAAMD,MACpBC,KAAKQ,OAAOC,iBAAmBf,EAAE,uBAAwBK,MAAM+C,GAAG,YAClE9C,KAAKQ,OAAOE,eAAiBV,KAAKQ,OAAOC,iBAAmB,GAAKf,EAAE,aAAcK,MAAMgD,MAAMC,QAAO,SAAUC,GAC1G,OAAOA,EAAEhC,WACViC,KAAI,SAAUD,GACb,OAAOA,EAAEE,aAAa,cAE1BnD,KAAKQ,OAAOuB,kBAAoBrC,EAAE,wBAAyBK,MAAM+C,GAAG,YACpE9C,KAAKQ,OAAOwB,gBAAkBhC,KAAKQ,OAAOuB,kBAAoB,GAAKrC,EAAE,cAAeK,MAAMgD,MAAMC,QAAO,SAAUC,GAC7G,OAAOA,EAAEhC,WACViC,KAAI,SAAUD,GACb,OAAOA,EAAEE,aAAa,cAE1BnD,KAAKQ,OAAO8B,iBAAmB5C,EAAE,uBAAwBK,MAAM+C,GAAG,YAClE9C,KAAKQ,OAAO+B,eAAiBvC,KAAKQ,OAAO8B,iBAAmB,GAAK5C,EAAE,aAAcK,MAAMgD,MAAMC,QAAO,SAAUC,GAC1G,OAAOA,EAAEhC,WACViC,KAAI,SAAUD,GACb,OAAOA,EAAEE,aAAa,cAE1BnD,KAAKQ,OAAO4C,gBAAkB,KAC9BpD,KAAKQ,OAAO6C,oBAAsB,KAClCC,UAAUC,iBAAiBvD,KAAKY,GAAIZ,KAAKQ,QAAQgD,MAAK,YA7B1D,SAASC,eAAe1D,MACpBJ,QAAQuC,OAERwB,QAAQ,CAAC,UAAU,SAAUC,OACzBA,MAAM9D,UAAUM,UAAU,qBA0B1BsD,MAIR,SAASG,WACL,IAAI7D,KAAOL,EAAEmE,MAAMC,QAAQ,SAC3BnE,QAAQsC,OACR,IAAI8B,OAASC,mBAAmB,UAIhC,OAHAV,UAAUW,QAAQF,QAAQP,MAAK,SAAUU,QACrCrB,SAASqB,OAAQnE,UAEd,EAGXL,EAAE2B,UAAU8C,GAAG,WAAY,0BAA0B,WACjD,IAAIpE,KAAO8D,KACXnE,EAAE,uBAAwBK,MAAMoE,GAAG,UAAU,WACrCN,KAAK5C,QACLvB,EAAE,6BAA8BK,MAAMmC,OAEtCxC,EAAE,6BAA8BK,MAAMkC,UAG9CvC,EAAE,wBAAyBK,MAAMoE,GAAG,UAAU,WACtCN,KAAK5C,QACLvB,EAAE,8BAA+BK,MAAMmC,OAEvCxC,EAAE,8BAA+BK,MAAMkC,UAG/ClC,KAAKe,cAAc,wBAAwBsD,iBAAiB,UAAU,WAC9DP,KAAK5C,QACLlB,KAAKe,cAAc,8BAA8B4B,UAAUC,IAAI,QAE/D5C,KAAKe,cAAc,8BAA8B4B,UAAUE,OAAO,WAG1ElD,EAAE,0BAA0B2E,IAAI,SAAUT,UAAUO,GAAG,SAAUP,aAClEO,GAAG,WAAY,0BAA0B,WACxC,IAEIG,SAFAvE,KAAO8D,KACXlE,QAAQsC,OAER,IAAI8B,OAASC,mBAAmB,UAEhC,GAAID,OACAO,SAAWhB,UAAUW,QAAQF,YAC1B,CACH,IAAIQ,SAAW7E,EAAE8E,WACjBD,SAASE,YAAY,KAAM,CAAC,CACxBC,cAAe,MAEnBJ,SAAWC,SAASI,UAGxB,IAAIC,SAAWC,UAAUC,iBACrBC,SAAWzB,UAAU0B,QAAQ1B,UAAU2B,OAAO,uBAAwB,CACtEC,UAAU,KAEVC,SAAW7B,UAAU0B,QAAQ1B,UAAU2B,OAAO,aAC9CG,SAAW9B,UAAU0B,QAAQ1B,UAAU2B,OAAO,YAClDI,QAAQC,IAAI,CAAChB,SAAUM,SAAUG,SAAUI,SAAUC,WAAW5B,MAAK,SAAU+B,WAC3E9D,SAAS1B,KAAMwF,UAAU,GAAIA,UAAU,GAAIA,UAAU,GAAGC,MAAOD,UAAU,GAAGC,MAAOD,UAAU,GAAGC","file":"userlibraryaccess.js","sourcesContent":["define(['jQuery', 'loading', 'libraryMenu', 'globalize'], function ($, loading, libraryMenu, globalize) {\n    'use strict';\n\n    function triggerChange(select) {\n        var evt = document.createEvent('HTMLEvents');\n        evt.initEvent('change', false, true);\n        select.dispatchEvent(evt);\n    }\n\n    function loadMediaFolders(page, user, mediaFolders) {\n        var html = '';\n        html += '<h3 class=\"checkboxListLabel\">' + globalize.translate('HeaderLibraries') + '</h3>';\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n\n        for (var i = 0, length = mediaFolders.length; i < length; i++) {\n            var folder = mediaFolders[i];\n            var isChecked = user.Policy.EnableAllFolders || -1 != user.Policy.EnabledFolders.indexOf(folder.Id);\n            var checkedAttribute = isChecked ? ' checked=\"checked\"' : '';\n            html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkFolder\" data-id=\"' + folder.Id + '\" ' + checkedAttribute + '><span>' + folder.Name + '</span></label>';\n        }\n\n        html += '</div>';\n        page.querySelector('.folderAccess').innerHTML = html;\n        var chkEnableAllFolders = page.querySelector('#chkEnableAllFolders');\n        chkEnableAllFolders.checked = user.Policy.EnableAllFolders;\n        triggerChange(chkEnableAllFolders);\n    }\n\n    function loadChannels(page, user, channels) {\n        var html = '';\n        html += '<h3 class=\"checkboxListLabel\">' + globalize.translate('HeaderChannels') + '</h3>';\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n\n        for (var i = 0, length = channels.length; i < length; i++) {\n            var folder = channels[i];\n            var isChecked = user.Policy.EnableAllChannels || -1 != user.Policy.EnabledChannels.indexOf(folder.Id);\n            var checkedAttribute = isChecked ? ' checked=\"checked\"' : '';\n            html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkChannel\" data-id=\"' + folder.Id + '\" ' + checkedAttribute + '><span>' + folder.Name + '</span></label>';\n        }\n\n        html += '</div>';\n        $('.channelAccess', page).show().html(html);\n\n        if (channels.length) {\n            $('.channelAccessContainer', page).show();\n        } else {\n            $('.channelAccessContainer', page).hide();\n        }\n\n        $('#chkEnableAllChannels', page).prop('checked', user.Policy.EnableAllChannels);\n    }\n\n    function loadDevices(page, user, devices) {\n        var html = '';\n        html += '<h3 class=\"checkboxListLabel\">' + globalize.translate('HeaderDevices') + '</h3>';\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n\n        for (var i = 0, length = devices.length; i < length; i++) {\n            var device = devices[i];\n            var checkedAttribute = user.Policy.EnableAllDevices || -1 != user.Policy.EnabledDevices.indexOf(device.Id) ? ' checked=\"checked\"' : '';\n            html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkDevice\" data-id=\"' + device.Id + '\" ' + checkedAttribute + '><span>' + device.Name + ' - ' + device.AppName + '</span></label>';\n        }\n\n        html += '</div>';\n        $('.deviceAccess', page).show().html(html);\n        $('#chkEnableAllDevices', page).prop('checked', user.Policy.EnableAllDevices);\n\n        if (user.Policy.IsAdministrator) {\n            page.querySelector('.deviceAccessContainer').classList.add('hide');\n        } else {\n            page.querySelector('.deviceAccessContainer').classList.remove('hide');\n        }\n    }\n\n    function loadUser(page, user, loggedInUser, mediaFolders, channels, devices) {\n        page.querySelector('.username').innerHTML = user.Name;\n        libraryMenu.setTitle(user.Name);\n        loadChannels(page, user, channels);\n        loadMediaFolders(page, user, mediaFolders);\n        loadDevices(page, user, devices);\n        loading.hide();\n    }\n\n    function onSaveComplete(page) {\n        loading.hide();\n\n        require(['toast'], function (toast) {\n            toast(globalize.translate('SettingsSaved'));\n        });\n    }\n\n    function saveUser(user, page) {\n        user.Policy.EnableAllFolders = $('#chkEnableAllFolders', page).is(':checked');\n        user.Policy.EnabledFolders = user.Policy.EnableAllFolders ? [] : $('.chkFolder', page).get().filter(function (c) {\n            return c.checked;\n        }).map(function (c) {\n            return c.getAttribute('data-id');\n        });\n        user.Policy.EnableAllChannels = $('#chkEnableAllChannels', page).is(':checked');\n        user.Policy.EnabledChannels = user.Policy.EnableAllChannels ? [] : $('.chkChannel', page).get().filter(function (c) {\n            return c.checked;\n        }).map(function (c) {\n            return c.getAttribute('data-id');\n        });\n        user.Policy.EnableAllDevices = $('#chkEnableAllDevices', page).is(':checked');\n        user.Policy.EnabledDevices = user.Policy.EnableAllDevices ? [] : $('.chkDevice', page).get().filter(function (c) {\n            return c.checked;\n        }).map(function (c) {\n            return c.getAttribute('data-id');\n        });\n        user.Policy.BlockedChannels = null;\n        user.Policy.BlockedMediaFolders = null;\n        ApiClient.updateUserPolicy(user.Id, user.Policy).then(function () {\n            onSaveComplete(page);\n        });\n    }\n\n    function onSubmit() {\n        var page = $(this).parents('.page');\n        loading.show();\n        var userId = getParameterByName('userId');\n        ApiClient.getUser(userId).then(function (result) {\n            saveUser(result, page);\n        });\n        return false;\n    }\n\n    $(document).on('pageinit', '#userLibraryAccessPage', function () {\n        var page = this;\n        $('#chkEnableAllDevices', page).on('change', function () {\n            if (this.checked) {\n                $('.deviceAccessListContainer', page).hide();\n            } else {\n                $('.deviceAccessListContainer', page).show();\n            }\n        });\n        $('#chkEnableAllChannels', page).on('change', function () {\n            if (this.checked) {\n                $('.channelAccessListContainer', page).hide();\n            } else {\n                $('.channelAccessListContainer', page).show();\n            }\n        });\n        page.querySelector('#chkEnableAllFolders').addEventListener('change', function () {\n            if (this.checked) {\n                page.querySelector('.folderAccessListContainer').classList.add('hide');\n            } else {\n                page.querySelector('.folderAccessListContainer').classList.remove('hide');\n            }\n        });\n        $('.userLibraryAccessForm').off('submit', onSubmit).on('submit', onSubmit);\n    }).on('pageshow', '#userLibraryAccessPage', function () {\n        var page = this;\n        loading.show();\n        var promise1;\n        var userId = getParameterByName('userId');\n\n        if (userId) {\n            promise1 = ApiClient.getUser(userId);\n        } else {\n            var deferred = $.Deferred();\n            deferred.resolveWith(null, [{\n                Configuration: {}\n            }]);\n            promise1 = deferred.promise();\n        }\n\n        var promise2 = Dashboard.getCurrentUser();\n        var promise4 = ApiClient.getJSON(ApiClient.getUrl('Library/MediaFolders', {\n            IsHidden: false\n        }));\n        var promise5 = ApiClient.getJSON(ApiClient.getUrl('Channels'));\n        var promise6 = ApiClient.getJSON(ApiClient.getUrl('Devices'));\n        Promise.all([promise1, promise2, promise4, promise5, promise6]).then(function (responses) {\n            loadUser(page, responses[0], responses[1], responses[2].Items, responses[3].Items, responses[4].Items);\n        });\n    });\n});\n"]}