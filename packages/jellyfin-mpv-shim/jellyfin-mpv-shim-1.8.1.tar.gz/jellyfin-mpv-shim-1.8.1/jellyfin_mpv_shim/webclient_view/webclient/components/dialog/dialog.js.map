{"version":3,"sources":["components/dialog/dialog.js"],"names":["define","dialogHelper","dom","layoutManager","scrollHelper","globalize","require","text","title","options","Promise","resolve","reject","template","showDialog","dialogOptions","removeOnClose","scrollY","enableTvLayout","tv","size","dlg","createDialog","classList","add","innerHTML","translateHtml","formDialogContent","querySelector","style","centerFocus","on","maxWidth","Math","min","buttons","length","getWindowSize","innerWidth","i","displayText","html","dialogResult","hasDescriptions","item","autoFocus","buttonClass","type","description","id","name","onButtonClick","this","getAttribute","close","querySelectorAll","addEventListener","open","then","off"],"mappings":"AAAA,aAAAA,OAAO,CAAC,eAAgB,MAAO,gBAAiB,eAAgB,YAAa,UAAW,iBAAkB,cAAe,0BAA2B,aAAc,kBAAmB,eAAe,SAAUC,aAAcC,IAAKC,cAAeC,aAAcC,UAAWC,SAmHrQ,OAAO,SAAUC,KAAMC,OAEnB,IAAIC,QAUJ,OARIA,QADgB,iBAATF,KACG,CACNC,MAAOA,MACPD,KAAMA,MAGAA,KAGP,IAAIG,SAAQ,SAAUC,QAASC,QAClCN,QAAQ,CAAC,gCAAgC,SAAUO,WA7H3D,SAASC,WAAWL,QAASI,UAEzB,IAAIE,cAAgB,CAChBC,eAAe,EACfC,SAAS,GAGTC,eAAiBf,cAAcgB,GAE/BD,iBACAH,cAAcK,KAAO,cAGzB,IAAIC,IAAMpB,aAAaqB,aAAaP,eAEpCM,IAAIE,UAAUC,IAAI,cAElBH,IAAII,UAAYpB,UAAUqB,cAAcb,SAAU,QAElDQ,IAAIE,UAAUC,IAAI,sBAClBH,IAAIE,UAAUC,IAAI,0BAClB,IAAIG,kBAAoBN,IAAIO,cAAc,sBAC1CD,kBAAkBJ,UAAUC,IAAI,WAE5BN,gBACAS,kBAAkBE,MAAM,aAAe,MACvCF,kBAAkBE,MAAM,cAAgB,MACxCzB,aAAa0B,YAAYC,GAAGJ,mBAAmB,KAE/CA,kBAAkBE,MAAMG,SAAYC,KAAKC,IAA8B,IAAzBzB,QAAQ0B,QAAQC,OAAgB,IAAKlC,IAAImC,gBAAgBC,WAAa,IAAO,KAC3HjB,IAAIE,UAAUC,IAAI,6BAOlBf,QAAQD,MACRa,IAAIO,cAAc,0BAA0BH,UAAYhB,QAAQD,OAAS,GAEzEa,IAAIO,cAAc,0BAA0BL,UAAUC,IAAI,QAG9D,IAOIe,EACAH,OARAI,YAAc/B,QAAQgC,MAAQhC,QAAQF,MAAQ,GAClDc,IAAIO,cAAc,SAASH,UAAYe,YAElCA,aACDnB,IAAIO,cAAc,uBAAuBL,UAAUC,IAAI,QAK3D,IAmCIkB,aAnCAD,KAAO,GACPE,iBAAkB,EAEtB,IAAKJ,EAAI,EAAGH,OAAS3B,QAAQ0B,QAAQC,OAAQG,EAAIH,OAAQG,IAAK,CAE1D,IAAIK,KAAOnC,QAAQ0B,QAAQI,GACvBM,UAAkB,IAANN,EAAU,aAAe,GAErCO,YAAc,sEAEdF,KAAKG,OACLD,aAAe,WAAaF,KAAKG,MAGjCH,KAAKI,cACLL,iBAAkB,GAGlBA,kBACAG,aAAe,sEAGnBL,MAAQ,iDAAmDK,YAAc,cAAgBF,KAAKK,GAAK,IAAMJ,UAAY,IAAMD,KAAKM,KAAO,YAEnIN,KAAKI,cACLP,MAAQ,uJAAyJG,KAAKI,YAAc,UAW5L,SAASG,gBACLT,aAAeU,KAAKC,aAAa,WACjCpD,aAAaqD,MAAMjC,KATvBA,IAAIO,cAAc,qBAAqBH,UAAYgB,KAE/CE,iBACAtB,IAAIO,cAAc,qBAAqBL,UAAUC,IAAI,6BASzD,IAAIW,QAAUd,IAAIkC,iBAAiB,cACnC,IAAKhB,EAAI,EAAGH,OAASD,QAAQC,OAAQG,EAAIH,OAAQG,IAC7CJ,QAAQI,GAAGiB,iBAAiB,QAASL,eAGzC,OAAOlD,aAAawD,KAAKpC,KAAKqC,MAAK,WAM/B,OAJIxC,gBACAd,aAAa0B,YAAY6B,IAAItC,IAAIO,cAAc,uBAAuB,GAGtEc,cAGOhC,QAAQE,aAmBfE,CAAWL,QAASI,UAAU6C,KAAK/C,QAASC","file":"dialog.js","sourcesContent":["define(['dialogHelper', 'dom', 'layoutManager', 'scrollHelper', 'globalize', 'require', 'material-icons', 'emby-button', 'paper-icon-button-light', 'emby-input', 'formDialogStyle', 'flexStyles'], function (dialogHelper, dom, layoutManager, scrollHelper, globalize, require) {\n    'use strict';\n\n    function showDialog(options, template) {\n\n        var dialogOptions = {\n            removeOnClose: true,\n            scrollY: false\n        };\n\n        var enableTvLayout = layoutManager.tv;\n\n        if (enableTvLayout) {\n            dialogOptions.size = 'fullscreen';\n        }\n\n        var dlg = dialogHelper.createDialog(dialogOptions);\n\n        dlg.classList.add('formDialog');\n\n        dlg.innerHTML = globalize.translateHtml(template, 'core');\n\n        dlg.classList.add('align-items-center');\n        dlg.classList.add('justify-content-center');\n        var formDialogContent = dlg.querySelector('.formDialogContent');\n        formDialogContent.classList.add('no-grow');\n\n        if (enableTvLayout) {\n            formDialogContent.style['max-width'] = '50%';\n            formDialogContent.style['max-height'] = '60%';\n            scrollHelper.centerFocus.on(formDialogContent, false);\n        } else {\n            formDialogContent.style.maxWidth = (Math.min((options.buttons.length * 150) + 200, dom.getWindowSize().innerWidth - 50)) + 'px';\n            dlg.classList.add('dialog-fullscreen-lowres');\n        }\n\n        //dlg.querySelector('.btnCancel').addEventListener('click', function (e) {\n        //    dialogHelper.close(dlg);\n        //});\n\n        if (options.title) {\n            dlg.querySelector('.formDialogHeaderTitle').innerHTML = options.title || '';\n        } else {\n            dlg.querySelector('.formDialogHeaderTitle').classList.add('hide');\n        }\n\n        var displayText = options.html || options.text || '';\n        dlg.querySelector('.text').innerHTML = displayText;\n\n        if (!displayText) {\n            dlg.querySelector('.dialogContentInner').classList.add('hide');\n        }\n\n        var i;\n        var length;\n        var html = '';\n        var hasDescriptions = false;\n\n        for (i = 0, length = options.buttons.length; i < length; i++) {\n\n            var item = options.buttons[i];\n            var autoFocus = i === 0 ? ' autofocus' : '';\n\n            var buttonClass = 'btnOption raised formDialogFooterItem formDialogFooterItem-autosize';\n\n            if (item.type) {\n                buttonClass += ' button-' + item.type;\n            }\n\n            if (item.description) {\n                hasDescriptions = true;\n            }\n\n            if (hasDescriptions) {\n                buttonClass += ' formDialogFooterItem-vertical formDialogFooterItem-nomarginbottom';\n            }\n\n            html += '<button is=\"emby-button\" type=\"button\" class=\"' + buttonClass + '\" data-id=\"' + item.id + '\"' + autoFocus + '>' + item.name + '</button>';\n\n            if (item.description) {\n                html += '<div class=\"formDialogFooterItem formDialogFooterItem-autosize fieldDescription\" style=\"margin-top:.25em!important;margin-bottom:1.25em!important;\">' + item.description + '</div>';\n            }\n        }\n\n        dlg.querySelector('.formDialogFooter').innerHTML = html;\n\n        if (hasDescriptions) {\n            dlg.querySelector('.formDialogFooter').classList.add('formDialogFooter-vertical');\n        }\n\n        var dialogResult;\n        function onButtonClick() {\n            dialogResult = this.getAttribute('data-id');\n            dialogHelper.close(dlg);\n        }\n\n        var buttons = dlg.querySelectorAll('.btnOption');\n        for (i = 0, length = buttons.length; i < length; i++) {\n            buttons[i].addEventListener('click', onButtonClick);\n        }\n\n        return dialogHelper.open(dlg).then(function () {\n\n            if (enableTvLayout) {\n                scrollHelper.centerFocus.off(dlg.querySelector('.formDialogContent'), false);\n            }\n\n            if (dialogResult) {\n                return dialogResult;\n            } else {\n                return Promise.reject();\n            }\n        });\n    }\n\n    return function (text, title) {\n\n        var options;\n        if (typeof text === 'string') {\n            options = {\n                title: title,\n                text: text\n            };\n        } else {\n            options = text;\n        }\n\n        return new Promise(function (resolve, reject) {\n            require(['text!./dialog.template.html'], function (template) {\n                showDialog(options, template).then(resolve, reject);\n            });\n        });\n    };\n});\n"]}