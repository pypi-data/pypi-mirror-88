{"version":3,"sources":["components/layoutManager.js"],"names":["define","browser","appSettings","events","setLayout","instance","layout","selectedLayout","document","documentElement","classList","add","remove","LayoutManager","prototype","save","this","set","autoLayout","trigger","getSavedLayout","get","mobile","tv","xboxOne","ps4","defaultLayout","init","saved"],"mappings":"AAAA,aAAAA,OAAO,CAAC,UAAW,cAAe,WAAW,SAAUC,QAASC,YAAaC,QAGzE,SAASC,UAAUC,SAAUC,OAAQC,gBAC7BD,SAAWC,gBACXF,SAASC,SAAU,EACnBE,SAASC,gBAAgBC,UAAUC,IAAI,UAAYL,UAEnDD,SAASC,SAAU,EACnBE,SAASC,gBAAgBC,UAAUE,OAAO,UAAYN,SAI9D,SAASO,iBAkDT,OA9CAA,cAAcC,UAAUV,UAAY,SAAUE,OAAQS,MAE7CT,QAAqB,SAAXA,QAOXF,UAAUY,KAAM,SAAUV,QAC1BF,UAAUY,KAAM,KAAMV,QACtBF,UAAUY,KAAM,UAAWV,SAEd,IAATS,MACAb,YAAYe,IAAI,SAAUX,UAX9BU,KAAKE,cAEQ,IAATH,MACAb,YAAYe,IAAI,SAAU,KAYlCd,OAAOgB,QAAQH,KAAM,eAGzBH,cAAcC,UAAUM,eAAiB,SAAUd,QAC/C,OAAOJ,YAAYmB,IAAI,WAG3BR,cAAcC,UAAUI,WAAa,WAG7BjB,QAAQqB,OACRN,KAAKZ,UAAU,UAAU,GAClBH,QAAQsB,IAAMtB,QAAQuB,SAAWvB,QAAQwB,IAChDT,KAAKZ,UAAU,MAAM,GAErBY,KAAKZ,UAAUY,KAAKU,eAAiB,MAAM,IAInDb,cAAcC,UAAUa,KAAO,WAC3B,IAAIC,MAAQZ,KAAKI,iBACbQ,MACAZ,KAAKZ,UAAUwB,OAAO,GAEtBZ,KAAKE,cAIN,IAAIL","file":"layoutManager.js","sourcesContent":["define(['browser', 'appSettings', 'events'], function (browser, appSettings, events) {\n    'use strict';\n\n    function setLayout(instance, layout, selectedLayout) {\n        if (layout === selectedLayout) {\n            instance[layout] = true;\n            document.documentElement.classList.add('layout-' + layout);\n        } else {\n            instance[layout] = false;\n            document.documentElement.classList.remove('layout-' + layout);\n        }\n    }\n\n    function LayoutManager() {\n\n    }\n\n    LayoutManager.prototype.setLayout = function (layout, save) {\n\n        if (!layout || layout === 'auto') {\n            this.autoLayout();\n\n            if (save !== false) {\n                appSettings.set('layout', '');\n            }\n        } else {\n            setLayout(this, 'mobile', layout);\n            setLayout(this, 'tv', layout);\n            setLayout(this, 'desktop', layout);\n\n            if (save !== false) {\n                appSettings.set('layout', layout);\n            }\n        }\n\n        events.trigger(this, 'modechange');\n    };\n\n    LayoutManager.prototype.getSavedLayout = function (layout) {\n        return appSettings.get('layout');\n    };\n\n    LayoutManager.prototype.autoLayout = function () {\n\n        // Take a guess at initial layout. The consuming app can override\n        if (browser.mobile) {\n            this.setLayout('mobile', false);\n        } else if (browser.tv || browser.xboxOne || browser.ps4) {\n            this.setLayout('tv', false);\n        } else {\n            this.setLayout(this.defaultLayout || 'tv', false);\n        }\n    };\n\n    LayoutManager.prototype.init = function () {\n        var saved = this.getSavedLayout();\n        if (saved) {\n            this.setLayout(saved, false);\n        } else {\n            this.autoLayout();\n        }\n    };\n\n    return new LayoutManager();\n});\n"]}