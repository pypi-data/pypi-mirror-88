{"version":3,"sources":["components/channelMapper/channelMapper.js"],"names":["define","dom","dialogHelper","loading","connectionManager","globalize","actionsheet","options","onChannelsElementClick","e","btnMap","parentWithClass","target","channelId","getAttribute","providerChannelId","menuItems","currentMappingOptions","ProviderChannels","map","m","name","Name","id","Id","selected","toLowerCase","sort","a","b","localeCompare","show","positionTo","items","then","newChannelId","mapChannel","button","providerId","getApiClient","serverId","ajax","type","url","ApiClient","getUrl","data","tunerChannelId","dataType","mapping","listItem","setAttribute","ProviderChannelId","querySelector","innerHTML","getMappingSecondaryName","ProviderName","hide","providerName","ProviderChannelName","initEditor","dlg","getChannelMappingOptions","apiClient","getJSON","result","channelsElement","TunerChannels","channel","getTunerChannelHtml","html","join","addEventListener","this","dialogOptions","removeOnClose","createDialog","classList","add","translate","getEditorHtml","close","Promise","resolve","reject","open"],"mappings":"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","file":"channelMapper.js","sourcesContent":["define(['dom', 'dialogHelper', 'loading', 'connectionManager', 'globalize', 'actionsheet', 'emby-input', 'paper-icon-button-light', 'emby-button', 'listViewStyle', 'material-icons', 'formDialogStyle'], function (dom, dialogHelper, loading, connectionManager, globalize, actionsheet) {\n    'use strict';\n\n    return function (options) {\n        function mapChannel(button, channelId, providerChannelId) {\n            loading.show();\n            var providerId = options.providerId;\n            connectionManager.getApiClient(options.serverId).ajax({\n                type: 'POST',\n                url: ApiClient.getUrl('LiveTv/ChannelMappings'),\n                data: {\n                    providerId: providerId,\n                    tunerChannelId: channelId,\n                    providerChannelId: providerChannelId\n                },\n                dataType: 'json'\n            }).then(function (mapping) {\n                var listItem = dom.parentWithClass(button, 'listItem');\n                button.setAttribute('data-providerid', mapping.ProviderChannelId);\n                listItem.querySelector('.secondary').innerHTML = getMappingSecondaryName(mapping, currentMappingOptions.ProviderName);\n                loading.hide();\n            });\n        }\n\n        function onChannelsElementClick(e) {\n            var btnMap = dom.parentWithClass(e.target, 'btnMap');\n\n            if (btnMap) {\n                var channelId = btnMap.getAttribute('data-id');\n                var providerChannelId = btnMap.getAttribute('data-providerid');\n                var menuItems = currentMappingOptions.ProviderChannels.map(function (m) {\n                    return {\n                        name: m.Name,\n                        id: m.Id,\n                        selected: m.Id.toLowerCase() === providerChannelId.toLowerCase()\n                    };\n                }).sort(function (a, b) {\n                    return a.name.localeCompare(b.name);\n                });\n                actionsheet.show({\n                    positionTo: btnMap,\n                    items: menuItems\n                }).then(function (newChannelId) {\n                    mapChannel(btnMap, channelId, newChannelId);\n                });\n            }\n        }\n\n        function getChannelMappingOptions(serverId, providerId) {\n            var apiClient = connectionManager.getApiClient(serverId);\n            return apiClient.getJSON(apiClient.getUrl('LiveTv/ChannelMappingOptions', {\n                providerId: providerId\n            }));\n        }\n\n        function getMappingSecondaryName(mapping, providerName) {\n            return (mapping.ProviderChannelName || '') + ' - ' + providerName;\n        }\n\n        function getTunerChannelHtml(channel, providerName) {\n            var html = '';\n            html += '<div class=\"listItem\">';\n            html += '<span class=\"material-icons listItemIcon dvr\"></span>';\n            html += '<div class=\"listItemBody two-line\">';\n            html += '<h3 class=\"listItemBodyText\">';\n            html += channel.Name;\n            html += '</h3>';\n            html += '<div class=\"secondary listItemBodyText\">';\n\n            if (channel.ProviderChannelName) {\n                html += getMappingSecondaryName(channel, providerName);\n            }\n\n            html += '</div>';\n            html += '</div>';\n            html += '<button class=\"btnMap autoSize\" is=\"paper-icon-button-light\" type=\"button\" data-id=\"' + channel.Id + '\" data-providerid=\"' + channel.ProviderChannelId + '\"><span class=\"material-icons mode_edit\"></span></button>';\n            return html += '</div>';\n        }\n\n        function getEditorHtml() {\n            var html = '';\n            html += '<div class=\"formDialogContent smoothScrollY\">';\n            html += '<div class=\"dialogContentInner dialog-content-centered\">';\n            html += '<form style=\"margin:auto;\">';\n            html += '<h1>' + globalize.translate('HeaderChannels') + '</h1>';\n            html += '<div class=\"channels paperList\">';\n            html += '</div>';\n            html += '</form>';\n            html += '</div>';\n            return html += '</div>';\n        }\n\n        function initEditor(dlg, options) {\n            getChannelMappingOptions(options.serverId, options.providerId).then(function (result) {\n                currentMappingOptions = result;\n                var channelsElement = dlg.querySelector('.channels');\n                channelsElement.innerHTML = result.TunerChannels.map(function (channel) {\n                    return getTunerChannelHtml(channel, result.ProviderName);\n                }).join('');\n                channelsElement.addEventListener('click', onChannelsElementClick);\n            });\n        }\n\n        var currentMappingOptions;\n        var self = this;\n\n        self.show = function () {\n            var dialogOptions = {\n                removeOnClose: true\n            };\n            dialogOptions.size = 'small';\n            var dlg = dialogHelper.createDialog(dialogOptions);\n            dlg.classList.add('formDialog');\n            dlg.classList.add('ui-body-a');\n            dlg.classList.add('background-theme-a');\n            var html = '';\n            var title = globalize.translate('MapChannels');\n            html += '<div class=\"formDialogHeader\">';\n            html += '<button is=\"paper-icon-button-light\" class=\"btnCancel autoSize\" tabindex=\"-1\"><span class=\"material-icons arrow_back\"></span></button>';\n            html += '<h3 class=\"formDialogHeaderTitle\">';\n            html += title;\n            html += '</h3>';\n            html += '</div>';\n            html += getEditorHtml();\n            dlg.innerHTML = html;\n            initEditor(dlg, options);\n            dlg.querySelector('.btnCancel').addEventListener('click', function () {\n                dialogHelper.close(dlg);\n            });\n            return new Promise(function (resolve, reject) {\n                dlg.addEventListener('close', resolve);\n                dialogHelper.open(dlg);\n            });\n        };\n    };\n});\n"]}