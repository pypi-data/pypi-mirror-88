{"version":3,"sources":["components/playback/playbackorientation.js"],"names":["define","_playbackManager","_layoutManager","_events","_interopRequireDefault","obj","__esModule","default","orientationLocked","onOrientationChangeSuccess","onOrientationChangeError","err","console","error","events","on","playbackManager","e","player","state","isLocalPlayer","isExternalPlayer","isPlayingVideo","layoutManager","mobile","lockOrientation","screen","mozLockOrientation","msLockOrientation","orientation","lock","promise","then","playbackStopInfo","nextMediaType","unlockOrientation","mozUnlockOrientation","msUnlockOrientation","unlock"],"mappings":"AAAAA,OAAO,CAAC,kBAAmB,gBAAiB,WAAW,SAAUC,iBAAkBC,eAAgBC,SACjG,aAMA,SAASC,uBAAuBC,KAAO,OAAOA,KAAOA,IAAIC,WAAaD,IAAM,CAAEE,QAASF,KAHzF,IAAIG,kBAEJ,SAASC,6BACLD,mBAAoB,EAGxB,SAASE,yBAAyBC,KAC9BH,mBAAoB,EACpBI,QAAQC,MAAM,8BAAgCF,KAZlDV,iBAAAG,uBAAAH,kBACAC,eAAAE,uBAAAF,iBACAC,QAAAC,uBAAAD,UAaAW,QAAOC,GAAGC,iBAAAA,QAAiB,iBAAiB,SAAUC,EAAGC,OAAQC,OAI7D,GAFmBD,OAAOE,gBAAkBF,OAAOG,kBAAoBL,iBAAAA,QAAgBM,eAAeJ,SAElFK,eAAAA,QAAcC,OAAQ,CAEtC,IAAIC,gBAAkBC,OAAOD,iBAAmBC,OAAOC,oBAAsBD,OAAOE,mBAAsBF,OAAOG,aAAeH,OAAOG,YAAYC,KAEnJ,GAAIL,gBAEA,IACI,IAAIM,QAAUN,gBAAgB,aAC1BM,QAAQC,KACRD,QAAQC,KAAKvB,2BAA4BC,0BAGzCF,kBAAoBuB,QAE1B,MAAOpB,KACLD,yBAAyBC,UAMzCG,QAAAA,QAAOC,GAAGC,iBAAAA,QAAiB,gBAAgB,SAAUC,EAAGgB,kBAEpD,GAAIzB,oBAAsByB,iBAAiBC,cAAe,CAGtD,IAAIC,kBAAoBT,OAAOS,mBAAqBT,OAAOU,sBAAwBV,OAAOW,qBAAwBX,OAAOG,aAAeH,OAAOG,YAAYS,OAE3J,GAAIH,kBAAmB,CACnB,IACIA,oBACF,MAAOxB,KACLC,QAAQC,MAAM,gCAAkCF,KAEpDH,mBAAoB","file":"playbackorientation.js","sourcesContent":["import playbackManager from 'playbackManager';\nimport layoutManager from 'layoutManager';\nimport events from 'events';\n\nvar orientationLocked;\n\nfunction onOrientationChangeSuccess() {\n    orientationLocked = true;\n}\n\nfunction onOrientationChangeError(err) {\n    orientationLocked = false;\n    console.error('error locking orientation: ' + err);\n}\n\nevents.on(playbackManager, 'playbackstart', function (e, player, state) {\n\n    var isLocalVideo = player.isLocalPlayer && !player.isExternalPlayer && playbackManager.isPlayingVideo(player);\n\n    if (isLocalVideo && layoutManager.mobile) {\n        /* eslint-disable-next-line compat/compat */\n        var lockOrientation = screen.lockOrientation || screen.mozLockOrientation || screen.msLockOrientation || (screen.orientation && screen.orientation.lock);\n\n        if (lockOrientation) {\n\n            try {\n                var promise = lockOrientation('landscape');\n                if (promise.then) {\n                    promise.then(onOrientationChangeSuccess, onOrientationChangeError);\n                } else {\n                    // returns a boolean\n                    orientationLocked = promise;\n                }\n            } catch (err) {\n                onOrientationChangeError(err);\n            }\n        }\n    }\n});\n\nevents.on(playbackManager, 'playbackstop', function (e, playbackStopInfo) {\n\n    if (orientationLocked && !playbackStopInfo.nextMediaType) {\n\n        /* eslint-disable-next-line compat/compat */\n        var unlockOrientation = screen.unlockOrientation || screen.mozUnlockOrientation || screen.msUnlockOrientation || (screen.orientation && screen.orientation.unlock);\n\n        if (unlockOrientation) {\n            try {\n                unlockOrientation();\n            } catch (err) {\n                console.error('error unlocking orientation: ' + err);\n            }\n            orientationLocked = false;\n        }\n    }\n});\n"]}