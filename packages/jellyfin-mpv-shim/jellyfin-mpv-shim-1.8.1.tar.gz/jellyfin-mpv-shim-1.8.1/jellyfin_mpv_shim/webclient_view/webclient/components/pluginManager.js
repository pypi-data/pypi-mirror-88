"use strict";define(["events","globalize"],(function(events,globalize){var cacheParam=(new Date).getTime();function PluginManager(){this.pluginsList=[]}return PluginManager.prototype.loadPlugin=function(pluginSpec){var instance=this;function registerPlugin(plugin){return instance.register(plugin),plugin.getRoutes&&plugin.getRoutes().forEach((function(route){!function definePluginRoute(pluginManager,route,plugin){route.contentPath=pluginManager.mapPath(plugin,route.path),route.path=pluginManager.mapRoute(plugin,route),Emby.App.defineRoute(route,plugin.id)}(instance,route,plugin)})),"skin"===plugin.type?Promise.resolve(plugin):new Promise((function(resolve,reject){(function loadStrings(plugin){var strings=plugin.getTranslations?plugin.getTranslations():[];return globalize.loadStrings({name:plugin.id||plugin.packageName,strings:strings})})(plugin).then((function(){resolve(plugin)})).catch(reject)}))}if("string"==typeof pluginSpec)return console.debug("Loading plugin (via deprecated requirejs method): "+pluginSpec),new Promise((function(resolve,reject){require([pluginSpec],(function(pluginFactory){var plugin=pluginFactory.default?new pluginFactory.default:new pluginFactory;instance.pluginsList.filter((function(p){return p.id===plugin.id}))[0]&&resolve(pluginSpec),plugin.installUrl=pluginSpec;var separatorIndex=Math.max(pluginSpec.lastIndexOf("/"),pluginSpec.lastIndexOf("\\"));plugin.baseUrl=pluginSpec.substring(0,separatorIndex);var paths={};paths[plugin.id]=plugin.baseUrl,requirejs.config({waitSeconds:0,paths:paths}),registerPlugin(plugin).then(resolve).catch(reject)}))}));if(pluginSpec.then)return pluginSpec.then((function(pluginBuilder){return pluginBuilder()})).then((function(plugin){return console.debug("Plugin loaded: ".concat(plugin.id)),registerPlugin(plugin)}));var err=new Error("Plugins have to be a Promise that resolves to a plugin builder function or a requirejs urls (deprecated)");return console.error(err),Promise.reject(err)},PluginManager.prototype.register=function(obj){this.pluginsList.push(obj),events.trigger(this,"registered",[obj])},PluginManager.prototype.ofType=function(type){return this.pluginsList.filter((function(o){return o.type===type}))},PluginManager.prototype.plugins=function(){return this.pluginsList},PluginManager.prototype.mapRoute=function(plugin,route){return"string"==typeof plugin&&(plugin=this.pluginsList.filter((function(p){return(p.id||p.packageName)===plugin}))[0]),0===(route=route.path||route).toLowerCase().indexOf("http")?route:"/plugins/"+plugin.id+"/"+route},PluginManager.prototype.mapPath=function(plugin,path,addCacheParam){"string"==typeof plugin&&(plugin=this.pluginsList.filter((function(p){return(p.id||p.packageName)===plugin}))[0]);var url=plugin.baseUrl+"/"+path;return addCacheParam&&(url+=-1===url.indexOf("?")?"?":"&",url+="v="+cacheParam),url},new PluginManager}));
//# sourceMappingURL=pluginManager.js.map
