{"version":3,"sources":["components/accessSchedule/accessSchedule.js"],"names":["define","_exports","_dialogHelper","_datetime","_globalize","_embySelect","_paperIconButtonLight","_formDialogStyle","_interopRequireDefault","obj","__esModule","default","getDisplayTime","hours","minutes","pct","parseInt","datetime","Date","show","options","Promise","resolve","reject","require","template","dlg","dialogHelper","createDialog","removeOnClose","size","classList","add","html","globalize","translateDocument","innerHTML","populateHours","context","i","concat","querySelector","loadSchedule","_ref","DayOfWeek","StartHour","EndHour","value","schedule","open","addEventListener","submitted","close","event","submitSchedule","updatedSchedule","parseFloat","alert","translate","Object","assign","preventDefault","defineProperty","_default"],"mappings":"AAAAA,OAAO,CAAC,UAAW,eAAgB,WAAY,YAAa,cAAe,0BAA2B,oBAAoB,SAAUC,SAAUC,cAAeC,UAAWC,WAAYC,YAAaC,sBAAuBC,kBACtN,aAWA,SAASC,uBAAuBC,KAAO,OAAOA,KAAOA,IAAIC,WAAaD,IAAM,CAAEE,QAASF,KAErF,SAASG,eAAeC,OACpB,IAAIC,QAAU,EACRC,IAAMF,MAAQ,EAMpB,OAJIE,MACAD,QAAUE,SAAS,GAAKD,MAGrBE,UAAAA,QAASL,eAAe,IAAIM,KAAK,IAAM,EAAG,EAAGL,MAAOC,QAAS,EAAG,IAqCpE,SAASK,KAAKC,SACjB,OAAO,IAAIC,SAAQ,SAACC,QAASC,QAEzBC,QAAQ,CAAC,kEAAkE,SAAAC,UACvE,IAAMC,IAAMC,cAAAA,QAAaC,aAAa,CAClCC,eAAe,EACfC,KAAM,UAEVJ,IAAIK,UAAUC,IAAI,cAClB,IAAIC,KAAO,GACXA,MAAQC,WAAAA,QAAUC,kBAAkBV,UACpCC,IAAIU,UAAYH,KA7C5B,SAASI,cAAcC,SAGnB,IAFA,IAAIL,KAAO,GAEFM,EAAI,EAAGA,EAAI,GAAIA,IACpBN,MAAI,kBAAAO,OAAsBD,EAAtB,MAAAC,OAA4B5B,eAAe2B,GAA3C,aAGRN,MAAI,sBAAAO,OAA0B5B,eAAe,GAAzC,aACJ0B,QAAQG,cAAc,gBAAgBL,UAAYH,KAClDK,QAAQG,cAAc,cAAcL,UAAYH,KAqCxCI,CAAcX,KAlC1B,SAASgB,aAAaJ,QAAtBK,MAAgE,IAAhCC,UAAgCD,KAAhCC,UAAWC,UAAqBF,KAArBE,UAAWC,QAAUH,KAAVG,QAClDR,QAAQG,cAAc,cAAcM,MAAQH,WAAa,SACzDN,QAAQG,cAAc,gBAAgBM,MAAQF,WAAa,EAC3DP,QAAQG,cAAc,cAAcM,MAAQD,SAAW,EAgC/CJ,CAAahB,IAAKN,QAAQ4B,UAC1BrB,cAAAA,QAAasB,KAAKvB,KAClBA,IAAIwB,iBAAiB,SAAS,WACtBxB,IAAIyB,UACJ7B,QAAQF,QAAQ4B,UAEhBzB,YAGRG,IAAIe,cAAc,cAAcS,iBAAiB,SAAS,WACtDvB,cAAAA,QAAayB,MAAM1B,QAEvBA,IAAIe,cAAc,QAAQS,iBAAiB,UAAU,SAAAG,OAGjD,OA5ChB,SAASC,eAAehB,QAASlB,SAC7B,IAAMmC,gBAAkB,CACpBX,UAAWN,QAAQG,cAAc,cAAcM,MAC/CF,UAAWP,QAAQG,cAAc,gBAAgBM,MACjDD,QAASR,QAAQG,cAAc,cAAcM,OAG7CS,WAAWD,gBAAgBV,YAAcW,WAAWD,gBAAgBT,SACxDW,MAAMvB,WAAAA,QAAUwB,UAAU,yCAG1CpB,QAAQa,WAAY,EACpB/B,QAAQ4B,SAAWW,OAAOC,OAAOxC,QAAQ4B,SAAUO,iBACnD5B,cAAAA,QAAayB,MAAMd,UA6BPgB,CAAe5B,IAAKN,SACpBiC,MAAMQ,kBACC,WApFzBF,OAAOG,eAAe7D,SAAU,aAAc,CAC5C8C,OAAO,IAET9C,SAASkB,KAAOA,KAChBlB,SAASU,aAAU,EAArBT,cAAAM,uBAAAN,eACAC,UAAAK,uBAAAL,WACAC,WAAAI,uBAAAJ,YAmGE,IAAI2D,SAbS,CACX5C,KAAMA,MAeRlB,SAASU,QAAUoD","file":"accessSchedule.js","sourcesContent":["/* eslint-disable indent */\n\n/**\n * Module for controlling user parental control from.\n * @module components/accessSchedule/accessSchedule\n */\n\nimport dialogHelper from 'dialogHelper';\nimport datetime from 'datetime';\nimport globalize from 'globalize';\nimport 'emby-select';\nimport 'paper-icon-button-light';\nimport 'formDialogStyle';\n\n    function getDisplayTime(hours) {\n        let minutes = 0;\n        const pct = hours % 1;\n\n        if (pct) {\n            minutes = parseInt(60 * pct);\n        }\n\n        return datetime.getDisplayTime(new Date(2000, 1, 1, hours, minutes, 0, 0));\n    }\n\n    function populateHours(context) {\n        let html = '';\n\n        for (let i = 0; i < 24; i++) {\n            html += `<option value=\"${i}\">${getDisplayTime(i)}</option>`;\n        }\n\n        html += `<option value=\"24\">${getDisplayTime(0)}</option>`;\n        context.querySelector('#selectStart').innerHTML = html;\n        context.querySelector('#selectEnd').innerHTML = html;\n    }\n\n    function loadSchedule(context, {DayOfWeek, StartHour, EndHour}) {\n        context.querySelector('#selectDay').value = DayOfWeek || 'Sunday';\n        context.querySelector('#selectStart').value = StartHour || 0;\n        context.querySelector('#selectEnd').value = EndHour || 0;\n    }\n\n    function submitSchedule(context, options) {\n        const updatedSchedule = {\n            DayOfWeek: context.querySelector('#selectDay').value,\n            StartHour: context.querySelector('#selectStart').value,\n            EndHour: context.querySelector('#selectEnd').value\n        };\n\n        if (parseFloat(updatedSchedule.StartHour) >= parseFloat(updatedSchedule.EndHour)) {\n            return void alert(globalize.translate('ErrorMessageStartHourGreaterThanEnd'));\n        }\n\n        context.submitted = true;\n        options.schedule = Object.assign(options.schedule, updatedSchedule);\n        dialogHelper.close(context);\n    }\n\n    export function show(options) {\n        return new Promise((resolve, reject) => {\n            // TODO: remove require\n            require(['text!./components/accessSchedule/accessSchedule.template.html'], template => {\n                const dlg = dialogHelper.createDialog({\n                    removeOnClose: true,\n                    size: 'small'\n                });\n                dlg.classList.add('formDialog');\n                let html = '';\n                html += globalize.translateDocument(template);\n                dlg.innerHTML = html;\n                populateHours(dlg);\n                loadSchedule(dlg, options.schedule);\n                dialogHelper.open(dlg);\n                dlg.addEventListener('close', () => {\n                    if (dlg.submitted) {\n                        resolve(options.schedule);\n                    } else {\n                        reject();\n                    }\n                });\n                dlg.querySelector('.btnCancel').addEventListener('click', () => {\n                    dialogHelper.close(dlg);\n                });\n                dlg.querySelector('form').addEventListener('submit', event => {\n                    submitSchedule(dlg, options);\n                    event.preventDefault();\n                    return false;\n                });\n            });\n        });\n    }\n\n/* eslint-enable indent */\n\nexport default {\n    show: show\n};\n"]}