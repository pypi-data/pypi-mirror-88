{"version":3,"sources":["components/alphaPicker/alphaPicker.js"],"names":["define","focusManager","layoutManager","dom","selectedButtonClass","focus","selected","this","querySelector","autoFocus","getAlphaPickerButtonClassName","vertical","alphaPickerButtonClassName","tv","mapLetters","letters","map","l","getLetterButton","AlphaPicker","options","self","itemFocusValue","itemFocusTimeout","alphaFocusedElement","alphaFocusTimeout","element","itemsContainer","itemClass","onItemFocusTimeout","value","onAlphaFocusTimeout","document","activeElement","getAttribute","onAlphaPickerInKeyboardModeClick","e","alphaPickerButton","parentWithClass","target","dispatchEvent","CustomEvent","cancelable","detail","onAlphaPickerClick","_currentValue","toUpperCase","onAlphaPickerFocusIn","clearTimeout","setTimeout","onItemsFocusIn","item","prefix","length","enabled","addEventListener","mode","valueChangeEvent","bind","removeEventListener","render","classList","add","contains","html","rowClassName","join","innerHTML","visible","prototype","applyValue","btn","undefined","err","console","error","remove","on","name","fn","off","style","visibility","values","elems","querySelectorAll","i","push","destroy"],"mappings":"AAAA,aAAAA,OAAO,CAAC,eAAgB,gBAAiB,MAAO,kBAAmB,0BAA2B,mBAAmB,SAAUC,aAAcC,cAAeC,KAGpJ,IAAIC,oBAAsB,6BAE1B,SAASC,QACL,IACIC,SADQC,KACSC,cAAc,IAAMJ,qBAErCE,SACAL,aAAaI,MAAMC,UAEnBL,aAAaQ,UANLF,MAMsB,GAItC,SAASG,8BAA8BC,UAEnC,IAAIC,2BAA6B,oBAUjC,OARIV,cAAcW,KACdD,4BAA8B,yBAG9BD,WACAC,4BAA8B,+BAG3BA,2BAOX,SAASE,WAAWC,QAASJ,UAEzB,OAAOI,QAAQC,KAAI,SAAUC,GACzB,OAPR,SAASC,gBAAgBD,EAAGN,UACxB,MAAO,uBAAyBM,EAAI,YAAcP,8BAA8BC,UAAY,KAAOM,EAAI,YAM5FC,CAAgBD,EAAGN,aA2DlC,SAASQ,YAAYC,SAEjB,IAAIC,KAAOd,KACXA,KAAKa,QAAUA,QAEf,IAIIE,eACAC,iBAOAC,oBACAC,kBAbAC,QAAUN,QAAQM,QAClBC,eAAiBP,QAAQO,eACzBC,UAAYR,QAAQQ,UAKxB,SAASC,qBACLN,iBAAmB,KACnBF,KAAKS,MAAMR,gBAMf,SAASS,sBAIL,GAFAN,kBAAoB,KAEhBO,SAASC,gBAAkBT,oBAAqB,CAChD,IAAIM,MAAQN,oBAAoBU,aAAa,cAC7Cb,KAAKS,MAAMA,OAAO,IAI1B,SAASK,iCAAiCC,GAEtC,IAAIC,kBAAoBlC,IAAImC,gBAAgBF,EAAEG,OAAQ,qBAEtD,GAAIF,kBAAmB,CACnB,IAAIP,MAAQO,kBAAkBH,aAAa,cAE3CR,QAAQc,cAAc,IAAIC,YAAY,oBAAqB,CACvDC,YAAY,EACZC,OAAQ,CACJb,MAAOA,WAMvB,SAASc,mBAAmBR,GAExB,IAAIC,kBAAoBlC,IAAImC,gBAAgBF,EAAEG,OAAQ,qBAEtD,GAAIF,kBAAmB,CACnB,IAAIP,MAAQO,kBAAkBH,aAAa,eACtC3B,KAAKsC,eAAiB,IAAIC,gBAAkBhB,MAAMgB,cACnDzB,KAAKS,MAAM,MAAM,GAEjBT,KAAKS,MAAMA,OAAO,IAK9B,SAASiB,qBAAqBX,GAEtBX,oBACAuB,aAAavB,mBACbA,kBAAoB,MAGxB,IAAIY,kBAAoBlC,IAAImC,gBAAgBF,EAAEG,OAAQ,qBAElDF,oBACAb,oBAAsBa,kBACtBZ,kBAAoBwB,WAAWlB,oBAAqB,MAI5D,SAASmB,eAAed,GAEpB,IAAIe,KAAOhD,IAAImC,gBAAgBF,EAAEG,OAAQX,WAEzC,GAAIuB,KAAM,CACN,IAAIC,OAASD,KAAKjB,aAAa,eAC3BkB,QAAUA,OAAOC,SAEjB/B,eAAiB8B,OAAO,GACpB7B,kBACAyB,aAAazB,kBAEjBA,iBAAmB0B,WAAWpB,mBAAoB,OAK9DR,KAAKiC,QAAU,SAAUA,SAEjBA,SAEI3B,gBACAA,eAAe4B,iBAAiB,QAASL,gBAAgB,GAGxC,aAAjB9B,QAAQoC,MACR9B,QAAQ6B,iBAAiB,QAASpB,kCAGL,UAA7Bf,QAAQqC,iBACR/B,QAAQ6B,iBAAiB,QAASR,sBAAsB,GAExDrB,QAAQ6B,iBAAiB,QAASX,mBAAmBc,KAAKnD,SAK1DoB,gBACAA,eAAegC,oBAAoB,QAAST,gBAAgB,GAGhExB,QAAQiC,oBAAoB,QAASxB,kCACrCT,QAAQiC,oBAAoB,QAASZ,sBAAsB,GAC3DrB,QAAQiC,oBAAoB,QAASf,mBAAmBc,KAAKnD,SA7KzE,SAASqD,OAAOlC,QAASN,SAErBM,QAAQmC,UAAUC,IAAI,eAElB5D,cAAcW,IACda,QAAQmC,UAAUC,IAAI,kBAG1B,IAAInD,SAAWe,QAAQmC,UAAUE,SAAS,wBAErCpD,UACDe,QAAQmC,UAAUC,IAAI,oBAG1B,IAAIE,KAAO,GAGPpD,2BAA6BF,8BAA8BC,UAE3DsD,aAAe,iBAEftD,WACAsD,cAAgB,4BAGpBD,MAAQ,eAAiBC,aAAe,KACnB,aAAjB7C,QAAQoC,KACRQ,MAAQ,8DAAgEpD,2BAA6B,kFAGrGoD,MAAQlD,WADE,CAAC,KACiBH,UAAUuD,KAAK,IAI/CF,MAAQlD,WADE,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5GH,UAAUuD,KAAK,IAEtB,aAAjB9C,QAAQoC,MACRQ,MAAQ,sEAAwEpD,2BAA6B,kFAC7GoD,MAAQ,SAGRA,MAAQ,eAAiBC,aAAe,KACxCD,MAAQ,QACRA,MAAQlD,WAHE,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAG5BH,UAAUuD,KAAK,IAC3CF,MAAQ,UAERA,MAAQ,SAGZtC,QAAQyC,UAAYH,KAEpBtC,QAAQmC,UAAUC,IAAI,aACtBpC,QAAQrB,MAAQA,MA6HhBuD,CAAOlC,QAASN,SAEhBb,KAAK+C,SAAQ,GACb/C,KAAK6D,SAAQ,GAiGjB,OA9FAjD,YAAYkD,UAAUvC,MAAQ,SAAUA,MAAOwC,YAE3C,IACIC,IACAjE,SAFAoB,QAAUnB,KAAKa,QAAQM,QAI3B,QAAc8C,IAAV1C,MACA,GAAa,MAATA,OAKA,GAHAA,MAAQA,MAAMgB,cACdvC,KAAKsC,cAAgBf,MAEK,aAAtBvB,KAAKa,QAAQoC,KAAqB,CAClClD,SAAWoB,QAAQlB,cAAc,IAAMJ,qBAEvC,IACImE,IAAM7C,QAAQlB,cAAc,kCAAqCsB,MAAQ,MAC3E,MAAO2C,KACLC,QAAQC,MAAM,2BAA6BF,KAG3CF,KAAOA,MAAQjE,UACfiE,IAAIV,UAAUC,IAAI1D,qBAElBE,UAAYA,WAAaiE,KACzBjE,SAASuD,UAAUe,OAAOxE,2BAIlCG,KAAKsC,cAAgBf,OAErBxB,SAAWoB,QAAQlB,cAAc,IAAMJ,uBAEnCE,SAASuD,UAAUe,OAAOxE,qBActC,OATIkE,YACA5C,QAAQc,cAAc,IAAIC,YAAY,oBAAqB,CACvDC,YAAY,EACZC,OAAQ,CACJb,MAAOA,UAKZvB,KAAKsC,eAGhB1B,YAAYkD,UAAUQ,GAAK,SAAUC,KAAMC,IACzBxE,KAAKa,QAAQM,QACnB6B,iBAAiBuB,KAAMC,KAGnC5D,YAAYkD,UAAUW,IAAM,SAAUF,KAAMC,IAC1BxE,KAAKa,QAAQM,QACnBiC,oBAAoBmB,KAAMC,KAGtC5D,YAAYkD,UAAUD,QAAU,SAAUA,SAExB7D,KAAKa,QAAQM,QACnBuD,MAAMC,WAAad,QAAU,UAAY,UAGrDjD,YAAYkD,UAAUc,OAAS,WAK3B,IAHA,IACIC,MADU7E,KAAKa,QAAQM,QACP2D,iBAAiB,sBACjCF,OAAS,GACJG,EAAI,EAAGjC,OAAS+B,MAAM/B,OAAQiC,EAAIjC,OAAQiC,IAE/CH,OAAOI,KAAKH,MAAME,GAAGpD,aAAa,eAItC,OAAOiD,QAGXhE,YAAYkD,UAAUhE,MAAQ,WAE1B,IAAIqB,QAAUnB,KAAKa,QAAQM,QAC3BzB,aAAaQ,UAAUiB,SAAS,IAGpCP,YAAYkD,UAAUmB,QAAU,WAE5B,IAAI9D,QAAUnB,KAAKa,QAAQM,QAC3BnB,KAAK+C,SAAQ,GACb5B,QAAQmC,UAAUe,OAAO,oBACzBrE,KAAKa,QAAU,MAGZD","file":"alphaPicker.js","sourcesContent":["define(['focusManager', 'layoutManager', 'dom', 'css!./style.css', 'paper-icon-button-light', 'material-icons'], function (focusManager, layoutManager, dom) {\n    'use strict';\n\n    var selectedButtonClass = 'alphaPickerButton-selected';\n\n    function focus() {\n        var scope = this;\n        var selected = scope.querySelector('.' + selectedButtonClass);\n\n        if (selected) {\n            focusManager.focus(selected);\n        } else {\n            focusManager.autoFocus(scope, true);\n        }\n    }\n\n    function getAlphaPickerButtonClassName(vertical) {\n\n        var alphaPickerButtonClassName = 'alphaPickerButton';\n\n        if (layoutManager.tv) {\n            alphaPickerButtonClassName += ' alphaPickerButton-tv';\n        }\n\n        if (vertical) {\n            alphaPickerButtonClassName += ' alphaPickerButton-vertical';\n        }\n\n        return alphaPickerButtonClassName;\n    }\n\n    function getLetterButton(l, vertical) {\n        return '<button data-value=\"' + l + '\" class=\"' + getAlphaPickerButtonClassName(vertical) + '\">' + l + '</button>';\n    }\n\n    function mapLetters(letters, vertical) {\n\n        return letters.map(function (l) {\n            return getLetterButton(l, vertical);\n        });\n    }\n\n    function render(element, options) {\n\n        element.classList.add('alphaPicker');\n\n        if (layoutManager.tv) {\n            element.classList.add('alphaPicker-tv');\n        }\n\n        var vertical = element.classList.contains('alphaPicker-vertical');\n\n        if (!vertical) {\n            element.classList.add('focuscontainer-x');\n        }\n\n        var html = '';\n        var letters;\n\n        var alphaPickerButtonClassName = getAlphaPickerButtonClassName(vertical);\n\n        var rowClassName = 'alphaPickerRow';\n\n        if (vertical) {\n            rowClassName += ' alphaPickerRow-vertical';\n        }\n\n        html += '<div class=\"' + rowClassName + '\">';\n        if (options.mode === 'keyboard') {\n            html += '<button data-value=\" \" is=\"paper-icon-button-light\" class=\"' + alphaPickerButtonClassName + '\"><span class=\"material-icons alphaPickerButtonIcon space_bar\"></span></button>';\n        } else {\n            letters = ['#'];\n            html += mapLetters(letters, vertical).join('');\n        }\n\n        letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n        html += mapLetters(letters, vertical).join('');\n\n        if (options.mode === 'keyboard') {\n            html += '<button data-value=\"backspace\" is=\"paper-icon-button-light\" class=\"' + alphaPickerButtonClassName + '\"><span class=\"material-icons alphaPickerButtonIcon backspace\"></span></button>';\n            html += '</div>';\n\n            letters = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n            html += '<div class=\"' + rowClassName + '\">';\n            html += '<br/>';\n            html += mapLetters(letters, vertical).join('');\n            html += '</div>';\n        } else {\n            html += '</div>';\n        }\n\n        element.innerHTML = html;\n\n        element.classList.add('focusable');\n        element.focus = focus;\n    }\n\n    function AlphaPicker(options) {\n\n        var self = this;\n        this.options = options;\n\n        var element = options.element;\n        var itemsContainer = options.itemsContainer;\n        var itemClass = options.itemClass;\n\n        var itemFocusValue;\n        var itemFocusTimeout;\n\n        function onItemFocusTimeout() {\n            itemFocusTimeout = null;\n            self.value(itemFocusValue);\n        }\n\n        var alphaFocusedElement;\n        var alphaFocusTimeout;\n\n        function onAlphaFocusTimeout() {\n\n            alphaFocusTimeout = null;\n\n            if (document.activeElement === alphaFocusedElement) {\n                var value = alphaFocusedElement.getAttribute('data-value');\n                self.value(value, true);\n            }\n        }\n\n        function onAlphaPickerInKeyboardModeClick(e) {\n\n            var alphaPickerButton = dom.parentWithClass(e.target, 'alphaPickerButton');\n\n            if (alphaPickerButton) {\n                var value = alphaPickerButton.getAttribute('data-value');\n\n                element.dispatchEvent(new CustomEvent('alphavalueclicked', {\n                    cancelable: false,\n                    detail: {\n                        value: value\n                    }\n                }));\n            }\n        }\n\n        function onAlphaPickerClick(e) {\n\n            var alphaPickerButton = dom.parentWithClass(e.target, 'alphaPickerButton');\n\n            if (alphaPickerButton) {\n                var value = alphaPickerButton.getAttribute('data-value');\n                if ((this._currentValue || '').toUpperCase() === value.toUpperCase()) {\n                    self.value(null, true);\n                } else {\n                    self.value(value, true);\n                }\n            }\n        }\n\n        function onAlphaPickerFocusIn(e) {\n\n            if (alphaFocusTimeout) {\n                clearTimeout(alphaFocusTimeout);\n                alphaFocusTimeout = null;\n            }\n\n            var alphaPickerButton = dom.parentWithClass(e.target, 'alphaPickerButton');\n\n            if (alphaPickerButton) {\n                alphaFocusedElement = alphaPickerButton;\n                alphaFocusTimeout = setTimeout(onAlphaFocusTimeout, 600);\n            }\n        }\n\n        function onItemsFocusIn(e) {\n\n            var item = dom.parentWithClass(e.target, itemClass);\n\n            if (item) {\n                var prefix = item.getAttribute('data-prefix');\n                if (prefix && prefix.length) {\n\n                    itemFocusValue = prefix[0];\n                    if (itemFocusTimeout) {\n                        clearTimeout(itemFocusTimeout);\n                    }\n                    itemFocusTimeout = setTimeout(onItemFocusTimeout, 100);\n                }\n            }\n        }\n\n        self.enabled = function (enabled) {\n\n            if (enabled) {\n\n                if (itemsContainer) {\n                    itemsContainer.addEventListener('focus', onItemsFocusIn, true);\n                }\n\n                if (options.mode === 'keyboard') {\n                    element.addEventListener('click', onAlphaPickerInKeyboardModeClick);\n                }\n\n                if (options.valueChangeEvent !== 'click') {\n                    element.addEventListener('focus', onAlphaPickerFocusIn, true);\n                } else {\n                    element.addEventListener('click', onAlphaPickerClick.bind(this));\n                }\n\n            } else {\n\n                if (itemsContainer) {\n                    itemsContainer.removeEventListener('focus', onItemsFocusIn, true);\n                }\n\n                element.removeEventListener('click', onAlphaPickerInKeyboardModeClick);\n                element.removeEventListener('focus', onAlphaPickerFocusIn, true);\n                element.removeEventListener('click', onAlphaPickerClick.bind(this));\n            }\n        };\n\n        render(element, options);\n\n        this.enabled(true);\n        this.visible(true);\n    }\n\n    AlphaPicker.prototype.value = function (value, applyValue) {\n\n        var element = this.options.element;\n        var btn;\n        var selected;\n\n        if (value !== undefined) {\n            if (value != null) {\n\n                value = value.toUpperCase();\n                this._currentValue = value;\n\n                if (this.options.mode !== 'keyboard') {\n                    selected = element.querySelector('.' + selectedButtonClass);\n\n                    try {\n                        btn = element.querySelector('.alphaPickerButton[data-value=\\'' + value + '\\']');\n                    } catch (err) {\n                        console.error('error in querySelector: ' + err);\n                    }\n\n                    if (btn && btn !== selected) {\n                        btn.classList.add(selectedButtonClass);\n                    }\n                    if (selected && selected !== btn) {\n                        selected.classList.remove(selectedButtonClass);\n                    }\n                }\n            } else {\n                this._currentValue = value;\n\n                selected = element.querySelector('.' + selectedButtonClass);\n                if (selected) {\n                    selected.classList.remove(selectedButtonClass);\n                }\n            }\n        }\n\n        if (applyValue) {\n            element.dispatchEvent(new CustomEvent('alphavaluechanged', {\n                cancelable: false,\n                detail: {\n                    value: value\n                }\n            }));\n        }\n\n        return this._currentValue;\n    };\n\n    AlphaPicker.prototype.on = function (name, fn) {\n        var element = this.options.element;\n        element.addEventListener(name, fn);\n    };\n\n    AlphaPicker.prototype.off = function (name, fn) {\n        var element = this.options.element;\n        element.removeEventListener(name, fn);\n    };\n\n    AlphaPicker.prototype.visible = function (visible) {\n\n        var element = this.options.element;\n        element.style.visibility = visible ? 'visible' : 'hidden';\n    };\n\n    AlphaPicker.prototype.values = function () {\n\n        var element = this.options.element;\n        var elems = element.querySelectorAll('.alphaPickerButton');\n        var values = [];\n        for (var i = 0, length = elems.length; i < length; i++) {\n\n            values.push(elems[i].getAttribute('data-value'));\n\n        }\n\n        return values;\n    };\n\n    AlphaPicker.prototype.focus = function () {\n\n        var element = this.options.element;\n        focusManager.autoFocus(element, true);\n    };\n\n    AlphaPicker.prototype.destroy = function () {\n\n        var element = this.options.element;\n        this.enabled(false);\n        element.classList.remove('focuscontainer-x');\n        this.options = null;\n    };\n\n    return AlphaPicker;\n});\n"]}