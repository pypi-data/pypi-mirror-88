{"version":3,"sources":["components/playback/playersettingsmenu.js"],"names":["define","_exports","_connectionManager","_actionsheet","_playbackManager","_globalize","_qualityoptions","_interopRequireDefault","obj","__esModule","default","showWithUser","options","player","user","supportedCommands","playbackManager","getSupportedCommands","menuItems","mediaType","indexOf","currentAspectRatioId","getAspectRatio","currentAspectRatio","getSupportedAspectRatios","filter","i","id","push","name","globalize","translate","asideText","Policy","EnableVideoPlaybackTranscoding","secondaryQualityText","getQualitySecondaryText","state","getPlayerState","videoStream","enableAutomaticBitrateDetection","getMaxStreamingBitrate","currentMediaSource","MediaStreams","stream","Type","videoWidth","Width","videoHeight","Height","qualityoptions","getVideoQualityOptions","currentMaxBitrate","isAutomaticBitrateEnabled","enableAuto","selectedOption","map","o","opt","bitrate","secondaryText","selected","length","text","autoText","PlayState","PlayMethod","repeatMode","getRepeatMode","RunTimeTicks","suboffset","stats","actionsheet","show","items","positionTo","then","handleSelectedOption","showQualityMenu","btn","selectedId","parseInt","setMaxStreamingBitrate","maxBitrate","showAspectRatioMenu","currentId","setAspectRatio","Promise","resolve","reject","showRepeatModeMenu","currentValue","mode","setRepeatMode","onOption","currentItem","ServerId","connectionManager","getApiClient","getCurrentUser","Object","defineProperty","value","_default"],"mappings":"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","file":"playersettingsmenu.js","sourcesContent":["import connectionManager from 'connectionManager';\nimport actionsheet from 'actionsheet';\nimport playbackManager from 'playbackManager';\nimport globalize from 'globalize';\nimport qualityoptions from 'qualityoptions';\n\nfunction showQualityMenu(player, btn) {\n\n    var videoStream = playbackManager.currentMediaSource(player).MediaStreams.filter(function (stream) {\n        return stream.Type === 'Video';\n    })[0];\n    var videoWidth = videoStream ? videoStream.Width : null;\n    var videoHeight = videoStream ? videoStream.Height : null;\n\n    var options = qualityoptions.getVideoQualityOptions({\n        currentMaxBitrate: playbackManager.getMaxStreamingBitrate(player),\n        isAutomaticBitrateEnabled: playbackManager.enableAutomaticBitrateDetection(player),\n        videoWidth: videoWidth,\n        videoHeight: videoHeight,\n        enableAuto: true\n    });\n\n    var menuItems = options.map(function (o) {\n        var opt = {\n            name: o.name,\n            id: o.bitrate,\n            asideText: o.secondaryText\n        };\n\n        if (o.selected) {\n            opt.selected = true;\n        }\n\n        return opt;\n    });\n\n    var selectedId = options.filter(function (o) {\n        return o.selected;\n    });\n\n    selectedId = selectedId.length ? selectedId[0].bitrate : null;\n\n    return actionsheet.show({\n        items: menuItems,\n        positionTo: btn\n    }).then(function (id) {\n        var bitrate = parseInt(id);\n        if (bitrate !== selectedId) {\n            playbackManager.setMaxStreamingBitrate({\n                enableAutomaticBitrateDetection: bitrate ? false : true,\n                maxBitrate: bitrate\n            }, player);\n        }\n    });\n}\n\nfunction showRepeatModeMenu(player, btn) {\n    var menuItems = [];\n    var currentValue = playbackManager.getRepeatMode(player);\n\n    menuItems.push({\n        name: globalize.translate('RepeatAll'),\n        id: 'RepeatAll',\n        selected: currentValue === 'RepeatAll'\n    });\n\n    menuItems.push({\n        name: globalize.translate('RepeatOne'),\n        id: 'RepeatOne',\n        selected: currentValue === 'RepeatOne'\n    });\n\n    menuItems.push({\n        name: globalize.translate('None'),\n        id: 'RepeatNone',\n        selected: currentValue === 'RepeatNone'\n    });\n\n    return actionsheet.show({\n        items: menuItems,\n        positionTo: btn\n    }).then(function (mode) {\n        if (mode) {\n            playbackManager.setRepeatMode(mode, player);\n        }\n    });\n}\n\nfunction getQualitySecondaryText(player) {\n    var state = playbackManager.getPlayerState(player);\n    var isAutoEnabled = playbackManager.enableAutomaticBitrateDetection(player);\n    var currentMaxBitrate = playbackManager.getMaxStreamingBitrate(player);\n\n    var videoStream = playbackManager.currentMediaSource(player).MediaStreams.filter(function (stream) {\n        return stream.Type === 'Video';\n    })[0];\n\n    var videoWidth = videoStream ? videoStream.Width : null;\n    var videoHeight = videoStream ? videoStream.Height : null;\n\n    var options = qualityoptions.getVideoQualityOptions({\n        currentMaxBitrate: playbackManager.getMaxStreamingBitrate(player),\n        isAutomaticBitrateEnabled: playbackManager.enableAutomaticBitrateDetection(player),\n        videoWidth: videoWidth,\n        videoHeight: videoHeight,\n        enableAuto: true\n    });\n\n    var menuItems = options.map(function (o) {\n        var opt = {\n            name: o.name,\n            id: o.bitrate,\n            asideText: o.secondaryText\n        };\n\n        if (o.selected) {\n            opt.selected = true;\n        }\n\n        return opt;\n    });\n\n    var selectedOption = options.filter(function (o) {\n        return o.selected;\n    });\n\n    if (!selectedOption.length) {\n        return null;\n    }\n\n    selectedOption = selectedOption[0];\n    var text = selectedOption.name;\n\n    if (selectedOption.autoText) {\n        if (state.PlayState && state.PlayState.PlayMethod !== 'Transcode') {\n            text += ' - Direct';\n        } else {\n            text += ' ' + selectedOption.autoText;\n        }\n    }\n\n    return text;\n}\n\nfunction showAspectRatioMenu(player, btn) {\n    // each has a name and id\n    var currentId = playbackManager.getAspectRatio(player);\n    var menuItems = playbackManager.getSupportedAspectRatios(player).map(function (i) {\n        return {\n            id: i.id,\n            name: i.name,\n            selected: i.id === currentId\n        };\n    });\n\n    return actionsheet.show({\n        items: menuItems,\n        positionTo: btn\n    }).then(function (id) {\n        if (id) {\n            playbackManager.setAspectRatio(id, player);\n            return Promise.resolve();\n        }\n\n        return Promise.reject();\n    });\n}\n\nfunction showWithUser(options, player, user) {\n    var supportedCommands = playbackManager.getSupportedCommands(player);\n    var mediaType = options.mediaType;\n\n    var menuItems = [];\n    if (supportedCommands.indexOf('SetAspectRatio') !== -1) {\n        var currentAspectRatioId = playbackManager.getAspectRatio(player);\n        var currentAspectRatio = playbackManager.getSupportedAspectRatios(player).filter(function (i) {\n            return i.id === currentAspectRatioId;\n        })[0];\n\n        menuItems.push({\n            name: globalize.translate('AspectRatio'),\n            id: 'aspectratio',\n            asideText: currentAspectRatio ? currentAspectRatio.name : null\n        });\n    }\n\n    if (user && user.Policy.EnableVideoPlaybackTranscoding) {\n        var secondaryQualityText = getQualitySecondaryText(player);\n\n        menuItems.push({\n            name: globalize.translate('Quality'),\n            id: 'quality',\n            asideText: secondaryQualityText\n        });\n    }\n\n    var repeatMode = playbackManager.getRepeatMode(player);\n\n    if (supportedCommands.indexOf('SetRepeatMode') !== -1 && playbackManager.currentMediaSource(player).RunTimeTicks) {\n        menuItems.push({\n            name: globalize.translate('RepeatMode'),\n            id: 'repeatmode',\n            asideText: repeatMode === 'RepeatNone' ? globalize.translate('None') : globalize.translate('' + repeatMode)\n        });\n    }\n\n    if (options.suboffset) {\n        menuItems.push({\n            name: globalize.translate('SubtitleOffset'),\n            id: 'suboffset',\n            asideText: null\n        });\n    }\n\n    if (options.stats) {\n        menuItems.push({\n            name: globalize.translate('PlaybackData'),\n            id: 'stats',\n            asideText: null\n        });\n    }\n\n    return actionsheet.show({\n        items: menuItems,\n        positionTo: options.positionTo\n    }).then(function (id) {\n        return handleSelectedOption(id, options, player);\n    });\n}\n\nexport function show(options) {\n    var player = options.player;\n    var currentItem = playbackManager.currentItem(player);\n\n    if (!currentItem || !currentItem.ServerId) {\n        return showWithUser(options, player, null);\n    }\n\n    var apiClient = connectionManager.getApiClient(currentItem.ServerId);\n    return apiClient.getCurrentUser().then(function (user) {\n        return showWithUser(options, player, user);\n    });\n}\n\nfunction handleSelectedOption(id, options, player) {\n    switch (id) {\n        case 'quality':\n            return showQualityMenu(player, options.positionTo);\n        case 'aspectratio':\n            return showAspectRatioMenu(player, options.positionTo);\n        case 'repeatmode':\n            return showRepeatModeMenu(player, options.positionTo);\n        case 'stats':\n            if (options.onOption) {\n                options.onOption('stats');\n            }\n            return Promise.resolve();\n        case 'suboffset':\n            if (options.onOption) {\n                options.onOption('suboffset');\n            }\n            return Promise.resolve();\n        default:\n            break;\n    }\n\n    return Promise.reject();\n}\n\nexport default {\n    show: show\n};\n"]}