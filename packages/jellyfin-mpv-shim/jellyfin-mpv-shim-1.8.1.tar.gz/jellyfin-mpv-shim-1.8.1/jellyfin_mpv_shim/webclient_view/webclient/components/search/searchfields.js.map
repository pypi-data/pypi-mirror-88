{"version":3,"sources":["components/search/searchfields.js"],"names":["define","layoutManager","globalize","require","events","browser","AlphaPicker","onSearchTimeout","value","this","nextSearchValue","trim","trigger","triggerSearch","instance","searchTimeout","clearTimeout","setTimeout","bind","onAlphaValueClicked","e","detail","txtSearch","options","element","querySelector","val","length","substring","dispatchEvent","CustomEvent","bubbles","initAlphaPicker","alphaPickerElement","alphaPicker","mode","addEventListener","onSearchInput","target","embed","elem","template","html","translateDocument","tizen","orsay","replace","innerHTML","classList","add","tv","remove","focus","SearchFields","prototype","destroy"],"mappings":"AAAA,aAAAA,OAAO,CAAC,gBAAiB,YAAa,UAAW,SAAU,UAAW,cAAe,aAAc,aAAc,iBAAkB,uBAAuB,SAAUC,cAAeC,UAAWC,QAASC,OAAQC,QAASC,aAGpN,SAASC,kBAEL,IACIC,MADWC,KACMC,gBAErBF,OAASA,OAAS,IAAIG,OACtBP,OAAOQ,QAJQH,KAIU,SAAU,CAACD,QAGxC,SAASK,cAAcC,SAAUN,OAEzBM,SAASC,eACTC,aAAaF,SAASC,eAG1BD,SAASJ,gBAAkBF,MAC3BM,SAASC,cAAgBE,WAAWV,gBAAgBW,KAAKJ,UAAW,KAGxE,SAASK,oBAAoBC,GAEzB,IAAIZ,MAAQY,EAAEC,OAAOb,MAGjBc,UAFuBb,KAEUc,QAAQC,QAAQC,cAAc,2BAEnE,GAAc,cAAVjB,MAAuB,CAEvB,IAAIkB,IAAMJ,UAAUd,MACpBc,UAAUd,MAAQkB,IAAIC,OAASD,IAAIE,UAAU,EAAGF,IAAIC,OAAS,GAAK,QAGlEL,UAAUd,OAASA,MAGvBc,UAAUO,cAAc,IAAIC,YAAY,QAAS,CAC7CC,SAAS,KAIjB,SAASC,gBAAgBC,mBAAoBnB,UAEzCA,SAASoB,YAAc,IAAI5B,YAAY,CACnCkB,QAASS,mBACTE,KAAM,aAGVF,mBAAmBG,iBAAiB,oBAAqBjB,oBAAoBD,KAAKJ,WAGtF,SAASuB,cAAcjB,GAInBP,cAD2BJ,KADfW,EAAEkB,OAAO9B,OAKzB,SAAS+B,MAAMC,KAAM1B,SAAUS,SAE3BpB,QAAQ,CAAC,sCAAsC,SAAUsC,UAErD,IAAIC,KAAOxC,UAAUyC,kBAAkBF,SAAU,SAE7CpC,QAAQuC,OAASvC,QAAQwC,SACzBH,KAAOA,KAAKI,QAAQ,UAAW,qBAGnCN,KAAKO,UAAYL,KAEjBF,KAAKQ,UAAUC,IAAI,gBAEnB,IAAI3B,UAAYkB,KAAKf,cAAc,2BAEnC,GAAIxB,cAAciD,GAAI,CAClB,IAAIjB,mBAAqBO,KAAKf,cAAc,gBAE5Ce,KAAKf,cAAc,gBAAgBuB,UAAUG,OAAO,QACpDnB,gBAAgBC,mBAAoBnB,UAGxCQ,UAAUc,iBAAiB,QAASC,cAAcnB,KAAKJ,WAEvDA,SAASsC,WAIjB,SAASC,aAAa9B,SAElBd,KAAKc,QAAUA,QACfgB,MAAMhB,QAAQC,QAASf,MA8B3B,OA3BA4C,aAAaC,UAAUF,MAAQ,WAE3B3C,KAAKc,QAAQC,QAAQC,cAAc,2BAA2B2B,SAGlEC,aAAaC,UAAUC,QAAU,WAE7B,IAAIhC,QAAUd,KAAKc,QACfA,SACAA,QAAQC,QAAQwB,UAAUG,OAAO,gBAErC1C,KAAKc,QAAU,KAEf,IAAIW,YAAczB,KAAKyB,YACnBA,aACAA,YAAYqB,UAEhB9C,KAAKyB,YAAc,KAEnB,IAAInB,cAAgBN,KAAKM,cACrBA,eACAC,aAAaD,eAEjBN,KAAKM,cAAgB,KACrBN,KAAKC,gBAAkB,MAGpB2C","file":"searchfields.js","sourcesContent":["define(['layoutManager', 'globalize', 'require', 'events', 'browser', 'alphaPicker', 'emby-input', 'flexStyles', 'material-icons', 'css!./searchfields'], function (layoutManager, globalize, require, events, browser, AlphaPicker) {\n    'use strict';\n\n    function onSearchTimeout() {\n\n        var instance = this;\n        var value = instance.nextSearchValue;\n\n        value = (value || '').trim();\n        events.trigger(instance, 'search', [value]);\n    }\n\n    function triggerSearch(instance, value) {\n\n        if (instance.searchTimeout) {\n            clearTimeout(instance.searchTimeout);\n        }\n\n        instance.nextSearchValue = value;\n        instance.searchTimeout = setTimeout(onSearchTimeout.bind(instance), 400);\n    }\n\n    function onAlphaValueClicked(e) {\n\n        var value = e.detail.value;\n        var searchFieldsInstance = this;\n\n        var txtSearch = searchFieldsInstance.options.element.querySelector('.searchfields-txtSearch');\n\n        if (value === 'backspace') {\n\n            var val = txtSearch.value;\n            txtSearch.value = val.length ? val.substring(0, val.length - 1) : '';\n\n        } else {\n            txtSearch.value += value;\n        }\n\n        txtSearch.dispatchEvent(new CustomEvent('input', {\n            bubbles: true\n        }));\n    }\n\n    function initAlphaPicker(alphaPickerElement, instance) {\n\n        instance.alphaPicker = new AlphaPicker({\n            element: alphaPickerElement,\n            mode: 'keyboard'\n        });\n\n        alphaPickerElement.addEventListener('alphavalueclicked', onAlphaValueClicked.bind(instance));\n    }\n\n    function onSearchInput(e) {\n\n        var value = e.target.value;\n        var searchFieldsInstance = this;\n        triggerSearch(searchFieldsInstance, value);\n    }\n\n    function embed(elem, instance, options) {\n\n        require(['text!./searchfields.template.html'], function (template) {\n\n            var html = globalize.translateDocument(template, 'core');\n\n            if (browser.tizen || browser.orsay) {\n                html = html.replace('<input ', '<input readonly ');\n            }\n\n            elem.innerHTML = html;\n\n            elem.classList.add('searchFields');\n\n            var txtSearch = elem.querySelector('.searchfields-txtSearch');\n\n            if (layoutManager.tv) {\n                var alphaPickerElement = elem.querySelector('.alphaPicker');\n\n                elem.querySelector('.alphaPicker').classList.remove('hide');\n                initAlphaPicker(alphaPickerElement, instance);\n            }\n\n            txtSearch.addEventListener('input', onSearchInput.bind(instance));\n\n            instance.focus();\n        });\n    }\n\n    function SearchFields(options) {\n\n        this.options = options;\n        embed(options.element, this, options);\n    }\n\n    SearchFields.prototype.focus = function () {\n\n        this.options.element.querySelector('.searchfields-txtSearch').focus();\n    };\n\n    SearchFields.prototype.destroy = function () {\n\n        var options = this.options;\n        if (options) {\n            options.element.classList.remove('searchFields');\n        }\n        this.options = null;\n\n        var alphaPicker = this.alphaPicker;\n        if (alphaPicker) {\n            alphaPicker.destroy();\n        }\n        this.alphaPicker = null;\n\n        var searchTimeout = this.searchTimeout;\n        if (searchTimeout) {\n            clearTimeout(searchTimeout);\n        }\n        this.searchTimeout = null;\n        this.nextSearchValue = null;\n    };\n\n    return SearchFields;\n});\n"]}