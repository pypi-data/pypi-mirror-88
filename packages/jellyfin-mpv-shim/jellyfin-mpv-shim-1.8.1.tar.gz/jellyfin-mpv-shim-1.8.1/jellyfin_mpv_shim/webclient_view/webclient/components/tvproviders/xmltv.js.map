{"version":3,"sources":["components/tvproviders/xmltv.js"],"names":["define","$","loading","globalize","page","providerId","options","reload","show","ApiClient","getNamedConfiguration","then","config","getListingProvider","id","result","ListingProviders","filter","provider","Id","Promise","resolve","getJSON","getUrl","info","querySelector","value","Path","KidsCategories","join","NewsCategories","SportsCategories","MovieCategories","MoviePrefix","UserAgent","checked","EnableAllTuners","classList","add","remove","refreshTunerDevices","providerInfo","devices","html","i","length","device","enabledTuners","EnabledTuners","checkedAttribute","indexOf","FriendlyName","getTunerName","Type","Url","innerHTML","TunerHosts","hide","getCategories","txtInput","split","toLowerCase","onSelectPathClick","e","target","parents","require","directoryBrowser","picker","includeFiles","callback","path","txtPath","focus","close","self","this","submit","click","init","hideCancelButton","showCancelButton","toggle","hideSubmitButton","showSubmitButton","on","submitListingsForm","get","tuner","map","getAttribute","ajax","type","url","ValidateListings","data","JSON","stringify","contentType","showConfirmation","Dashboard","processServerConfigurationUpdateResult","Events","trigger","alert","message","translate","addEventListener","evt"],"mappings":"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","file":"xmltv.js","sourcesContent":["define(['jQuery', 'loading', 'globalize', 'emby-checkbox', 'emby-input', 'listViewStyle', 'paper-icon-button-light'], function ($, loading, globalize) {\n    'use strict';\n\n    return function (page, providerId, options) {\n        function getListingProvider(config, id) {\n            if (config && id) {\n                var result = config.ListingProviders.filter(function (provider) {\n                    return provider.Id === id;\n                })[0];\n\n                if (result) {\n                    return Promise.resolve(result);\n                }\n\n                return getListingProvider();\n            }\n\n            return ApiClient.getJSON(ApiClient.getUrl('LiveTv/ListingProviders/Default'));\n        }\n\n        function reload() {\n            loading.show();\n            ApiClient.getNamedConfiguration('livetv').then(function (config) {\n                getListingProvider(config, providerId).then(function (info) {\n                    page.querySelector('.txtPath').value = info.Path || '';\n                    page.querySelector('.txtKids').value = (info.KidsCategories || []).join('|');\n                    page.querySelector('.txtNews').value = (info.NewsCategories || []).join('|');\n                    page.querySelector('.txtSports').value = (info.SportsCategories || []).join('|');\n                    page.querySelector('.txtMovies').value = (info.MovieCategories || []).join('|');\n                    page.querySelector('.txtMoviePrefix').value = info.MoviePrefix || '';\n                    page.querySelector('.txtUserAgent').value = info.UserAgent || '';\n                    page.querySelector('.chkAllTuners').checked = info.EnableAllTuners;\n\n                    if (page.querySelector('.chkAllTuners').checked) {\n                        page.querySelector('.selectTunersSection').classList.add('hide');\n                    } else {\n                        page.querySelector('.selectTunersSection').classList.remove('hide');\n                    }\n\n                    refreshTunerDevices(page, info, config.TunerHosts);\n                    loading.hide();\n                });\n            });\n        }\n\n        function getCategories(txtInput) {\n            var value = txtInput.value;\n\n            if (value) {\n                return value.split('|');\n            }\n\n            return [];\n        }\n\n        function submitListingsForm() {\n            loading.show();\n            var id = providerId;\n            ApiClient.getNamedConfiguration('livetv').then(function (config) {\n                var info = config.ListingProviders.filter(function (provider) {\n                    return provider.Id === id;\n                })[0] || {};\n                info.Type = 'xmltv';\n                info.Path = page.querySelector('.txtPath').value;\n                info.MoviePrefix = page.querySelector('.txtMoviePrefix').value || null;\n                info.UserAgent = page.querySelector('.txtUserAgent').value || null;\n                info.MovieCategories = getCategories(page.querySelector('.txtMovies'));\n                info.KidsCategories = getCategories(page.querySelector('.txtKids'));\n                info.NewsCategories = getCategories(page.querySelector('.txtNews'));\n                info.SportsCategories = getCategories(page.querySelector('.txtSports'));\n                info.EnableAllTuners = page.querySelector('.chkAllTuners').checked;\n                info.EnabledTuners = info.EnableAllTuners ? [] : $('.chkTuner', page).get().filter(function (tuner) {\n                    return tuner.checked;\n                }).map(function (tuner) {\n                    return tuner.getAttribute('data-id');\n                });\n                ApiClient.ajax({\n                    type: 'POST',\n                    url: ApiClient.getUrl('LiveTv/ListingProviders', {\n                        ValidateListings: true\n                    }),\n                    data: JSON.stringify(info),\n                    contentType: 'application/json'\n                }).then(function (result) {\n                    loading.hide();\n\n                    if (false !== options.showConfirmation) {\n                        Dashboard.processServerConfigurationUpdateResult();\n                    }\n\n                    Events.trigger(self, 'submitted');\n                }, function () {\n                    loading.hide();\n                    Dashboard.alert({\n                        message: globalize.translate('ErrorAddingXmlTvFile')\n                    });\n                });\n            });\n        }\n\n        function getTunerName(providerId) {\n            switch (providerId = providerId.toLowerCase()) {\n                case 'm3u':\n                    return 'M3U Playlist';\n                case 'hdhomerun':\n                    return 'HDHomerun';\n                case 'satip':\n                    return 'DVB';\n                default:\n                    return 'Unknown';\n            }\n        }\n\n        function refreshTunerDevices(page, providerInfo, devices) {\n            var html = '';\n\n            for (var i = 0, length = devices.length; i < length; i++) {\n                var device = devices[i];\n                html += '<div class=\"listItem\">';\n                var enabledTuners = providerInfo.EnabledTuners || [];\n                var isChecked = providerInfo.EnableAllTuners || -1 !== enabledTuners.indexOf(device.Id);\n                var checkedAttribute = isChecked ? ' checked' : '';\n                html += '<label class=\"listItemCheckboxContainer\"><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkTuner\" data-id=\"' + device.Id + '\" ' + checkedAttribute + '><span></span></label>';\n                html += '<div class=\"listItemBody two-line\">';\n                html += '<div class=\"listItemBodyText\">';\n                html += device.FriendlyName || getTunerName(device.Type);\n                html += '</div>';\n                html += '<div class=\"listItemBodyText secondary\">';\n                html += device.Url;\n                html += '</div>';\n                html += '</div>';\n                html += '</div>';\n            }\n\n            page.querySelector('.tunerList').innerHTML = html;\n        }\n\n        function onSelectPathClick(e) {\n            var page = $(e.target).parents('.xmltvForm')[0];\n\n            require(['directorybrowser'], function (directoryBrowser) {\n                var picker = new directoryBrowser();\n                picker.show({\n                    includeFiles: true,\n                    callback: function (path) {\n                        if (path) {\n                            var txtPath = page.querySelector('.txtPath');\n                            txtPath.value = path;\n                            txtPath.focus();\n                        }\n                        picker.close();\n                    }\n                });\n            });\n        }\n\n        var self = this;\n\n        self.submit = function () {\n            page.querySelector('.btnSubmitListings').click();\n        };\n\n        self.init = function () {\n            options = options || {};\n\n            // Only hide the buttons if explicitly set to false; default to showing if undefined or null\n            // FIXME: rename this option to clarify logic\n            var hideCancelButton = options.showCancelButton === false;\n            page.querySelector('.btnCancel').classList.toggle('hide', hideCancelButton);\n\n            var hideSubmitButton = options.showSubmitButton === false;\n            page.querySelector('.btnSubmitListings').classList.toggle('hide', hideSubmitButton);\n\n            $('form', page).on('submit', function () {\n                submitListingsForm();\n                return false;\n            });\n            page.querySelector('#btnSelectPath').addEventListener('click', onSelectPathClick);\n            page.querySelector('.chkAllTuners').addEventListener('change', function (evt) {\n                if (evt.target.checked) {\n                    page.querySelector('.selectTunersSection').classList.add('hide');\n                } else {\n                    page.querySelector('.selectTunersSection').classList.remove('hide');\n                }\n            });\n            reload();\n        };\n    };\n});\n"]}