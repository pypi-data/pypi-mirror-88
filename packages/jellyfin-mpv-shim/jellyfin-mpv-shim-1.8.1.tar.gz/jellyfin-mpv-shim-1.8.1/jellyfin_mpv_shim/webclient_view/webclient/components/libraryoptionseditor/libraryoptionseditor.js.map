{"version":3,"sources":["components/libraryoptionseditor/libraryoptionseditor.js"],"names":["define","globalize","dom","populateLanguages","parent","ApiClient","getCultures","then","languages","populateLanguagesIntoSelect","select","html","i","length","culture","TwoLetterISOLanguageName","DisplayName","innerHTML","querySelector","populateLanguagesIntoList","element","ThreeLetterISOLanguageName","toLowerCase","renderMetadataReaders","page","plugins","elem","classList","add","translate","plugin","Name","remove","getMetadataFetchersForTypeHtml","availableTypeOptions","libraryOptionsForType","MetadataFetchers","getOrderedPlugins","MetadataFetcherOrder","Type","forEach","index","checkedHtml","indexOf","DefaultEnabled","getTypeOptions","allOptions","type","allTypeOptions","TypeOptions","typeOptions","renderMetadataFetchers","availableOptions","libraryOptions","renderSubtitleFetchers","SubtitleFetchers","SubtitleFetcherOrder","DisabledSubtitleFetchers","getImageFetchersForTypeHtml","ImageFetchers","ImageFetcherOrder","supportedImageTypes","SupportedImageTypes","renderImageFetchers","populateMetadataSettings","contentType","isNewLibrary","contains","getJSON","getUrl","LibraryContentType","IsNewLibrary","currentAvailableOptions","renderMetadataSavers","metadataSavers","MetadataSavers","MetadataReaders","catch","Promise","resolve","adjustSortableListElement","btnSortable","inner","previousSibling","title","onImageFetchersContainerClick","e","btnImageOptionsForType","parentWithClass","target","showImageOptionsForType","require","ImageOptionsEditor","currentLibraryOptions","push","show","getAttribute","onSortableContainerClick","call","this","li","list","next","nextSibling","parentNode","removeChild","insertBefore","prev","Array","prototype","querySelectorAll","setContentType","setAttribute","removeAttribute","configuredOrder","slice","sort","a","b","setLibraryOptions","options","value","PreferredMetadataLanguage","MetadataCountryCode","AutomaticRefreshIntervalDays","SeasonZeroDisplayName","checked","EnablePhotos","EnableRealtimeMonitor","ExtractChapterImagesDuringLibraryScan","EnableChapterImageExtraction","DownloadImagesInAdvance","SaveLocalMetadata","ImportMissingEpisodes","EnableAutomaticSeriesGrouping","EnableEmbeddedTitles","EnableEmbeddedEpisodeInfos","SkipSubtitlesIfEmbeddedSubtitlesPresent","SaveSubtitlesWithMedia","SkipSubtitlesIfAudioTrackMatches","RequirePerfectSubtitleMatch","SubtitleDownloadLanguages","LocalMetadataReaderOrder","embed","reject","xhr","XMLHttpRequest","open","onload","template","response","translateDocument","populateRefreshInterval","map","val","join","promises","getCountries","allCountries","TwoLetterISORegionName","all","bindEvents","addEventListener","send","getLibraryOptions","EnableArchiveMediaFiles","EnableInternetProviders","parseInt","filter","setSubtitleFetchersIntoOptions","setMetadataFetchersIntoOptions","sections","section","setImageFetchersIntoOptions","setImageOptionsIntoOptions","originalTypeOptions","originalTypeOption","ImageOptions","setAdvancedVisible","visible","elems"],"mappings":"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","file":"libraryoptionseditor.js","sourcesContent":["define(['globalize', 'dom', 'emby-checkbox', 'emby-select', 'emby-input'], function(globalize, dom) {\n    'use strict';\n\n    function populateLanguages(parent) {\n        return ApiClient.getCultures().then(function(languages) {\n            populateLanguagesIntoSelect(parent.querySelector('#selectLanguage'), languages);\n            populateLanguagesIntoList(parent.querySelector('.subtitleDownloadLanguages'), languages);\n        });\n    }\n\n    function populateLanguagesIntoSelect(select, languages) {\n        var html = '';\n        html += \"<option value=''></option>\";\n        for (var i = 0; i < languages.length; i++) {\n            var culture = languages[i];\n            html += \"<option value='\" + culture.TwoLetterISOLanguageName + \"'>\" + culture.DisplayName + '</option>';\n        }\n        select.innerHTML = html;\n    }\n\n    function populateLanguagesIntoList(element, languages) {\n        var html = '';\n        for (var i = 0; i < languages.length; i++) {\n            var culture = languages[i];\n            html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkSubtitleLanguage\" data-lang=\"' + culture.ThreeLetterISOLanguageName.toLowerCase() + '\" /><span>' + culture.DisplayName + '</span></label>';\n        }\n        element.innerHTML = html;\n    }\n\n    function populateCountries(select) {\n        return ApiClient.getCountries().then(function(allCountries) {\n            var html = '';\n            html += \"<option value=''></option>\";\n            for (var i = 0; i < allCountries.length; i++) {\n                var culture = allCountries[i];\n                html += \"<option value='\" + culture.TwoLetterISORegionName + \"'>\" + culture.DisplayName + '</option>';\n            }\n            select.innerHTML = html;\n        });\n    }\n\n    function populateRefreshInterval(select) {\n        var html = '';\n        html += \"<option value='0'>\" + globalize.translate('Never') + '</option>';\n        html += [30, 60, 90].map(function(val) {\n            return \"<option value='\" + val + \"'>\" + globalize.translate('EveryNDays', val) + '</option>';\n        }).join('');\n        select.innerHTML = html;\n    }\n\n    function renderMetadataReaders(page, plugins) {\n        var html = '';\n        var elem = page.querySelector('.metadataReaders');\n\n        if (plugins.length < 1) return elem.innerHTML = '', elem.classList.add('hide'), !1;\n        html += '<h3 class=\"checkboxListLabel\">' + globalize.translate('LabelMetadataReaders') + '</h3>';\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n        for (var i = 0; i < plugins.length; i++) {\n            var plugin = plugins[i];\n            html += '<div class=\"listItem localReaderOption sortableOption\" data-pluginname=\"' + plugin.Name + '\">';\n            html += '<span class=\"listItemIcon material-icons live_tv\"></span>';\n            html += '<div class=\"listItemBody\">';\n            html += '<h3 class=\"listItemBodyText\">';\n            html += plugin.Name;\n            html += '</h3>';\n            html += '</div>';\n            if (i > 0) {\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" title=\"' + globalize.translate('ButtonUp') + '\" class=\"btnSortableMoveUp btnSortable\" data-pluginindex=\"' + i + '\"><span class=\"material-icons keyboard_arrow_up\"></span></button>';\n            } else if (plugins.length > 1) {\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" title=\"' + globalize.translate('ButtonDown') + '\" class=\"btnSortableMoveDown btnSortable\" data-pluginindex=\"' + i + '\"><span class=\"material-icons keyboard_arrow_down\"></span></button>';\n            }\n            html += '</div>';\n        }\n        html += '</div>';\n        html += '<div class=\"fieldDescription\">' + globalize.translate('LabelMetadataReadersHelp') + '</div>';\n        if (plugins.length < 2) {\n            elem.classList.add('hide');\n        } else {\n            elem.classList.remove('hide');\n        }\n        elem.innerHTML = html;\n        return true;\n    }\n\n    function renderMetadataSavers(page, metadataSavers) {\n        var html = '';\n        var elem = page.querySelector('.metadataSavers');\n        if (!metadataSavers.length) return elem.innerHTML = '', elem.classList.add('hide'), false;\n        html += '<h3 class=\"checkboxListLabel\">' + globalize.translate('LabelMetadataSavers') + '</h3>';\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n        for (var i = 0; i < metadataSavers.length; i++) {\n            var plugin = metadataSavers[i];\n            html += '<label><input type=\"checkbox\" data-defaultenabled=\"' + plugin.DefaultEnabled + '\" is=\"emby-checkbox\" class=\"chkMetadataSaver\" data-pluginname=\"' + plugin.Name + '\" ' + false + '><span>' + plugin.Name + '</span></label>';\n        }\n        html += '</div>';\n        html += '<div class=\"fieldDescription\" style=\"margin-top:.25em;\">' + globalize.translate('LabelMetadataSaversHelp') + '</div>';\n        elem.innerHTML = html;\n        elem.classList.remove('hide');\n        return true;\n    }\n\n    function getMetadataFetchersForTypeHtml(availableTypeOptions, libraryOptionsForType) {\n        var html = '';\n        var plugins = availableTypeOptions.MetadataFetchers;\n\n        plugins = getOrderedPlugins(plugins, libraryOptionsForType.MetadataFetcherOrder || []);\n        if (!plugins.length) return html;\n\n        html += '<div class=\"metadataFetcher\" data-type=\"' + availableTypeOptions.Type + '\">';\n        html += '<h3 class=\"checkboxListLabel\">' + globalize.translate('LabelTypeMetadataDownloaders', globalize.translate(availableTypeOptions.Type)) + '</h3>';\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n\n        plugins.forEach((plugin, index) => {\n            html += '<div class=\"listItem metadataFetcherItem sortableOption\" data-pluginname=\"' + plugin.Name + '\">';\n            var isChecked = libraryOptionsForType.MetadataFetchers ? -1 !== libraryOptionsForType.MetadataFetchers.indexOf(plugin.Name) : plugin.DefaultEnabled;\n            var checkedHtml = isChecked ? ' checked=\"checked\"' : '';\n            html += '<label class=\"listItemCheckboxContainer\"><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkMetadataFetcher\" data-pluginname=\"' + plugin.Name + '\" ' + checkedHtml + '><span></span></label>';\n            html += '<div class=\"listItemBody\">';\n            html += '<h3 class=\"listItemBodyText\">';\n            html += plugin.Name;\n            html += '</h3>';\n            html += '</div>';\n            if (index > 0) {\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" title=\"' + globalize.translate('ButtonUp') + '\" class=\"btnSortableMoveUp btnSortable\" data-pluginindex=\"' + index + '\"><span class=\"material-icons keyboard_arrow_up\"></span></button>';\n            } else if (plugins.length > 1) {\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" title=\"' + globalize.translate('ButtonDown') + '\" class=\"btnSortableMoveDown btnSortable\" data-pluginindex=\"' + index + '\"><span class=\"material-icons keyboard_arrow_down\"></span></button>';\n            }\n            html += '</div>';\n        });\n\n        html += '</div>';\n        html += '<div class=\"fieldDescription\">' + globalize.translate('LabelMetadataDownloadersHelp') + '</div>';\n        html += '</div>';\n        return html;\n    }\n\n    function getTypeOptions(allOptions, type) {\n        var allTypeOptions = allOptions.TypeOptions || [];\n        for (var i = 0; i < allTypeOptions.length; i++) {\n            var typeOptions = allTypeOptions[i];\n            if (typeOptions.Type === type) return typeOptions;\n        }\n        return null;\n    }\n\n    function renderMetadataFetchers(page, availableOptions, libraryOptions) {\n        var html = '';\n        var elem = page.querySelector('.metadataFetchers');\n        for (var i = 0; i < availableOptions.TypeOptions.length; i++) {\n            var availableTypeOptions = availableOptions.TypeOptions[i];\n            html += getMetadataFetchersForTypeHtml(availableTypeOptions, getTypeOptions(libraryOptions, availableTypeOptions.Type) || {});\n        }\n        elem.innerHTML = html;\n        if (html) {\n            elem.classList.remove('hide');\n            page.querySelector('.fldAutoRefreshInterval').classList.remove('hide');\n            page.querySelector('.fldMetadataLanguage').classList.remove('hide');\n            page.querySelector('.fldMetadataCountry').classList.remove('hide');\n        } else {\n            elem.classList.add('hide');\n            page.querySelector('.fldAutoRefreshInterval').classList.add('hide');\n            page.querySelector('.fldMetadataLanguage').classList.add('hide');\n            page.querySelector('.fldMetadataCountry').classList.add('hide');\n        }\n        return true;\n    }\n\n    function renderSubtitleFetchers(page, availableOptions, libraryOptions) {\n        var html = '';\n        var elem = page.querySelector('.subtitleFetchers');\n\n        var plugins = availableOptions.SubtitleFetchers;\n        plugins = getOrderedPlugins(plugins, libraryOptions.SubtitleFetcherOrder || []);\n        if (!plugins.length) return html;\n\n        html += '<h3 class=\"checkboxListLabel\">' + globalize.translate('LabelSubtitleDownloaders') + '</h3>';\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n        for (var i = 0; i < plugins.length; i++) {\n            var plugin = plugins[i];\n            html += '<div class=\"listItem subtitleFetcherItem sortableOption\" data-pluginname=\"' + plugin.Name + '\">';\n            var isChecked = libraryOptions.DisabledSubtitleFetchers ? -1 === libraryOptions.DisabledSubtitleFetchers.indexOf(plugin.Name) : plugin.DefaultEnabled;\n            var checkedHtml = isChecked ? ' checked=\"checked\"' : '';\n            html += '<label class=\"listItemCheckboxContainer\"><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkSubtitleFetcher\" data-pluginname=\"' + plugin.Name + '\" ' + checkedHtml + '><span></span></label>';\n            html += '<div class=\"listItemBody\">';\n            html += '<h3 class=\"listItemBodyText\">';\n            html += plugin.Name;\n            html += '</h3>';\n            html += '</div>';\n            if (i > 0) {\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" title=\"' + globalize.translate('ButtonUp') + '\" class=\"btnSortableMoveUp btnSortable\" data-pluginindex=\"' + i + '\"><span class=\"material-icons keyboard_arrow_up\"></span></button>';\n            } else if (plugins.length > 1) {\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" title=\"' + globalize.translate('ButtonDown') + '\" class=\"btnSortableMoveDown btnSortable\" data-pluginindex=\"' + i + '\"><span class=\"material-icons keyboard_arrow_down\"></span></button>';\n            }\n            html += '</div>';\n        }\n        html += '</div>';\n        html += '<div class=\"fieldDescription\">' + globalize.translate('SubtitleDownloadersHelp') + '</div>';\n        elem.innerHTML = html;\n    }\n\n    function getImageFetchersForTypeHtml(availableTypeOptions, libraryOptionsForType) {\n        var html = '';\n        var plugins = availableTypeOptions.ImageFetchers;\n\n        plugins = getOrderedPlugins(plugins, libraryOptionsForType.ImageFetcherOrder || []);\n        if (!plugins.length) return html;\n\n        html += '<div class=\"imageFetcher\" data-type=\"' + availableTypeOptions.Type + '\">';\n        html += '<div class=\"flex align-items-center\" style=\"margin:1.5em 0 .5em;\">';\n        html += '<h3 class=\"checkboxListLabel\" style=\"margin:0;\">' + globalize.translate('HeaderTypeImageFetchers', availableTypeOptions.Type) + '</h3>';\n        var supportedImageTypes = availableTypeOptions.SupportedImageTypes || [];\n        if (supportedImageTypes.length > 1 || 1 === supportedImageTypes.length && 'Primary' !== supportedImageTypes[0]) {\n            html += '<button is=\"emby-button\" class=\"raised btnImageOptionsForType\" type=\"button\" style=\"margin-left:1.5em;font-size:90%;\"><span>' + globalize.translate('HeaderFetcherSettings') + '</span></button>';\n        }\n        html += '</div>';\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n        for (var i = 0; i < plugins.length; i++) {\n            var plugin = plugins[i];\n            html += '<div class=\"listItem imageFetcherItem sortableOption\" data-pluginname=\"' + plugin.Name + '\">';\n            var isChecked = libraryOptionsForType.ImageFetchers ? -1 !== libraryOptionsForType.ImageFetchers.indexOf(plugin.Name) : plugin.DefaultEnabled;\n            var checkedHtml = isChecked ? ' checked=\"checked\"' : '';\n            html += '<label class=\"listItemCheckboxContainer\"><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkImageFetcher\" data-pluginname=\"' + plugin.Name + '\" ' + checkedHtml + '><span></span></label>';\n            html += '<div class=\"listItemBody\">';\n            html += '<h3 class=\"listItemBodyText\">';\n            html += plugin.Name;\n            html += '</h3>';\n            html += '</div>';\n            if (i > 0) {\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" title=\"' + globalize.translate('ButtonUp') + '\" class=\"btnSortableMoveUp btnSortable\" data-pluginindex=\"' + i + '\"><span class=\"material-icons keyboard_arrow_up\"></span></button>';\n            } else if (plugins.length > 1) {\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" title=\"' + globalize.translate('ButtonDown') + '\" class=\"btnSortableMoveDown btnSortable\" data-pluginindex=\"' + i + '\"><span class=\"material-icons keyboard_arrow_down\"></span></button>';\n            }\n            html += '</div>';\n        }\n        html += '</div>';\n        html += '<div class=\"fieldDescription\">' + globalize.translate('LabelImageFetchersHelp') + '</div>';\n        html += '</div>';\n        return html;\n    }\n\n    function renderImageFetchers(page, availableOptions, libraryOptions) {\n        var html = '';\n        var elem = page.querySelector('.imageFetchers');\n        for (var i = 0; i < availableOptions.TypeOptions.length; i++) {\n            var availableTypeOptions = availableOptions.TypeOptions[i];\n            html += getImageFetchersForTypeHtml(availableTypeOptions, getTypeOptions(libraryOptions, availableTypeOptions.Type) || {});\n        }\n        elem.innerHTML = html;\n        if (html) {\n            elem.classList.remove('hide');\n            page.querySelector('.chkDownloadImagesInAdvanceContainer').classList.remove('hide');\n            page.querySelector('.chkSaveLocalContainer').classList.remove('hide');\n        } else {\n            elem.classList.add('hide');\n            page.querySelector('.chkDownloadImagesInAdvanceContainer').classList.add('hide');\n            page.querySelector('.chkSaveLocalContainer').classList.add('hide');\n        }\n        return true;\n    }\n\n    function populateMetadataSettings(parent, contentType, isNewLibrary) {\n        var isNewLibrary = parent.classList.contains('newlibrary');\n        return ApiClient.getJSON(ApiClient.getUrl('Libraries/AvailableOptions', {\n            LibraryContentType: contentType,\n            IsNewLibrary: isNewLibrary\n        })).then(function(availableOptions) {\n            currentAvailableOptions = availableOptions;\n            parent.availableOptions = availableOptions;\n            renderMetadataSavers(parent, availableOptions.MetadataSavers);\n            renderMetadataReaders(parent, availableOptions.MetadataReaders);\n            renderMetadataFetchers(parent, availableOptions, {});\n            renderSubtitleFetchers(parent, availableOptions, {});\n            renderImageFetchers(parent, availableOptions, {});\n            availableOptions.SubtitleFetchers.length ? parent.querySelector('.subtitleDownloadSettings').classList.remove('hide') : parent.querySelector('.subtitleDownloadSettings').classList.add('hide');\n        }).catch(function() {\n            return Promise.resolve();\n        });\n    }\n\n    function adjustSortableListElement(elem) {\n        var btnSortable = elem.querySelector('.btnSortable');\n        var inner = btnSortable.querySelector('.material-icons');\n        if (elem.previousSibling) {\n            btnSortable.title = globalize.translate('ButtonUp');\n            btnSortable.classList.add('btnSortableMoveUp');\n            btnSortable.classList.remove('btnSortableMoveDown');\n            inner.classList.remove('keyboard_arrow_down');\n            inner.classList.add('keyboard_arrow_up');\n        } else {\n            btnSortable.title = globalize.translate('ButtonDown');\n            btnSortable.classList.remove('btnSortableMoveUp');\n            btnSortable.classList.add('btnSortableMoveDown');\n            inner.classList.remove('keyboard_arrow_up');\n            inner.classList.add('keyboard_arrow_down');\n        }\n    }\n\n    function showImageOptionsForType(type) {\n        require(['imageoptionseditor'], function(ImageOptionsEditor) {\n            var typeOptions = getTypeOptions(currentLibraryOptions, type);\n            if (!typeOptions) {\n                typeOptions = {\n                    Type: type\n                };\n                currentLibraryOptions.TypeOptions.push(typeOptions);\n            }\n            var availableOptions = getTypeOptions(currentAvailableOptions || {}, type);\n            var imageOptionsEditor = new ImageOptionsEditor();\n            imageOptionsEditor.show(type, typeOptions, availableOptions);\n        });\n    }\n\n    function onImageFetchersContainerClick(e) {\n        var btnImageOptionsForType = dom.parentWithClass(e.target, 'btnImageOptionsForType');\n        if (btnImageOptionsForType) {\n            return void showImageOptionsForType(dom.parentWithClass(btnImageOptionsForType, 'imageFetcher').getAttribute('data-type'));\n        }\n        onSortableContainerClick.call(this, e);\n    }\n\n    function onSortableContainerClick(e) {\n        var btnSortable = dom.parentWithClass(e.target, 'btnSortable');\n        if (btnSortable) {\n            var li = dom.parentWithClass(btnSortable, 'sortableOption');\n            var list = dom.parentWithClass(li, 'paperList');\n            if (btnSortable.classList.contains('btnSortableMoveDown')) {\n                var next = li.nextSibling;\n                if (next) {\n                    li.parentNode.removeChild(li);\n                    next.parentNode.insertBefore(li, next.nextSibling);\n                }\n            } else {\n                var prev = li.previousSibling;\n                if (prev) {\n                    li.parentNode.removeChild(li);\n                    prev.parentNode.insertBefore(li, prev);\n                }\n            }\n            Array.prototype.forEach.call(list.querySelectorAll('.sortableOption'), adjustSortableListElement);\n        }\n    }\n\n    function bindEvents(parent) {\n        parent.querySelector('.metadataReaders').addEventListener('click', onSortableContainerClick);\n        parent.querySelector('.subtitleFetchers').addEventListener('click', onSortableContainerClick);\n        parent.querySelector('.metadataFetchers').addEventListener('click', onSortableContainerClick);\n        parent.querySelector('.imageFetchers').addEventListener('click', onImageFetchersContainerClick);\n    }\n\n    function embed(parent, contentType, libraryOptions) {\n        currentLibraryOptions = {\n            TypeOptions: []\n        };\n        currentAvailableOptions = null;\n        var isNewLibrary = null === libraryOptions;\n        isNewLibrary && parent.classList.add('newlibrary');\n        return new Promise(function(resolve, reject) {\n            var xhr = new XMLHttpRequest;\n            xhr.open('GET', 'components/libraryoptionseditor/libraryoptionseditor.template.html', true);\n            xhr.onload = function(e) {\n                var template = this.response;\n                parent.innerHTML = globalize.translateDocument(template);\n                populateRefreshInterval(parent.querySelector('#selectAutoRefreshInterval'));\n                var promises = [populateLanguages(parent), populateCountries(parent.querySelector('#selectCountry'))];\n                Promise.all(promises).then(function() {\n                    return setContentType(parent, contentType).then(function() {\n                        libraryOptions && setLibraryOptions(parent, libraryOptions);\n                        bindEvents(parent);\n                        resolve();\n                    });\n                });\n            };\n            xhr.send();\n        });\n    }\n\n    function setAdvancedVisible(parent, visible) {\n        var elems = parent.querySelectorAll('.advanced');\n        for (var i = 0; i < elems.length; i++) {\n            visible ? elems[i].classList.remove('advancedHide') : elems[i].classList.add('advancedHide');\n        }\n    }\n\n    function setContentType(parent, contentType) {\n        if (contentType === 'homevideos' || contentType === 'photos') {\n            parent.querySelector('.chkEnablePhotosContainer').classList.remove('hide');\n        } else {\n            parent.querySelector('.chkEnablePhotosContainer').classList.add('hide');\n        }\n\n        if (contentType !== 'tvshows' && contentType !== 'movies' && contentType !== 'homevideos' && contentType !== 'musicvideos' && contentType !== 'mixed') {\n            parent.querySelector('.chapterSettingsSection').classList.add('hide');\n        } else {\n            parent.querySelector('.chapterSettingsSection').classList.remove('hide');\n        }\n\n        if (contentType === 'tvshows') {\n            parent.querySelector('.chkImportMissingEpisodesContainer').classList.remove('hide');\n            parent.querySelector('.chkAutomaticallyGroupSeriesContainer').classList.remove('hide');\n            parent.querySelector('.fldSeasonZeroDisplayName').classList.remove('hide');\n            parent.querySelector('#txtSeasonZeroName').setAttribute('required', 'required');\n        } else {\n            parent.querySelector('.chkImportMissingEpisodesContainer').classList.add('hide');\n            parent.querySelector('.chkAutomaticallyGroupSeriesContainer').classList.add('hide');\n            parent.querySelector('.fldSeasonZeroDisplayName').classList.add('hide');\n            parent.querySelector('#txtSeasonZeroName').removeAttribute('required');\n        }\n\n        if (contentType === 'books' || contentType === 'boxsets' || contentType === 'playlists' || contentType === 'music') {\n            parent.querySelector('.chkEnableEmbeddedTitlesContainer').classList.add('hide');\n        } else {\n            parent.querySelector('.chkEnableEmbeddedTitlesContainer').classList.remove('hide');\n        }\n\n        if (contentType === 'tvshows') {\n            parent.querySelector('.chkEnableEmbeddedEpisodeInfosContainer').classList.remove('hide');\n        } else {\n            parent.querySelector('.chkEnableEmbeddedEpisodeInfosContainer').classList.add('hide');\n        }\n\n        return populateMetadataSettings(parent, contentType);\n    }\n\n    function setSubtitleFetchersIntoOptions(parent, options) {\n        options.DisabledSubtitleFetchers = Array.prototype.map.call(Array.prototype.filter.call(parent.querySelectorAll('.chkSubtitleFetcher'), function(elem) {\n            return !elem.checked;\n        }), function(elem) {\n            return elem.getAttribute('data-pluginname');\n        });\n\n        options.SubtitleFetcherOrder = Array.prototype.map.call(parent.querySelectorAll('.subtitleFetcherItem'), function(elem) {\n            return elem.getAttribute('data-pluginname');\n        });\n    }\n\n    function setMetadataFetchersIntoOptions(parent, options) {\n        var sections = parent.querySelectorAll('.metadataFetcher');\n        for (var i = 0; i < sections.length; i++) {\n            var section = sections[i];\n            var type = section.getAttribute('data-type');\n            var typeOptions = getTypeOptions(options, type);\n            if (!typeOptions) {\n                typeOptions = {\n                    Type: type\n                };\n                options.TypeOptions.push(typeOptions);\n            }\n            typeOptions.MetadataFetchers = Array.prototype.map.call(Array.prototype.filter.call(section.querySelectorAll('.chkMetadataFetcher'), function(elem) {\n                return elem.checked;\n            }), function(elem) {\n                return elem.getAttribute('data-pluginname');\n            });\n\n            typeOptions.MetadataFetcherOrder = Array.prototype.map.call(section.querySelectorAll('.metadataFetcherItem'), function(elem) {\n                return elem.getAttribute('data-pluginname');\n            });\n        }\n    }\n\n    function setImageFetchersIntoOptions(parent, options) {\n        var sections = parent.querySelectorAll('.imageFetcher');\n        for (var i = 0; i < sections.length; i++) {\n            var section = sections[i];\n            var type = section.getAttribute('data-type');\n            var typeOptions = getTypeOptions(options, type);\n            if (!typeOptions) {\n                typeOptions = {\n                    Type: type\n                };\n                options.TypeOptions.push(typeOptions);\n            }\n\n            typeOptions.ImageFetchers = Array.prototype.map.call(Array.prototype.filter.call(section.querySelectorAll('.chkImageFetcher'), function(elem) {\n                return elem.checked;\n            }), function(elem) {\n                return elem.getAttribute('data-pluginname');\n            });\n\n            typeOptions.ImageFetcherOrder = Array.prototype.map.call(section.querySelectorAll('.imageFetcherItem'), function(elem) {\n                return elem.getAttribute('data-pluginname');\n            });\n        }\n    }\n\n    function setImageOptionsIntoOptions(parent, options) {\n        var originalTypeOptions = (currentLibraryOptions || {}).TypeOptions || [];\n        for (var i = 0; i < originalTypeOptions.length; i++) {\n            var originalTypeOption = originalTypeOptions[i];\n            var typeOptions = getTypeOptions(options, originalTypeOption.Type);\n\n            if (!typeOptions) {\n                typeOptions = {\n                    Type: originalTypeOption.Type\n                };\n                options.TypeOptions.push(typeOptions);\n            }\n            originalTypeOption.ImageOptions && (typeOptions.ImageOptions = originalTypeOption.ImageOptions);\n        }\n    }\n\n    function getLibraryOptions(parent) {\n        var options = {\n            EnableArchiveMediaFiles: false,\n            EnablePhotos: parent.querySelector('.chkEnablePhotos').checked,\n            EnableRealtimeMonitor: parent.querySelector('.chkEnableRealtimeMonitor').checked,\n            ExtractChapterImagesDuringLibraryScan: parent.querySelector('.chkExtractChaptersDuringLibraryScan').checked,\n            EnableChapterImageExtraction: parent.querySelector('.chkExtractChapterImages').checked,\n            DownloadImagesInAdvance: parent.querySelector('#chkDownloadImagesInAdvance').checked,\n            EnableInternetProviders: true,\n            ImportMissingEpisodes: parent.querySelector('#chkImportMissingEpisodes').checked,\n            SaveLocalMetadata: parent.querySelector('#chkSaveLocal').checked,\n            EnableAutomaticSeriesGrouping: parent.querySelector('.chkAutomaticallyGroupSeries').checked,\n            PreferredMetadataLanguage: parent.querySelector('#selectLanguage').value,\n            MetadataCountryCode: parent.querySelector('#selectCountry').value,\n            SeasonZeroDisplayName: parent.querySelector('#txtSeasonZeroName').value,\n            AutomaticRefreshIntervalDays: parseInt(parent.querySelector('#selectAutoRefreshInterval').value),\n            EnableEmbeddedTitles: parent.querySelector('#chkEnableEmbeddedTitles').checked,\n            EnableEmbeddedEpisodeInfos: parent.querySelector('#chkEnableEmbeddedEpisodeInfos').checked,\n            SkipSubtitlesIfEmbeddedSubtitlesPresent: parent.querySelector('#chkSkipIfGraphicalSubsPresent').checked,\n            SkipSubtitlesIfAudioTrackMatches: parent.querySelector('#chkSkipIfAudioTrackPresent').checked,\n            SaveSubtitlesWithMedia: parent.querySelector('#chkSaveSubtitlesLocally').checked,\n            RequirePerfectSubtitleMatch: parent.querySelector('#chkRequirePerfectMatch').checked,\n            MetadataSavers: Array.prototype.map.call(Array.prototype.filter.call(parent.querySelectorAll('.chkMetadataSaver'), function(elem) {\n                return elem.checked;\n            }), function(elem) {\n                return elem.getAttribute('data-pluginname');\n            }),\n            TypeOptions: []\n        };\n\n        options.LocalMetadataReaderOrder = Array.prototype.map.call(parent.querySelectorAll('.localReaderOption'), function(elem) {\n            return elem.getAttribute('data-pluginname');\n        });\n        options.SubtitleDownloadLanguages = Array.prototype.map.call(Array.prototype.filter.call(parent.querySelectorAll('.chkSubtitleLanguage'), function(elem) {\n            return elem.checked;\n        }), function(elem) {\n            return elem.getAttribute('data-lang');\n        });\n        setSubtitleFetchersIntoOptions(parent, options);\n        setMetadataFetchersIntoOptions(parent, options);\n        setImageFetchersIntoOptions(parent, options);\n        setImageOptionsIntoOptions(parent, options);\n\n        return options;\n    }\n\n    function getOrderedPlugins(plugins, configuredOrder) {\n        plugins = plugins.slice(0);\n        plugins.sort(function(a, b) {\n            return a = configuredOrder.indexOf(a.Name), b = configuredOrder.indexOf(b.Name), a < b ? -1 : a > b ? 1 : 0;\n        });\n        return plugins;\n    }\n\n    function setLibraryOptions(parent, options) {\n        currentLibraryOptions = options;\n        currentAvailableOptions = parent.availableOptions;\n        parent.querySelector('#selectLanguage').value = options.PreferredMetadataLanguage || '';\n        parent.querySelector('#selectCountry').value = options.MetadataCountryCode || '';\n        parent.querySelector('#selectAutoRefreshInterval').value = options.AutomaticRefreshIntervalDays || '0';\n        parent.querySelector('#txtSeasonZeroName').value = options.SeasonZeroDisplayName || 'Specials';\n        parent.querySelector('.chkEnablePhotos').checked = options.EnablePhotos;\n        parent.querySelector('.chkEnableRealtimeMonitor').checked = options.EnableRealtimeMonitor;\n        parent.querySelector('.chkExtractChaptersDuringLibraryScan').checked = options.ExtractChapterImagesDuringLibraryScan;\n        parent.querySelector('.chkExtractChapterImages').checked = options.EnableChapterImageExtraction;\n        parent.querySelector('#chkDownloadImagesInAdvance').checked = options.DownloadImagesInAdvance;\n        parent.querySelector('#chkSaveLocal').checked = options.SaveLocalMetadata;\n        parent.querySelector('#chkImportMissingEpisodes').checked = options.ImportMissingEpisodes;\n        parent.querySelector('.chkAutomaticallyGroupSeries').checked = options.EnableAutomaticSeriesGrouping;\n        parent.querySelector('#chkEnableEmbeddedTitles').checked = options.EnableEmbeddedTitles;\n        parent.querySelector('#chkEnableEmbeddedEpisodeInfos').checked = options.EnableEmbeddedEpisodeInfos;\n        parent.querySelector('#chkSkipIfGraphicalSubsPresent').checked = options.SkipSubtitlesIfEmbeddedSubtitlesPresent;\n        parent.querySelector('#chkSaveSubtitlesLocally').checked = options.SaveSubtitlesWithMedia;\n        parent.querySelector('#chkSkipIfAudioTrackPresent').checked = options.SkipSubtitlesIfAudioTrackMatches;\n        parent.querySelector('#chkRequirePerfectMatch').checked = options.RequirePerfectSubtitleMatch;\n        Array.prototype.forEach.call(parent.querySelectorAll('.chkMetadataSaver'), function(elem) {\n            elem.checked = options.MetadataSavers ? -1 !== options.MetadataSavers.indexOf(elem.getAttribute('data-pluginname')) : 'true' === elem.getAttribute('data-defaultenabled');\n        });\n        Array.prototype.forEach.call(parent.querySelectorAll('.chkSubtitleLanguage'), function(elem) {\n            elem.checked = !!options.SubtitleDownloadLanguages && -1 !== options.SubtitleDownloadLanguages.indexOf(elem.getAttribute('data-lang'));\n        });\n        renderMetadataReaders(parent, getOrderedPlugins(parent.availableOptions.MetadataReaders, options.LocalMetadataReaderOrder || []));\n        renderMetadataFetchers(parent, parent.availableOptions, options);\n        renderImageFetchers(parent, parent.availableOptions, options);\n        renderSubtitleFetchers(parent, parent.availableOptions, options);\n    }\n\n    var currentLibraryOptions;\n    var currentAvailableOptions;\n\n    return {\n        embed: embed,\n        setContentType: setContentType,\n        getLibraryOptions: getLibraryOptions,\n        setLibraryOptions: setLibraryOptions,\n        setAdvancedVisible: setAdvancedVisible\n    };\n});\n"]}