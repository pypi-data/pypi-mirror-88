{"version":3,"sources":["components/imageeditor/imageeditor.js"],"names":["define","dialogHelper","connectionManager","loading","dom","layoutManager","focusManager","globalize","scrollHelper","imageLoader","require","browser","appHost","currentItem","enableFocusTransform","slow","edge","hasChanges","reload","page","item","focusContext","apiClient","show","getApiClient","ServerId","reloadItem","getItem","getCurrentUserId","Id","then","addListeners","container","className","eventName","fn","addEventListener","e","elem","parentWithClass","target","call","getRemoteImageProviders","getBaseRemoteOptions","options","itemId","providers","btnBrowseAllImages","querySelectorAll","i","length","classList","remove","add","getItemImageInfos","imageInfos","renderStandardImages","imageProviders","images","filter","ImageType","renderImages","querySelector","renderBackdrops","sort","a","b","ImageIndex","renderScreenshots","hide","tv","autoFocus","getCardHtml","image","index","numImages","imageSize","tagName","enableFooterButtons","html","cssClass","serverId","getImageUrl","type","tag","BackdropImageTags","ScreenshotImageTags","PrimaryImageTag","ImageTags","getScaledImageUrl","ItemId","maxWidth","translate","Width","Height","deleteImage","context","enableConfirmation","afterConfirm","deleteItemImage","confirm","text","confirmText","primary","moveImage","newIndex","updateItemImageIndex","alert","windowSize","getWindowSize","innerWidth","Math","round","innerHTML","lazyChildren","showImageDownloader","imageType","ImageDownloader","Type","initEditor","uploadButtons","isFileInputSupported","supports","this","getAttribute","imageUploader","theme","hasChanged","showActionSheet","imageCard","parseInt","providerCount","actionSheet","commands","push","name","id","items","positionTo","Promise","resolve","reject","showEditor","template","dialogOptions","removeOnClose","size","dlg","createDialog","translateDocument","centerFocus","on","off","open","close"],"mappings":"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","file":"imageeditor.js","sourcesContent":["define(['dialogHelper', 'connectionManager', 'loading', 'dom', 'layoutManager', 'focusManager', 'globalize', 'scrollHelper', 'imageLoader', 'require', 'browser', 'apphost', 'cardStyle', 'formDialogStyle', 'emby-button', 'paper-icon-button-light', 'css!./imageeditor'], function (dialogHelper, connectionManager, loading, dom, layoutManager, focusManager, globalize, scrollHelper, imageLoader, require, browser, appHost) {\n    'use strict';\n\n    var enableFocusTransform = !browser.slow && !browser.edge;\n\n    var currentItem;\n    var hasChanges = false;\n\n    function getBaseRemoteOptions() {\n\n        var options = {};\n\n        options.itemId = currentItem.Id;\n\n        return options;\n    }\n\n    function reload(page, item, focusContext) {\n\n        loading.show();\n\n        var apiClient;\n\n        if (item) {\n            apiClient = connectionManager.getApiClient(item.ServerId);\n            reloadItem(page, item, apiClient, focusContext);\n        } else {\n\n            apiClient = connectionManager.getApiClient(currentItem.ServerId);\n            apiClient.getItem(apiClient.getCurrentUserId(), currentItem.Id).then(function (item) {\n                reloadItem(page, item, apiClient, focusContext);\n            });\n        }\n    }\n\n    function addListeners(container, className, eventName, fn) {\n\n        container.addEventListener(eventName, function (e) {\n            var elem = dom.parentWithClass(e.target, className);\n            if (elem) {\n                fn.call(elem, e);\n            }\n        });\n    }\n\n    function reloadItem(page, item, apiClient, focusContext) {\n\n        currentItem = item;\n\n        apiClient.getRemoteImageProviders(getBaseRemoteOptions()).then(function (providers) {\n\n            var btnBrowseAllImages = page.querySelectorAll('.btnBrowseAllImages');\n            for (var i = 0, length = btnBrowseAllImages.length; i < length; i++) {\n\n                if (providers.length) {\n                    btnBrowseAllImages[i].classList.remove('hide');\n                } else {\n                    btnBrowseAllImages[i].classList.add('hide');\n                }\n            }\n\n            apiClient.getItemImageInfos(currentItem.Id).then(function (imageInfos) {\n\n                renderStandardImages(page, apiClient, item, imageInfos, providers);\n                renderBackdrops(page, apiClient, item, imageInfos, providers);\n                renderScreenshots(page, apiClient, item, imageInfos, providers);\n                loading.hide();\n\n                if (layoutManager.tv) {\n                    focusManager.autoFocus((focusContext || page));\n                }\n            });\n        });\n    }\n\n    function getImageUrl(item, apiClient, type, index, options) {\n\n        options = options || {};\n        options.type = type;\n        options.index = index;\n\n        if (type === 'Backdrop') {\n            options.tag = item.BackdropImageTags[index];\n        } else if (type === 'Screenshot') {\n            options.tag = item.ScreenshotImageTags[index];\n        } else if (type === 'Primary') {\n            options.tag = item.PrimaryImageTag || item.ImageTags[type];\n        } else {\n            options.tag = item.ImageTags[type];\n        }\n\n        // For search hints\n        return apiClient.getScaledImageUrl(item.Id || item.ItemId, options);\n    }\n\n    function getCardHtml(image, index, numImages, apiClient, imageProviders, imageSize, tagName, enableFooterButtons) {\n\n        // TODO move card creation code to Card component\n\n        var html = '';\n\n        var cssClass = 'card scalableCard imageEditorCard';\n        var cardBoxCssClass = 'cardBox visualCardBox';\n\n        cssClass += ' backdropCard backdropCard-scalable';\n\n        if (tagName === 'button') {\n            cssClass += ' btnImageCard';\n\n            if (layoutManager.tv) {\n                cssClass += ' show-focus';\n\n                if (enableFocusTransform) {\n                    cssClass += ' show-animation';\n                }\n            }\n\n            html += '<button type=\"button\" class=\"' + cssClass + '\"';\n        } else {\n            html += '<div class=\"' + cssClass + '\"';\n        }\n\n        html += ' data-id=\"' + currentItem.Id + '\" data-serverid=\"' + apiClient.serverId() + '\" data-index=\"' + index + '\" data-numimages=\"' + numImages + '\" data-imagetype=\"' + image.ImageType + '\" data-providers=\"' + imageProviders.length + '\"';\n\n        html += '>';\n\n        html += '<div class=\"' + cardBoxCssClass + '\">';\n        html += '<div class=\"cardScalable visualCardBox-cardScalable\" style=\"background-color:transparent;\">';\n        html += '<div class=\"cardPadder-backdrop\"></div>';\n\n        html += '<div class=\"cardContent\">';\n\n        var imageUrl = getImageUrl(currentItem, apiClient, image.ImageType, image.ImageIndex, { maxWidth: imageSize });\n\n        html += '<div class=\"cardImageContainer\" style=\"background-image:url(\\'' + imageUrl + '\\');background-position:center center;background-size:contain;\"></div>';\n\n        html += '</div>';\n        html += '</div>';\n\n        html += '<div class=\"cardFooter visualCardBox-cardFooter\">';\n\n        html += '<h3 class=\"cardText cardTextCentered\" style=\"margin:0;\">' + globalize.translate('' + image.ImageType) + '</h3>';\n\n        html += '<div class=\"cardText cardText-secondary cardTextCentered\">';\n        if (image.Width && image.Height) {\n            html += image.Width + ' X ' + image.Height;\n        } else {\n            html += '&nbsp;';\n        }\n        html += '</div>';\n\n        if (enableFooterButtons) {\n            html += '<div class=\"cardText cardTextCentered\">';\n\n            if (image.ImageType === 'Backdrop' || image.ImageType === 'Screenshot') {\n\n                if (index > 0) {\n                    html += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"btnMoveImage autoSize\" data-imagetype=\"' + image.ImageType + '\" data-index=\"' + image.ImageIndex + '\" data-newindex=\"' + (image.ImageIndex - 1) + '\" title=\"' + globalize.translate('MoveLeft') + '\"><span class=\"material-icons chevron_left\"></span></button>';\n                } else {\n                    html += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"autoSize\" disabled title=\"' + globalize.translate('MoveLeft') + '\"><span class=\"material-icons chevron_left\"></span></button>';\n                }\n\n                if (index < numImages - 1) {\n                    html += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"btnMoveImage autoSize\" data-imagetype=\"' + image.ImageType + '\" data-index=\"' + image.ImageIndex + '\" data-newindex=\"' + (image.ImageIndex + 1) + '\" title=\"' + globalize.translate('MoveRight') + '\"><span class=\"material-icons chevron_right\"></span></button>';\n                } else {\n                    html += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"autoSize\" disabled title=\"' + globalize.translate('MoveRight') + '\"><span class=\"material-icons chevron_right\"></span></button>';\n                }\n            } else {\n                if (imageProviders.length) {\n                    html += '<button type=\"button\" is=\"paper-icon-button-light\" data-imagetype=\"' + image.ImageType + '\" class=\"btnSearchImages autoSize\" title=\"' + globalize.translate('Search') + '\"><span class=\"material-icons search\"></span></button>';\n                }\n            }\n\n            html += '<button type=\"button\" is=\"paper-icon-button-light\" data-imagetype=\"' + image.ImageType + '\" data-index=\"' + (image.ImageIndex != null ? image.ImageIndex : 'null') + '\" class=\"btnDeleteImage autoSize\" title=\"' + globalize.translate('Delete') + '\"><span class=\"material-icons delete\"></span></button>';\n            html += '</div>';\n        }\n\n        html += '</div>';\n        html += '</div>';\n        html += '</' + tagName + '>';\n\n        return html;\n    }\n\n    function deleteImage(context, itemId, type, index, apiClient, enableConfirmation) {\n\n        var afterConfirm = function () {\n            apiClient.deleteItemImage(itemId, type, index).then(function () {\n\n                hasChanges = true;\n                reload(context);\n\n            });\n        };\n\n        if (!enableConfirmation) {\n            afterConfirm();\n            return;\n        }\n\n        require(['confirm'], function (confirm) {\n\n            confirm({\n\n                text: globalize.translate('ConfirmDeleteImage'),\n                confirmText: globalize.translate('Delete'),\n                primary: 'delete'\n\n            }).then(afterConfirm);\n        });\n    }\n\n    function moveImage(context, apiClient, itemId, type, index, newIndex, focusContext) {\n\n        apiClient.updateItemImageIndex(itemId, type, index, newIndex).then(function () {\n\n            hasChanges = true;\n            reload(context, null, focusContext);\n        }, function () {\n\n            require(['alert'], function (alert) {\n                alert(globalize.translate('DefaultErrorMessage'));\n            });\n        });\n    }\n\n    function renderImages(page, item, apiClient, images, imageProviders, elem) {\n\n        var html = '';\n\n        var imageSize = 300;\n        var windowSize = dom.getWindowSize();\n        if (windowSize.innerWidth >= 1280) {\n            imageSize = Math.round(windowSize.innerWidth / 4);\n        }\n\n        var tagName = layoutManager.tv ? 'button' : 'div';\n        var enableFooterButtons = !layoutManager.tv;\n\n        for (var i = 0, length = images.length; i < length; i++) {\n\n            var image = images[i];\n\n            html += getCardHtml(image, i, length, apiClient, imageProviders, imageSize, tagName, enableFooterButtons);\n        }\n\n        elem.innerHTML = html;\n        imageLoader.lazyChildren(elem);\n    }\n\n    function renderStandardImages(page, apiClient, item, imageInfos, imageProviders) {\n\n        var images = imageInfos.filter(function (i) {\n            return i.ImageType !== 'Screenshot' && i.ImageType !== 'Backdrop' && i.ImageType !== 'Chapter';\n        });\n\n        renderImages(page, item, apiClient, images, imageProviders, page.querySelector('#images'));\n    }\n\n    function renderBackdrops(page, apiClient, item, imageInfos, imageProviders) {\n\n        var images = imageInfos.filter(function (i) {\n            return i.ImageType === 'Backdrop';\n\n        }).sort(function (a, b) {\n            return a.ImageIndex - b.ImageIndex;\n        });\n\n        if (images.length) {\n            page.querySelector('#backdropsContainer', page).classList.remove('hide');\n            renderImages(page, item, apiClient, images, imageProviders, page.querySelector('#backdrops'));\n        } else {\n            page.querySelector('#backdropsContainer', page).classList.add('hide');\n        }\n    }\n\n    function renderScreenshots(page, apiClient, item, imageInfos, imageProviders) {\n\n        var images = imageInfos.filter(function (i) {\n            return i.ImageType === 'Screenshot';\n\n        }).sort(function (a, b) {\n            return a.ImageIndex - b.ImageIndex;\n        });\n\n        if (images.length) {\n            page.querySelector('#screenshotsContainer', page).classList.remove('hide');\n            renderImages(page, item, apiClient, images, imageProviders, page.querySelector('#screenshots'));\n        } else {\n            page.querySelector('#screenshotsContainer', page).classList.add('hide');\n        }\n    }\n\n    function showImageDownloader(page, imageType) {\n\n        require(['imageDownloader'], function (ImageDownloader) {\n\n            ImageDownloader.show(currentItem.Id, currentItem.ServerId, currentItem.Type, imageType).then(function () {\n\n                hasChanges = true;\n                reload(page);\n            });\n\n        });\n    }\n\n    function showActionSheet(context, imageCard) {\n\n        var itemId = imageCard.getAttribute('data-id');\n        var serverId = imageCard.getAttribute('data-serverid');\n        var apiClient = connectionManager.getApiClient(serverId);\n\n        var type = imageCard.getAttribute('data-imagetype');\n        var index = parseInt(imageCard.getAttribute('data-index'));\n        var providerCount = parseInt(imageCard.getAttribute('data-providers'));\n        var numImages = parseInt(imageCard.getAttribute('data-numimages'));\n\n        require(['actionsheet'], function (actionSheet) {\n\n            var commands = [];\n\n            commands.push({\n                name: globalize.translate('Delete'),\n                id: 'delete'\n            });\n\n            if (type === 'Backdrop' || type === 'Screenshot') {\n                if (index > 0) {\n                    commands.push({\n                        name: globalize.translate('MoveLeft'),\n                        id: 'moveleft'\n                    });\n                }\n\n                if (index < numImages - 1) {\n                    commands.push({\n                        name: globalize.translate('MoveRight'),\n                        id: 'moveright'\n                    });\n                }\n            }\n\n            if (providerCount) {\n                commands.push({\n                    name: globalize.translate('Search'),\n                    id: 'search'\n                });\n            }\n\n            actionSheet.show({\n\n                items: commands,\n                positionTo: imageCard\n\n            }).then(function (id) {\n\n                switch (id) {\n\n                    case 'delete':\n                        deleteImage(context, itemId, type, index, apiClient, false);\n                        break;\n                    case 'search':\n                        showImageDownloader(context, type);\n                        break;\n                    case 'moveleft':\n                        moveImage(context, apiClient, itemId, type, index, index - 1, dom.parentWithClass(imageCard, 'itemsContainer'));\n                        break;\n                    case 'moveright':\n                        moveImage(context, apiClient, itemId, type, index, index + 1, dom.parentWithClass(imageCard, 'itemsContainer'));\n                        break;\n                    default:\n                        break;\n                }\n\n            });\n        });\n    }\n\n    function initEditor(context, options) {\n\n        var uploadButtons = context.querySelectorAll('.btnOpenUploadMenu');\n        var isFileInputSupported = appHost.supports('fileinput');\n        for (var i = 0, length = uploadButtons.length; i < length; i++) {\n            if (isFileInputSupported) {\n                uploadButtons[i].classList.remove('hide');\n            } else {\n                uploadButtons[i].classList.add('hide');\n            }\n        }\n\n        addListeners(context, 'btnOpenUploadMenu', 'click', function () {\n            var imageType = this.getAttribute('data-imagetype');\n\n            require(['imageUploader'], function (imageUploader) {\n\n                imageUploader.show({\n\n                    theme: options.theme,\n                    imageType: imageType,\n                    itemId: currentItem.Id,\n                    serverId: currentItem.ServerId\n\n                }).then(function (hasChanged) {\n\n                    if (hasChanged) {\n                        hasChanges = true;\n                        reload(context);\n                    }\n                });\n            });\n        });\n\n        addListeners(context, 'btnSearchImages', 'click', function () {\n            showImageDownloader(context, this.getAttribute('data-imagetype'));\n        });\n\n        addListeners(context, 'btnBrowseAllImages', 'click', function () {\n            showImageDownloader(context, this.getAttribute('data-imagetype') || 'Primary');\n        });\n\n        addListeners(context, 'btnImageCard', 'click', function () {\n            showActionSheet(context, this);\n        });\n\n        addListeners(context, 'btnDeleteImage', 'click', function () {\n            var type = this.getAttribute('data-imagetype');\n            var index = this.getAttribute('data-index');\n            index = index === 'null' ? null : parseInt(index);\n            var apiClient = connectionManager.getApiClient(currentItem.ServerId);\n            deleteImage(context, currentItem.Id, type, index, apiClient, true);\n        });\n\n        addListeners(context, 'btnMoveImage', 'click', function () {\n            var type = this.getAttribute('data-imagetype');\n            var index = this.getAttribute('data-index');\n            var newIndex = this.getAttribute('data-newindex');\n            var apiClient = connectionManager.getApiClient(currentItem.ServerId);\n            moveImage(context, apiClient, currentItem.Id, type, index, newIndex, dom.parentWithClass(this, 'itemsContainer'));\n        });\n    }\n\n    function showEditor(options, resolve, reject) {\n\n        var itemId = options.itemId;\n        var serverId = options.serverId;\n\n        loading.show();\n\n        require(['text!./imageeditor.template.html'], function (template) {\n            var apiClient = connectionManager.getApiClient(serverId);\n            apiClient.getItem(apiClient.getCurrentUserId(), itemId).then(function (item) {\n\n                var dialogOptions = {\n                    removeOnClose: true\n                };\n\n                if (layoutManager.tv) {\n                    dialogOptions.size = 'fullscreen';\n                } else {\n                    dialogOptions.size = 'small';\n                }\n\n                var dlg = dialogHelper.createDialog(dialogOptions);\n\n                dlg.classList.add('formDialog');\n\n                dlg.innerHTML = globalize.translateDocument(template, 'core');\n\n                if (layoutManager.tv) {\n                    scrollHelper.centerFocus.on(dlg, false);\n                }\n\n                initEditor(dlg, options);\n\n                // Has to be assigned a z-index after the call to .open()\n                dlg.addEventListener('close', function () {\n\n                    if (layoutManager.tv) {\n                        scrollHelper.centerFocus.off(dlg, false);\n                    }\n\n                    loading.hide();\n\n                    if (hasChanges) {\n                        resolve();\n                    } else {\n                        reject();\n                    }\n                });\n\n                dialogHelper.open(dlg);\n\n                reload(dlg, item);\n\n                dlg.querySelector('.btnCancel').addEventListener('click', function () {\n\n                    dialogHelper.close(dlg);\n                });\n            });\n        });\n    }\n\n    return {\n        show: function (options) {\n\n            return new Promise(function (resolve, reject) {\n\n                hasChanges = false;\n\n                showEditor(options, resolve, reject);\n            });\n        }\n    };\n});\n"]}