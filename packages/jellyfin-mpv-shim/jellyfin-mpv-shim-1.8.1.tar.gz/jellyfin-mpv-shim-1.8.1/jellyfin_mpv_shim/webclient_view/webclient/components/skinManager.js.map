{"version":3,"sources":["components/skinManager.js"],"names":["define","appHost","userSettings","browser","events","backdrop","globalize","require","appSettings","themeStyleElement","currentThemeId","skinManager","getThemes","name","id","isDefault","isDefaultServerDashboard","loadUserSkin","options","start","Emby","Page","invokeShortcut","goHome","currentSound","themeResources","lastSound","onViewBeforeShow","e","detail","type","document","body","classList","remove","setBackdrop","mobile","enableThemeSongs","themeSong","playSound","Date","getTime","effect","add","path","volume","howler","sound","Howl","src","play","err","console","error","setTheme","context","Promise","resolve","reject","info","getThemeStylesheetInfo","isDefaultProperty","defaultTheme","selectedTheme","themes","i","length","theme","stylesheetPath","toUrl","themeId","linkUrl","unloadTheme","elem","parentNode","removeChild","link","createElement","setAttribute","onload","onThemeLoaded","documentElement","color","getComputedStyle","querySelector","getPropertyValue","setThemeColor","head","appendChild","loadThemeResources","stop","clear","addEventListener"],"mappings":"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","file":"skinManager.js","sourcesContent":["define(['apphost', 'userSettings', 'browser', 'events', 'backdrop', 'globalize', 'require', 'appSettings'], function (appHost, userSettings, browser, events, backdrop, globalize, require, appSettings) {\n    'use strict';\n\n    var themeStyleElement;\n    var currentThemeId;\n\n    function unloadTheme() {\n        var elem = themeStyleElement;\n        if (elem) {\n            elem.parentNode.removeChild(elem);\n            themeStyleElement = null;\n            currentThemeId = null;\n        }\n    }\n\n    function loadUserSkin(options) {\n        options = options || {};\n        if (options.start) {\n            Emby.Page.invokeShortcut(options.start);\n        } else {\n            Emby.Page.goHome();\n        }\n    }\n\n    function getThemes() {\n        return [{\n            name: 'Apple TV',\n            id: 'appletv'\n        }, {\n            name: 'Blue Radiance',\n            id: 'blueradiance'\n        }, {\n            name: 'Dark',\n            id: 'dark',\n            isDefault: true,\n            isDefaultServerDashboard: true\n        }, {\n            name: 'Light',\n            id: 'light'\n        }, {\n            name: 'Purple Haze',\n            id: 'purplehaze'\n        }, {\n            name: 'Windows Media Center',\n            id: 'wmc'\n        }];\n    }\n\n    var skinManager = {\n        getThemes: getThemes,\n        loadUserSkin: loadUserSkin\n    };\n\n    function getThemeStylesheetInfo(id, isDefaultProperty) {\n        var themes = skinManager.getThemes();\n        var defaultTheme;\n        var selectedTheme;\n\n        for (var i = 0, length = themes.length; i < length; i++) {\n            var theme = themes[i];\n            if (theme[isDefaultProperty]) {\n                defaultTheme = theme;\n            }\n            if (id === theme.id) {\n                selectedTheme = theme;\n            }\n        }\n\n        selectedTheme = selectedTheme || defaultTheme;\n        return {\n            stylesheetPath: require.toUrl('themes/' + selectedTheme.id + '/theme.css'),\n            themeId: selectedTheme.id\n        };\n    }\n\n    var themeResources = {};\n    var lastSound = 0;\n    var currentSound;\n\n    function loadThemeResources(id) {\n        lastSound = 0;\n        if (currentSound) {\n            currentSound.stop();\n            currentSound = null;\n        }\n\n        backdrop.clear();\n    }\n\n    function onThemeLoaded() {\n        document.documentElement.classList.remove('preload');\n        try {\n            var color = getComputedStyle(document.querySelector('.skinHeader')).getPropertyValue('background-color');\n            if (color) {\n                appHost.setThemeColor(color);\n            }\n        } catch (err) {\n            console.error('error setting theme color: ' + err);\n        }\n    }\n\n    skinManager.setTheme = function (id, context) {\n        return new Promise(function (resolve, reject) {\n            if (currentThemeId && currentThemeId === id) {\n                resolve();\n                return;\n            }\n\n            var isDefaultProperty = context === 'serverdashboard' ? 'isDefaultServerDashboard' : 'isDefault';\n            var info = getThemeStylesheetInfo(id, isDefaultProperty);\n            if (currentThemeId && currentThemeId === info.themeId) {\n                resolve();\n                return;\n            }\n\n            var linkUrl = info.stylesheetPath;\n            unloadTheme();\n\n            var link = document.createElement('link');\n            link.setAttribute('rel', 'stylesheet');\n            link.setAttribute('type', 'text/css');\n            link.onload = function () {\n                onThemeLoaded();\n                resolve();\n            };\n\n            link.setAttribute('href', linkUrl);\n            document.head.appendChild(link);\n            themeStyleElement = link;\n            currentThemeId = info.themeId;\n            loadThemeResources(info.themeId);\n\n            onViewBeforeShow({});\n        });\n    };\n\n    function onViewBeforeShow(e) {\n        if (e.detail && e.detail.type === 'video-osd') {\n            // This removes the space that the scrollbar takes while playing a video\n            document.body.classList.remove('force-scroll');\n            return;\n        }\n\n        if (themeResources.backdrop) {\n            backdrop.setBackdrop(themeResources.backdrop);\n        }\n\n        if (!browser.mobile && userSettings.enableThemeSongs()) {\n            if (lastSound === 0) {\n                if (themeResources.themeSong) {\n                    playSound(themeResources.themeSong);\n                }\n            } else if ((new Date().getTime() - lastSound) > 30000) {\n                if (themeResources.effect) {\n                    playSound(themeResources.effect);\n                }\n            }\n        }\n        // This keeps the scrollbar always present in all pages, so we avoid clipping while switching between pages\n        // that need the scrollbar and pages that don't.\n        document.body.classList.add('force-scroll');\n    }\n\n    document.addEventListener('viewshow', onViewBeforeShow);\n\n    function playSound(path, volume) {\n        lastSound = new Date().getTime();\n        require(['howler'], function (howler) {\n            /* globals Howl */\n            try {\n                var sound = new Howl({\n                    src: [path],\n                    volume: volume || 0.1\n                });\n                sound.play();\n                currentSound = sound;\n            } catch (err) {\n                console.error('error playing sound: ' + err);\n            }\n        });\n    }\n\n    return skinManager;\n});\n"]}