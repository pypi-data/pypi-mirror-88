{"version":3,"sources":["components/search/searchresults.js"],"names":["define","layoutManager","globalize","require","events","connectionManager","cardBuilder","appRouter","search","instance","apiClient","context","value","tv","mode","querySelector","classList","add","loadSuggestions","options","SortBy","IncludeItemTypes","Limit","Recursive","ImageTypeLimit","EnableImages","ParentId","parentId","EnableTotalRecordCount","getItems","getCurrentUserId","then","result","Items","html","map","i","itemHtml","getRouteUrl","Name","join","searchSuggestions","innerHTML","length","remove","collectionType","searchType","searchTerm","IncludePeople","IncludeMedia","IncludeGenres","IncludeStudios","IncludeArtists","IsMovie","IsKids","IsNews","preferThumb","inheritThumb","shape","showParentTitleOrTitle","showTitle","centerText","coverImage","overlayText","overlayMoreButton","showAirTime","showAirDateTime","showChannelName","showYear","IsSeries","IsSports","showParentTitle","MediaTypes","ExcludeItemTypes","overlayPlayButton","query","section","cardOptions","getSearchHints","Promise","resolve","SearchHints","allowSearch","queryIncludeItemTypes","People","isMinServerVersion","Fields","methodName","UserId","populateResults","items","itemsContainer","buildCards","Object","assign","parentContainer","scalable","allowBottomPadding","SearchResults","this","embed","elem","template","translateDocument","element","prototype","getApiClient","serverId","destroy"],"mappings":"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","file":"searchresults.js","sourcesContent":["define(['layoutManager', 'globalize', 'require', 'events', 'connectionManager', 'cardBuilder', 'appRouter', 'emby-scroller', 'emby-itemscontainer', 'emby-button'], function (layoutManager, globalize, require, events, connectionManager, cardBuilder, appRouter) {\n    'use strict';\n\n    function loadSuggestions(instance, context, apiClient) {\n\n        var options = {\n\n            SortBy: 'IsFavoriteOrLiked,Random',\n            IncludeItemTypes: 'Movie,Series,MusicArtist',\n            Limit: 20,\n            Recursive: true,\n            ImageTypeLimit: 0,\n            EnableImages: false,\n            ParentId: instance.options.parentId,\n            EnableTotalRecordCount: false\n        };\n\n        apiClient.getItems(apiClient.getCurrentUserId(), options).then(function (result) {\n\n            if (instance.mode !== 'suggestions') {\n                result.Items = [];\n            }\n\n            var html = result.Items.map(function (i) {\n\n                var href = appRouter.getRouteUrl(i);\n\n                var itemHtml = '<div><a is=\"emby-linkbutton\" class=\"button-link\" style=\"display:inline-block;padding:.5em 1em;\" href=\"' + href + '\">';\n                itemHtml += i.Name;\n                itemHtml += '</a></div>';\n                return itemHtml;\n\n            }).join('');\n\n            var searchSuggestions = context.querySelector('.searchSuggestions');\n            searchSuggestions.querySelector('.searchSuggestionsList').innerHTML = html;\n\n            if (result.Items.length) {\n                searchSuggestions.classList.remove('hide');\n            }\n        });\n    }\n\n    function getSearchHints(instance, apiClient, query) {\n\n        if (!query.searchTerm) {\n            return Promise.resolve({\n                SearchHints: []\n            });\n        }\n\n        var allowSearch = true;\n\n        var queryIncludeItemTypes = query.IncludeItemTypes;\n\n        if (instance.options.collectionType === 'tvshows') {\n            if (query.IncludeArtists) {\n                allowSearch = false;\n            } else if (queryIncludeItemTypes === 'Movie' ||\n                queryIncludeItemTypes === 'LiveTvProgram' ||\n                queryIncludeItemTypes === 'MusicAlbum' ||\n                queryIncludeItemTypes === 'Audio' ||\n                queryIncludeItemTypes === 'Book' ||\n                queryIncludeItemTypes === 'AudioBook' ||\n                queryIncludeItemTypes === 'Playlist' ||\n                queryIncludeItemTypes === 'PhotoAlbum' ||\n                query.MediaTypes === 'Video' ||\n                query.MediaTypes === 'Photo') {\n                allowSearch = false;\n            }\n        } else if (instance.options.collectionType === 'movies') {\n            if (query.IncludeArtists) {\n                allowSearch = false;\n            } else if (queryIncludeItemTypes === 'Series' ||\n                queryIncludeItemTypes === 'Episode' ||\n                queryIncludeItemTypes === 'LiveTvProgram' ||\n                queryIncludeItemTypes === 'MusicAlbum' ||\n                queryIncludeItemTypes === 'Audio' ||\n                queryIncludeItemTypes === 'Book' ||\n                queryIncludeItemTypes === 'AudioBook' ||\n                queryIncludeItemTypes === 'Playlist' ||\n                queryIncludeItemTypes === 'PhotoAlbum' ||\n                query.MediaTypes === 'Video' ||\n                query.MediaTypes === 'Photo') {\n                allowSearch = false;\n            }\n        } else if (instance.options.collectionType === 'music') {\n            if (query.People) {\n                allowSearch = false;\n            } else if (queryIncludeItemTypes === 'Series' ||\n                queryIncludeItemTypes === 'Episode' ||\n                queryIncludeItemTypes === 'LiveTvProgram' ||\n                queryIncludeItemTypes === 'Movie') {\n                allowSearch = false;\n            }\n        } else if (instance.options.collectionType === 'livetv') {\n            if (query.IncludeArtists || query.IncludePeople) {\n                allowSearch = false;\n            } else if (queryIncludeItemTypes === 'Series' ||\n                queryIncludeItemTypes === 'Episode' ||\n                queryIncludeItemTypes === 'MusicAlbum' ||\n                queryIncludeItemTypes === 'Audio' ||\n                queryIncludeItemTypes === 'Book' ||\n                queryIncludeItemTypes === 'AudioBook' ||\n                queryIncludeItemTypes === 'PhotoAlbum' ||\n                queryIncludeItemTypes === 'Movie' ||\n                query.MediaTypes === 'Video' ||\n                query.MediaTypes === 'Photo') {\n                allowSearch = false;\n            }\n        }\n        if (queryIncludeItemTypes === 'NullType') {\n            allowSearch = false;\n        }\n\n        if (!allowSearch) {\n            return Promise.resolve({\n                SearchHints: []\n            });\n        }\n\n        // Convert the search hint query to a regular item query\n        if (apiClient.isMinServerVersion('3.4.1.31')) {\n\n            query.Fields = 'PrimaryImageAspectRatio,CanDelete,BasicSyncInfo,MediaSourceCount';\n            query.Recursive = true;\n            query.EnableTotalRecordCount = false;\n            query.ImageTypeLimit = 1;\n\n            var methodName = 'getItems';\n\n            if (!query.IncludeMedia) {\n                if (query.IncludePeople) {\n                    methodName = 'getPeople';\n\n                } else if (query.IncludeArtists) {\n                    methodName = 'getArtists';\n                }\n            }\n\n            return apiClient[methodName](apiClient.getCurrentUserId(), query);\n        }\n\n        query.UserId = apiClient.getCurrentUserId();\n\n        return apiClient.getSearchHints(query);\n    }\n\n    function search(instance, apiClient, context, value) {\n\n        if (value || layoutManager.tv) {\n            instance.mode = 'search';\n            context.querySelector('.searchSuggestions').classList.add('hide');\n        } else {\n            instance.mode = 'suggestions';\n            loadSuggestions(instance, context, apiClient);\n        }\n\n        if (instance.options.collectionType === 'livetv') {\n\n            searchType(instance, apiClient, {\n                searchTerm: value,\n                IncludePeople: false,\n                IncludeMedia: true,\n                IncludeGenres: false,\n                IncludeStudios: false,\n                IncludeArtists: false,\n                IncludeItemTypes: 'LiveTvProgram',\n                IsMovie: true,\n                IsKids: false,\n                IsNews: false\n\n            }, context, '.movieResults', {\n\n                preferThumb: true,\n                inheritThumb: false,\n                shape: (enableScrollX() ? 'overflowPortrait' : 'portrait'),\n                showParentTitleOrTitle: true,\n                showTitle: false,\n                centerText: true,\n                coverImage: true,\n                overlayText: false,\n                overlayMoreButton: true,\n                showAirTime: true,\n                showAirDateTime: true,\n                showChannelName: true\n            });\n        } else {\n\n            searchType(instance, apiClient, {\n                searchTerm: value,\n                IncludePeople: false,\n                IncludeMedia: true,\n                IncludeGenres: false,\n                IncludeStudios: false,\n                IncludeArtists: false,\n                IncludeItemTypes: 'Movie'\n\n            }, context, '.movieResults', {\n\n                showTitle: true,\n                overlayText: false,\n                centerText: true,\n                showYear: true\n            });\n        }\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'Series'\n\n        }, context, '.seriesResults', {\n\n            showTitle: true,\n            overlayText: false,\n            centerText: true,\n            showYear: true\n        });\n\n        if (instance.options.collectionType === 'livetv') {\n\n            searchType(instance, apiClient, {\n                searchTerm: value,\n                IncludePeople: false,\n                IncludeMedia: true,\n                IncludeGenres: false,\n                IncludeStudios: false,\n                IncludeArtists: false,\n                IncludeItemTypes: 'LiveTvProgram',\n                IsSeries: true,\n                IsSports: false,\n                IsKids: false,\n                IsNews: false\n\n            }, context, '.episodeResults', {\n\n                preferThumb: true,\n                inheritThumb: false,\n                shape: (enableScrollX() ? 'overflowBackdrop' : 'backdrop'),\n                showParentTitleOrTitle: true,\n                showTitle: false,\n                centerText: true,\n                coverImage: true,\n                overlayText: false,\n                overlayMoreButton: true,\n                showAirTime: true,\n                showAirDateTime: true,\n                showChannelName: true\n            });\n\n        } else {\n\n            searchType(instance, apiClient, {\n                searchTerm: value,\n                IncludePeople: false,\n                IncludeMedia: true,\n                IncludeGenres: false,\n                IncludeStudios: false,\n                IncludeArtists: false,\n                IncludeItemTypes: 'Episode'\n\n            }, context, '.episodeResults', {\n\n                coverImage: true,\n                showTitle: true,\n                showParentTitle: true\n            });\n        }\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            // NullType to hide\n            IncludeItemTypes: instance.options.collectionType === 'livetv' ? 'LiveTvProgram' : 'NullType',\n            IsSports: true\n\n        }, context, '.sportsResults', {\n\n            preferThumb: true,\n            inheritThumb: false,\n            shape: (enableScrollX() ? 'overflowBackdrop' : 'backdrop'),\n            showParentTitleOrTitle: true,\n            showTitle: false,\n            centerText: true,\n            coverImage: true,\n            overlayText: false,\n            overlayMoreButton: true,\n            showAirTime: true,\n            showAirDateTime: true,\n            showChannelName: true\n\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            // NullType to hide\n            IncludeItemTypes: instance.options.collectionType === 'livetv' ? 'LiveTvProgram' : 'NullType',\n            IsKids: true\n\n        }, context, '.kidsResults', {\n\n            preferThumb: true,\n            inheritThumb: false,\n            shape: (enableScrollX() ? 'overflowBackdrop' : 'backdrop'),\n            showParentTitleOrTitle: true,\n            showTitle: false,\n            centerText: true,\n            coverImage: true,\n            overlayText: false,\n            overlayMoreButton: true,\n            showAirTime: true,\n            showAirDateTime: true,\n            showChannelName: true\n\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            // NullType to hide\n            IncludeItemTypes: instance.options.collectionType === 'livetv' ? 'LiveTvProgram' : 'NullType',\n            IsNews: true\n\n        }, context, '.newsResults', {\n\n            preferThumb: true,\n            inheritThumb: false,\n            shape: (enableScrollX() ? 'overflowBackdrop' : 'backdrop'),\n            showParentTitleOrTitle: true,\n            showTitle: false,\n            centerText: true,\n            coverImage: true,\n            overlayText: false,\n            overlayMoreButton: true,\n            showAirTime: true,\n            showAirDateTime: true,\n            showChannelName: true\n\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'LiveTvProgram',\n            IsMovie: instance.options.collectionType === 'livetv' ? false : null,\n            IsSeries: instance.options.collectionType === 'livetv' ? false : null,\n            IsSports: instance.options.collectionType === 'livetv' ? false : null,\n            IsKids: instance.options.collectionType === 'livetv' ? false : null,\n            IsNews: instance.options.collectionType === 'livetv' ? false : null\n\n        }, context, '.programResults', {\n\n            preferThumb: true,\n            inheritThumb: false,\n            shape: (enableScrollX() ? 'overflowBackdrop' : 'backdrop'),\n            showParentTitleOrTitle: true,\n            showTitle: false,\n            centerText: true,\n            coverImage: true,\n            overlayText: false,\n            overlayMoreButton: true,\n            showAirTime: true,\n            showAirDateTime: true,\n            showChannelName: true\n\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            MediaTypes: 'Video',\n            ExcludeItemTypes: 'Movie,Episode'\n\n        }, context, '.videoResults', {\n\n            showParentTitle: true,\n            showTitle: true,\n            overlayText: false,\n            centerText: true\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: true,\n            IncludeMedia: false,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false\n\n        }, context, '.peopleResults', {\n\n            coverImage: true,\n            showTitle: true\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: false,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: true\n\n        }, context, '.artistResults', {\n            coverImage: true,\n            showTitle: true\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'MusicAlbum'\n\n        }, context, '.albumResults', {\n\n            showParentTitle: true,\n            showTitle: true,\n            overlayText: false,\n            centerText: true\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'Audio'\n\n        }, context, '.songResults', {\n\n            showParentTitle: true,\n            showTitle: true,\n            overlayText: false,\n            centerText: true,\n            overlayPlayButton: true\n\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            MediaTypes: 'Photo'\n\n        }, context, '.photoResults', {\n\n            showParentTitle: false,\n            showTitle: true,\n            overlayText: false,\n            centerText: true\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'PhotoAlbum'\n\n        }, context, '.photoAlbumResults', {\n\n            showTitle: true,\n            overlayText: false,\n            centerText: true\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'Book'\n\n        }, context, '.bookResults', {\n\n            showTitle: true,\n            overlayText: false,\n            centerText: true\n\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'AudioBook'\n\n        }, context, '.audioBookResults', {\n\n            showTitle: true,\n            overlayText: false,\n            centerText: true\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'Playlist'\n\n        }, context, '.playlistResults', {\n\n            showTitle: true,\n            overlayText: false,\n            centerText: true\n        });\n    }\n\n    function searchType(instance, apiClient, query, context, section, cardOptions) {\n\n        query.Limit = enableScrollX() ? 24 : 16;\n        query.ParentId = instance.options.parentId;\n\n        getSearchHints(instance, apiClient, query).then(function (result) {\n\n            populateResults(result, context, section, cardOptions);\n        });\n    }\n\n    function populateResults(result, context, section, cardOptions) {\n\n        section = context.querySelector(section);\n\n        var items = result.Items || result.SearchHints;\n\n        var itemsContainer = section.querySelector('.itemsContainer');\n\n        cardBuilder.buildCards(items, Object.assign({\n\n            itemsContainer: itemsContainer,\n            parentContainer: section,\n            shape: enableScrollX() ? 'autooverflow' : 'auto',\n            scalable: true,\n            overlayText: false,\n            centerText: true,\n            allowBottomPadding: !enableScrollX()\n\n        }, cardOptions || {}));\n    }\n\n    function enableScrollX() {\n        return true;\n    }\n\n    function replaceAll(originalString, strReplace, strWith) {\n        var reg = new RegExp(strReplace, 'ig');\n        return originalString.replace(reg, strWith);\n    }\n\n    function embed(elem, instance, options) {\n\n        require(['text!./searchresults.template.html'], function (template) {\n\n            if (!enableScrollX()) {\n                template = replaceAll(template, 'data-horizontal=\"true\"', 'data-horizontal=\"false\"');\n                template = replaceAll(template, 'itemsContainer scrollSlider', 'itemsContainer scrollSlider vertical-wrap');\n            }\n\n            var html = globalize.translateDocument(template, 'core');\n\n            elem.innerHTML = html;\n\n            elem.classList.add('searchResults');\n            instance.search('');\n        });\n    }\n\n    function SearchResults(options) {\n\n        this.options = options;\n        embed(options.element, this, options);\n    }\n\n    SearchResults.prototype.search = function (value) {\n\n        var apiClient = connectionManager.getApiClient(this.options.serverId);\n\n        search(this, apiClient, this.options.element, value);\n    };\n\n    SearchResults.prototype.destroy = function () {\n\n        var options = this.options;\n        if (options) {\n            options.element.classList.remove('searchFields');\n        }\n        this.options = null;\n\n    };\n\n    return SearchResults;\n});\n"]}