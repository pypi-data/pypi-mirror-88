{"version":3,"sources":["components/cardbuilder/chaptercardbuilder.js"],"names":["define","_exports","_datetime","_imageLoader","_connectionManager","_layoutManager","_browser","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","buildChapterCards","enableFocusTransform","browser","slow","edge","buildChapterCard","item","apiClient","chapter","index","_ref4","className","shape","width","coverImage","imgUrl","getImgUrl","_ref2","_ref3","maxWidth","Id","ImageTag","getScaledImageUrl","tag","type","cardImageContainerClass","dataAttributes","concat","IsFolder","ServerId","Type","MediaType","StartPositionTicks","cardImageContainer","nameHtml","Name","datetime","getDisplayRunningTime","chapters","options","parentContainer","document","body","contains","length","classList","add","remove","html","buildChapterCardsHtml","layoutManager","tv","videoStream","MediaSources","MediaStreams","filter","_ref","backdropShape","Width","Height","squareShape","block","rows","itemsInRow","connectionManager","getApiClient","i","itemsContainer","innerHTML","imageLoader","lazyChildren","_default"],"mappings":"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","file":"chaptercardbuilder.js","sourcesContent":["/* eslint-disable indent */\n\n/**\n * Module for building cards from item data.\n * @module components/cardBuilder/chaptercardbuilder\n */\n\nimport datetime from 'datetime';\nimport imageLoader from 'imageLoader';\nimport connectionManager from 'connectionManager';\nimport layoutManager from 'layoutManager';\nimport browser from 'browser';\n\n    const enableFocusTransform = !browser.slow && !browser.edge;\n\n     function buildChapterCardsHtml(item, chapters, options) {\n\n        // TODO move card creation code to Card component\n\n        let className = 'card itemAction chapterCard';\n\n        if (layoutManager.tv) {\n            className += ' show-focus';\n\n            if (enableFocusTransform) {\n                className += ' show-animation';\n            }\n        }\n\n        const mediaStreams = ((item.MediaSources || [])[0] || {}).MediaStreams || [];\n        const videoStream = mediaStreams.filter(({Type}) => {\n            return Type === 'Video';\n        })[0] || {};\n\n        let shape = (options.backdropShape || 'backdrop');\n\n        if (videoStream.Width && videoStream.Height) {\n\n            if ((videoStream.Width / videoStream.Height) <= 1.2) {\n                shape = (options.squareShape || 'square');\n            }\n        }\n\n        className += ` ${shape}Card`;\n\n        if (options.block || options.rows) {\n            className += ' block';\n        }\n\n        let html = '';\n        let itemsInRow = 0;\n\n        const apiClient = connectionManager.getApiClient(item.ServerId);\n\n        for (let i = 0, length = chapters.length; i < length; i++) {\n\n            if (options.rows && itemsInRow === 0) {\n                html += '<div class=\"cardColumn\">';\n            }\n\n            const chapter = chapters[i];\n\n            html += buildChapterCard(item, apiClient, chapter, i, options, className, shape);\n            itemsInRow++;\n\n            if (options.rows && itemsInRow >= options.rows) {\n                itemsInRow = 0;\n                html += '</div>';\n            }\n        }\n\n        return html;\n    }\n\n    function getImgUrl({Id}, {ImageTag}, index, maxWidth, apiClient) {\n\n        if (ImageTag) {\n\n            return apiClient.getScaledImageUrl(Id, {\n\n                maxWidth: maxWidth * 2,\n                tag: ImageTag,\n                type: 'Chapter',\n                index\n            });\n        }\n\n        return null;\n    }\n\n    function buildChapterCard(item, apiClient, chapter, index, {width, coverImage}, className, shape) {\n\n        const imgUrl = getImgUrl(item, chapter, index, width || 400, apiClient);\n\n        let cardImageContainerClass = 'cardContent cardContent-shadow cardImageContainer chapterCardImageContainer';\n        if (coverImage) {\n            cardImageContainerClass += ' coveredImage';\n        }\n        const dataAttributes = ` data-action=\"play\" data-isfolder=\"${item.IsFolder}\" data-id=\"${item.Id}\" data-serverid=\"${item.ServerId}\" data-type=\"${item.Type}\" data-mediatype=\"${item.MediaType}\" data-positionticks=\"${chapter.StartPositionTicks}\"`;\n        let cardImageContainer = imgUrl ? (`<div class=\"${cardImageContainerClass} lazy\" data-src=\"${imgUrl}\">`) : (`<div class=\"${cardImageContainerClass}\">`);\n\n        if (!imgUrl) {\n            cardImageContainer += '<span class=\"material-icons cardImageIcon local_movies\"></span>';\n        }\n\n        let nameHtml = '';\n        nameHtml += `<div class=\"cardText\">${chapter.Name}</div>`;\n        nameHtml += `<div class=\"cardText\">${datetime.getDisplayRunningTime(chapter.StartPositionTicks)}</div>`;\n\n        const cardBoxCssClass = 'cardBox';\n        const cardScalableClass = 'cardScalable';\n\n        const html = `<button type=\"button\" class=\"${className}\"${dataAttributes}><div class=\"${cardBoxCssClass}\"><div class=\"${cardScalableClass}\"><div class=\"cardPadder-${shape}\"></div>${cardImageContainer}</div><div class=\"innerCardFooter\">${nameHtml}</div></div></div></button>`;\n\n        return html;\n    }\n\n    export function buildChapterCards(item, chapters, options) {\n\n        if (options.parentContainer) {\n            // Abort if the container has been disposed\n            if (!document.body.contains(options.parentContainer)) {\n                return;\n            }\n\n            if (chapters.length) {\n                options.parentContainer.classList.remove('hide');\n            } else {\n                options.parentContainer.classList.add('hide');\n                return;\n            }\n        }\n\n        const html = buildChapterCardsHtml(item, chapters, options);\n\n        options.itemsContainer.innerHTML = html;\n\n        imageLoader.lazyChildren(options.itemsContainer);\n    }\n\n/* eslint-enable indent */\n\nexport default {\n    buildChapterCards: buildChapterCards\n};\n\n"]}