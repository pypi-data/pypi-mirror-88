{"version":3,"sources":["components/itemContextMenu.js"],"names":["define","appHost","globalize","connectionManager","itemHelper","appRouter","playbackManager","loading","appSettings","browser","actionsheet","getCommands","options","item","user","canPlay","restrictOptions","operaTv","web0s","Policy","IsAdministrator","commands","MediaType","play","push","name","translate","id","icon","playAllFromHere","Type","getCurrentPlayer","stopPlayback","clearQueue","canQueue","queue","IsFolder","CollectionType","shuffle","instantMix","isLocalItem","length","divider","supportsAddingToCollection","supportsAddingToPlaylist","playlist","EnableLiveTvManagement","cancelTimer","Status","CanDelete","deleteItem","CanDownload","supports","canEdit","edit","text","canEditImages","editImages","LocationType","editSubtitles","identify","canIdentify","MediaSources","moremediainfo","record","TimerId","canRefreshMetadata","PlaylistItemId","playlistId","collectionId","share","canShare","sync","canSync","openAlbum","AlbumId","openArtist","AlbumArtists","getResolveFunction","resolve","changed","deleted","command","updated","executeCommand","itemId","Id","serverId","ServerId","apiClient","getApiClient","Promise","reject","require","collectionEditor","show","items","then","playlistEditor","fileDownloader","downloadHref","getItemDownloadUrl","download","url","title","Name","filename","Path","replace","textAreaCopy","textArea","document","createElement","value","body","appendChild","focus","select","execCommand","toast","prompt","removeChild","undefined","navigator","clipboard","writeText","catch","subtitleEditor","editItem","serverInfo","recordingEditor","metadataEditor","imageEditor","itemIdentifier","itemMediaInfo","refresh","refreshDialog","itemIds","mode","showItem","stop","recordingCreator","deleteHelper","navigate","Overview","concat","serverAddress","getRouteUrl","ajax","getUrl","EntryIds","join","type","Ids","deleteTimer","recordingHelper","timerId","cancelTimerWithConfirmation","deleteSeriesTimer","cancelSeriesTimerWithConfirmation","resume","queueNext","method","startPosition","UserData","PlaybackPositionTicks","ids","ChannelId","startPositionTicks","positionTo","resolveOnClick"],"mappings":"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","file":"itemContextMenu.js","sourcesContent":["define(['apphost', 'globalize', 'connectionManager', 'itemHelper', 'appRouter', 'playbackManager', 'loading', 'appSettings', 'browser', 'actionsheet'], function (appHost, globalize, connectionManager, itemHelper, appRouter, playbackManager, loading, appSettings, browser, actionsheet) {\n    'use strict';\n\n    function getCommands(options) {\n        var item = options.item;\n        var user = options.user;\n\n        var canPlay = playbackManager.canPlay(item);\n        var restrictOptions = (browser.operaTv || browser.web0s) && !user.Policy.IsAdministrator;\n\n        var commands = [];\n\n        if (canPlay && item.MediaType !== 'Photo') {\n            if (options.play !== false) {\n                commands.push({\n                    name: globalize.translate('Play'),\n                    id: 'resume',\n                    icon: 'play_arrow'\n                });\n            }\n\n            if (options.playAllFromHere && item.Type !== 'Program' && item.Type !== 'TvChannel') {\n                commands.push({\n                    name: globalize.translate('PlayAllFromHere'),\n                    id: 'playallfromhere',\n                    icon: 'play_arrow'\n                });\n            }\n        }\n\n        if (playbackManager.getCurrentPlayer() !== null) {\n            if (options.stopPlayback) {\n                commands.push({\n                    name: globalize.translate('StopPlayback'),\n                    id: 'stopPlayback',\n                    icon: 'stop'\n                });\n            }\n            if (options.clearQueue) {\n                commands.push({\n                    name: globalize.translate('ClearQueue'),\n                    id: 'clearQueue',\n                    icon: 'clear_all'\n                });\n            }\n        }\n\n        if (playbackManager.canQueue(item)) {\n            if (options.queue !== false) {\n                commands.push({\n                    name: globalize.translate('AddToPlayQueue'),\n                    id: 'queue',\n                    icon: 'playlist_add'\n                });\n            }\n\n            if (options.queue !== false) {\n                commands.push({\n                    name: globalize.translate('PlayNext'),\n                    id: 'queuenext',\n                    icon: 'playlist_add'\n                });\n            }\n        }\n\n        if (item.IsFolder || item.Type === 'MusicArtist' || item.Type === 'MusicGenre') {\n            if (item.CollectionType !== 'livetv') {\n                if (options.shuffle !== false) {\n                    commands.push({\n                        name: globalize.translate('Shuffle'),\n                        id: 'shuffle',\n                        icon: 'shuffle'\n                    });\n                }\n            }\n        }\n\n        if (item.MediaType === 'Audio' || item.Type === 'MusicAlbum' || item.Type === 'MusicArtist' || item.Type === 'MusicGenre') {\n            if (options.instantMix !== false && !itemHelper.isLocalItem(item)) {\n                commands.push({\n                    name: globalize.translate('InstantMix'),\n                    id: 'instantmix',\n                    icon: 'explore'\n                });\n            }\n        }\n\n        if (commands.length) {\n            commands.push({\n                divider: true\n            });\n        }\n\n        if (!restrictOptions) {\n            if (itemHelper.supportsAddingToCollection(item)) {\n                commands.push({\n                    name: globalize.translate('AddToCollection'),\n                    id: 'addtocollection',\n                    icon: 'playlist_add'\n                });\n            }\n\n            if (itemHelper.supportsAddingToPlaylist(item) && options.playlist !== false) {\n                commands.push({\n                    name: globalize.translate('AddToPlaylist'),\n                    id: 'addtoplaylist',\n                    icon: 'playlist_add'\n                });\n            }\n        }\n\n        if ((item.Type === 'Timer') && user.Policy.EnableLiveTvManagement && options.cancelTimer !== false) {\n            commands.push({\n                name: globalize.translate('CancelRecording'),\n                id: 'canceltimer',\n                icon: 'cancel'\n            });\n        }\n\n        if ((item.Type === 'Recording' && item.Status === 'InProgress') && user.Policy.EnableLiveTvManagement && options.cancelTimer !== false) {\n            commands.push({\n                name: globalize.translate('CancelRecording'),\n                id: 'canceltimer',\n                icon: 'cancel'\n            });\n        }\n\n        if ((item.Type === 'SeriesTimer') && user.Policy.EnableLiveTvManagement && options.cancelTimer !== false) {\n            commands.push({\n                name: globalize.translate('CancelSeries'),\n                id: 'cancelseriestimer',\n                icon: 'cancel'\n            });\n        }\n\n        if (item.CanDelete && options.deleteItem !== false) {\n\n            if (item.Type === 'Playlist' || item.Type === 'BoxSet') {\n                commands.push({\n                    name: globalize.translate('Delete'),\n                    id: 'delete',\n                    icon: 'delete'\n                });\n            } else {\n                commands.push({\n                    name: globalize.translate('DeleteMedia'),\n                    id: 'delete',\n                    icon: 'delete'\n                });\n            }\n        }\n\n        // Books are promoted to major download Button and therefor excluded in the context menu\n        if ((item.CanDownload && appHost.supports('filedownload')) && item.Type !== 'Book') {\n            commands.push({\n                name: globalize.translate('Download'),\n                id: 'download',\n                icon: 'file_download'\n            });\n\n            commands.push({\n                name: globalize.translate('CopyStreamURL'),\n                id: 'copy-stream',\n                icon: 'content_copy'\n            });\n        }\n\n        if (commands.length) {\n            commands.push({\n                divider: true\n            });\n        }\n\n        var canEdit = itemHelper.canEdit(user, item);\n        if (canEdit) {\n            if (options.edit !== false && item.Type !== 'SeriesTimer') {\n                var text = (item.Type === 'Timer' || item.Type === 'SeriesTimer') ? globalize.translate('Edit') : globalize.translate('EditMetadata');\n                commands.push({\n                    name: text,\n                    id: 'edit',\n                    icon: 'edit'\n                });\n            }\n        }\n\n        if (itemHelper.canEditImages(user, item)) {\n            if (options.editImages !== false) {\n                commands.push({\n                    name: globalize.translate('EditImages'),\n                    id: 'editimages',\n                    icon: 'image'\n                });\n            }\n        }\n\n        if (canEdit) {\n            if (item.MediaType === 'Video' && item.Type !== 'TvChannel' && item.Type !== 'Program' && item.LocationType !== 'Virtual' && !(item.Type === 'Recording' && item.Status !== 'Completed')) {\n                if (options.editSubtitles !== false) {\n                    commands.push({\n                        name: globalize.translate('EditSubtitles'),\n                        id: 'editsubtitles',\n                        icon: 'closed_caption'\n                    });\n                }\n            }\n        }\n\n        if (options.identify !== false) {\n            if (itemHelper.canIdentify(user, item)) {\n                commands.push({\n                    name: globalize.translate('Identify'),\n                    id: 'identify',\n                    icon: 'edit'\n                });\n            }\n        }\n\n        if (item.MediaSources) {\n            if (options.moremediainfo !== false) {\n                commands.push({\n                    name: globalize.translate('MoreMediaInfo'),\n                    id: 'moremediainfo',\n                    icon: 'info'\n                });\n            }\n        }\n\n        if (item.Type === 'Program' && options.record !== false) {\n            if (item.TimerId) {\n                commands.push({\n                    name: globalize.translate('ManageRecording'),\n                    id: 'record',\n                    icon: 'fiber_manual_record'\n                });\n            }\n        }\n\n        if (item.Type === 'Program' && options.record !== false) {\n            if (!item.TimerId) {\n                commands.push({\n                    name: globalize.translate('Record'),\n                    id: 'record',\n                    icon: 'fiber_manual_record'\n                });\n            }\n        }\n\n        if (itemHelper.canRefreshMetadata(item, user)) {\n            commands.push({\n                name: globalize.translate('RefreshMetadata'),\n                id: 'refresh',\n                icon: 'refresh'\n            });\n        }\n\n        if (item.PlaylistItemId && options.playlistId) {\n            commands.push({\n                name: globalize.translate('RemoveFromPlaylist'),\n                id: 'removefromplaylist',\n                icon: 'remove'\n            });\n        }\n\n        if (options.collectionId) {\n            commands.push({\n                name: globalize.translate('RemoveFromCollection'),\n                id: 'removefromcollection',\n                icon: 'remove'\n            });\n        }\n\n        if (!restrictOptions) {\n            if (options.share === true) {\n                if (itemHelper.canShare(item, user)) {\n                    commands.push({\n                        name: globalize.translate('Share'),\n                        id: 'share',\n                        icon: 'share'\n                    });\n                }\n            }\n        }\n\n        if (options.sync !== false) {\n            if (itemHelper.canSync(user, item)) {\n                commands.push({\n                    name: globalize.translate('Sync'),\n                    id: 'sync',\n                    icon: 'sync'\n                });\n            }\n        }\n\n        if (options.openAlbum !== false && item.AlbumId && item.MediaType !== 'Photo') {\n            commands.push({\n                name: globalize.translate('ViewAlbum'),\n                id: 'album',\n                icon: 'album'\n            });\n        }\n        // Show Album Artist by default, as a song can have multiple artists, which specific one would this option refer to?\n        // Although some albums can have multiple artists, it's not as common as songs.\n        if (options.openArtist !== false && item.AlbumArtists && item.AlbumArtists.length) {\n            commands.push({\n                name: globalize.translate('ViewAlbumArtist'),\n                id: 'artist',\n                icon: 'person'\n            });\n        }\n\n        return commands;\n    }\n\n    function getResolveFunction(resolve, id, changed, deleted) {\n        return function () {\n            resolve({\n                command: id,\n                updated: changed,\n                deleted: deleted\n            });\n        };\n    }\n\n    function executeCommand(item, id, options) {\n        var itemId = item.Id;\n        var serverId = item.ServerId;\n        var apiClient = connectionManager.getApiClient(serverId);\n\n        return new Promise(function (resolve, reject) {\n            switch (id) {\n                case 'addtocollection':\n                    require(['collectionEditor'], function (collectionEditor) {\n                        new collectionEditor().show({\n                            items: [itemId],\n                            serverId: serverId\n                        }).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case 'addtoplaylist':\n                    require(['playlistEditor'], function (playlistEditor) {\n                        new playlistEditor().show({\n                            items: [itemId],\n                            serverId: serverId\n                        }).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case 'download':\n                    require(['fileDownloader'], function (fileDownloader) {\n                        var downloadHref = apiClient.getItemDownloadUrl(itemId);\n                        fileDownloader.download([{\n                            url: downloadHref,\n                            itemId: itemId,\n                            serverId: serverId,\n                            title: item.Name,\n                            filename: item.Path.replace(/^.*[\\\\\\/]/, '')\n                        }]);\n                        getResolveFunction(getResolveFunction(resolve, id), id)();\n                    });\n                    break;\n                case 'copy-stream':\n                    var downloadHref = apiClient.getItemDownloadUrl(itemId);\n                    var textAreaCopy = function () {\n                        var textArea = document.createElement('textarea');\n                        textArea.value = downloadHref;\n                        document.body.appendChild(textArea);\n                        textArea.focus();\n                        textArea.select();\n\n                        if (document.execCommand('copy')) {\n                            require(['toast'], function (toast) {\n                                toast(globalize.translate('CopyStreamURLSuccess'));\n                            });\n                        } else {\n                            prompt(globalize.translate('CopyStreamURL'), downloadHref);\n                        }\n                        document.body.removeChild(textArea);\n                    };\n\n                    /* eslint-disable-next-line compat/compat */\n                    if (navigator.clipboard === undefined) {\n                        textAreaCopy();\n                    } else {\n                        /* eslint-disable-next-line compat/compat */\n                        navigator.clipboard.writeText(downloadHref).then(function () {\n                            require(['toast'], function (toast) {\n                                toast(globalize.translate('CopyStreamURLSuccess'));\n                            });\n                        }).catch(function () {\n                            textAreaCopy();\n                        });\n                    }\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'editsubtitles':\n                    require(['subtitleEditor'], function (subtitleEditor) {\n                        subtitleEditor.show(itemId, serverId).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case 'edit':\n                    editItem(apiClient, item).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    break;\n                case 'editimages':\n                    require(['imageEditor'], function (imageEditor) {\n                        imageEditor.show({\n                            itemId: itemId,\n                            serverId: serverId\n                        }).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case 'identify':\n                    require(['itemIdentifier'], function (itemIdentifier) {\n                        itemIdentifier.show(itemId, serverId).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case 'moremediainfo':\n                    require(['itemMediaInfo'], function (itemMediaInfo) {\n                        itemMediaInfo.show(itemId, serverId).then(getResolveFunction(resolve, id), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case 'refresh':\n                    refresh(apiClient, item);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'open':\n                    appRouter.showItem(item);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'play':\n                    play(item, false);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'resume':\n                    play(item, true);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'queue':\n                    play(item, false, true);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'queuenext':\n                    play(item, false, true, true);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'stopPlayback':\n                    playbackManager.stop();\n                    break;\n                case 'clearQueue':\n                    playbackManager.clearQueue();\n                    break;\n                case 'record':\n                    require(['recordingCreator'], function (recordingCreator) {\n                        recordingCreator.show(itemId, serverId).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case 'shuffle':\n                    playbackManager.shuffle(item);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'instantmix':\n                    playbackManager.instantMix(item);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'delete':\n                    deleteItem(apiClient, item).then(getResolveFunction(resolve, id, true, true), getResolveFunction(resolve, id));\n                    break;\n                case 'share':\n                    navigator.share({\n                        title: item.Name,\n                        text: item.Overview,\n                        url: `${apiClient.serverAddress()}/web/index.html#!/${appRouter.getRouteUrl(item)}`\n                    });\n                    break;\n                case 'album':\n                    appRouter.showItem(item.AlbumId, item.ServerId);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'artist':\n                    appRouter.showItem(item.AlbumArtists[0].Id, item.ServerId);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'playallfromhere':\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'queueallfromhere':\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'removefromplaylist':\n                    apiClient.ajax({\n                        url: apiClient.getUrl('Playlists/' + options.playlistId + '/Items', {\n                            EntryIds: [item.PlaylistItemId].join(',')\n                        }),\n                        type: 'DELETE'\n                    }).then(function () {\n                        getResolveFunction(resolve, id, true)();\n                    });\n                    break;\n                case 'removefromcollection':\n                    apiClient.ajax({\n                        type: 'DELETE',\n                        url: apiClient.getUrl('Collections/' + options.collectionId + '/Items', {\n\n                            Ids: [item.Id].join(',')\n                        })\n                    }).then(function () {\n                        getResolveFunction(resolve, id, true)();\n                    });\n                    break;\n                case 'canceltimer':\n                    deleteTimer(apiClient, item, resolve, id);\n                    break;\n                case 'cancelseriestimer':\n                    deleteSeriesTimer(apiClient, item, resolve, id);\n                    break;\n                default:\n                    reject();\n                    break;\n            }\n        });\n    }\n\n    function deleteTimer(apiClient, item, resolve, command) {\n        require(['recordingHelper'], function (recordingHelper) {\n            var timerId = item.TimerId || item.Id;\n            recordingHelper.cancelTimerWithConfirmation(timerId, item.ServerId).then(function () {\n                getResolveFunction(resolve, command, true)();\n            });\n        });\n    }\n\n    function deleteSeriesTimer(apiClient, item, resolve, command) {\n        require(['recordingHelper'], function (recordingHelper) {\n            recordingHelper.cancelSeriesTimerWithConfirmation(item.Id, item.ServerId).then(function () {\n                getResolveFunction(resolve, command, true)();\n            });\n        });\n    }\n\n    function play(item, resume, queue, queueNext) {\n        var method = queue ? (queueNext ? 'queueNext' : 'queue') : 'play';\n\n        var startPosition = 0;\n        if (resume && item.UserData && item.UserData.PlaybackPositionTicks) {\n            startPosition = item.UserData.PlaybackPositionTicks;\n        }\n\n        if (item.Type === 'Program') {\n            playbackManager[method]({\n                ids: [item.ChannelId],\n                startPositionTicks: startPosition,\n                serverId: item.ServerId\n            });\n        } else {\n            playbackManager[method]({\n                items: [item],\n                startPositionTicks: startPosition\n            });\n        }\n    }\n\n    function editItem(apiClient, item) {\n        return new Promise(function (resolve, reject) {\n            var serverId = apiClient.serverInfo().Id;\n\n            if (item.Type === 'Timer') {\n                require(['recordingEditor'], function (recordingEditor) {\n                    recordingEditor.show(item.Id, serverId).then(resolve, reject);\n                });\n            } else if (item.Type === 'SeriesTimer') {\n                require(['seriesRecordingEditor'], function (recordingEditor) {\n                    recordingEditor.show(item.Id, serverId).then(resolve, reject);\n                });\n            } else {\n                require(['metadataEditor'], function (metadataEditor) {\n                    metadataEditor.show(item.Id, serverId).then(resolve, reject);\n                });\n            }\n        });\n    }\n\n    function deleteItem(apiClient, item) {\n        return new Promise(function (resolve, reject) {\n            require(['deleteHelper'], function (deleteHelper) {\n                deleteHelper.deleteItem({\n                    item: item,\n                    navigate: false\n                }).then(function () {\n                    resolve(true);\n                }, reject);\n            });\n        });\n    }\n\n    function refresh(apiClient, item) {\n        require(['refreshDialog'], function (refreshDialog) {\n            new refreshDialog({\n                itemIds: [item.Id],\n                serverId: apiClient.serverInfo().Id,\n                mode: item.Type === 'CollectionFolder' ? 'scan' : null\n            }).show();\n        });\n    }\n\n    function show(options) {\n        var commands = getCommands(options);\n        if (!commands.length) {\n            return Promise.reject();\n        }\n\n        return actionsheet.show({\n            items: commands,\n            positionTo: options.positionTo,\n            resolveOnClick: ['share']\n        }).then(function (id) {\n            return executeCommand(options.item, id, options);\n        });\n    }\n\n    return {\n        getCommands: getCommands,\n        show: show\n    };\n});\n"]}