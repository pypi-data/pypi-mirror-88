{"version":3,"sources":["components/shortcuts.js"],"names":["define","playbackManager","inputManager","connectionManager","appRouter","globalize","loading","dom","recordingHelper","playAllFromHere","card","serverId","queue","startIndex","parent","parentNode","className","classList","length","cards","querySelectorAll","ids","foundCard","i","push","getAttribute","itemsContainer","parentWithClass","fetchData","queryOptions","StartIndex","then","result","items","Items","play","getItem","button","parentWithAttribute","id","type","apiClient","getApiClient","getLiveTvTimer","getLiveTvSeriesTimer","getCurrentUserId","showContextMenu","options","item","playlistId","collectionId","elem","PlaylistItemId","require","itemContextMenu","ServerId","getCurrentUser","user","show","Object","assign","IsFolder","queueAllFromHere","command","executeAction","positionTo","updated","deleted","notifyRefreshNeeded","childElement","getItemInfoFromCard","Type","Id","TimerId","CollectionType","ChannelId","SeriesId","MediaType","UserData","PlaybackPositionTicks","parseInt","target","action","playableItemId","showItem","context","parentId","showProgramDialog","recordingCreator","instantMix","startPositionTicks","isPlaying","sendToast","text","toast","translate","setCurrentPlaylistItem","onRecordCommand","timerId","seriesTimerId","programId","toggleRecording","shuffle","showPlayMenu","playMenu","editItem","Promise","resolve","reject","serverInfo","ProgramId","recordingEditor","metadataEditor","playTrailer","addToPlaylist","customAction","dispatchEvent","CustomEvent","detail","playlistItemId","cancelable","bubbles","playlistEditor","getLocalTrailers","trailers","onClick","e","actionElement","preventDefault","stopPropagation","onCommand","cmd","on","click","addEventListener","off","removeEventListener","getShortcutAttributesHtml","html","collectionType"],"mappings":"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","file":"shortcuts.js","sourcesContent":["define(['playbackManager', 'inputManager', 'connectionManager', 'appRouter', 'globalize', 'loading', 'dom', 'recordingHelper'], function (playbackManager, inputManager, connectionManager, appRouter, globalize, loading, dom, recordingHelper) {\n    'use strict';\n\n    function playAllFromHere(card, serverId, queue) {\n\n        var parent = card.parentNode;\n        var className = card.classList.length ? ('.' + card.classList[0]) : '';\n        var cards = parent.querySelectorAll(className + '[data-id]');\n\n        var ids = [];\n\n        var foundCard = false;\n        var startIndex;\n\n        for (var i = 0, length = cards.length; i < length; i++) {\n            if (cards[i] === card) {\n                foundCard = true;\n                startIndex = i;\n            }\n            if (foundCard || !queue) {\n                ids.push(cards[i].getAttribute('data-id'));\n            }\n        }\n\n        var itemsContainer = dom.parentWithClass(card, 'itemsContainer');\n        if (itemsContainer && itemsContainer.fetchData) {\n\n            var queryOptions = queue ? { StartIndex: startIndex } : {};\n\n            return itemsContainer.fetchData(queryOptions).then(function (result) {\n\n                if (queue) {\n                    return playbackManager.queue({\n                        items: result.Items\n                    });\n                } else {\n\n                    return playbackManager.play({\n                        items: result.Items,\n                        startIndex: startIndex\n                    });\n                }\n            });\n        }\n\n        if (!ids.length) {\n            return;\n        }\n\n        if (queue) {\n            return playbackManager.queue({\n                ids: ids,\n                serverId: serverId\n            });\n        } else {\n\n            return playbackManager.play({\n                ids: ids,\n                serverId: serverId,\n                startIndex: startIndex\n            });\n        }\n    }\n\n    function showProgramDialog(item) {\n\n        require(['recordingCreator'], function (recordingCreator) {\n\n            recordingCreator.show(item.Id, item.ServerId);\n        });\n    }\n\n    function getItem(button) {\n\n        button = dom.parentWithAttribute(button, 'data-id');\n        var serverId = button.getAttribute('data-serverid');\n        var id = button.getAttribute('data-id');\n        var type = button.getAttribute('data-type');\n\n        var apiClient = connectionManager.getApiClient(serverId);\n\n        if (type === 'Timer') {\n            return apiClient.getLiveTvTimer(id);\n        }\n        if (type === 'SeriesTimer') {\n            return apiClient.getLiveTvSeriesTimer(id);\n        }\n        return apiClient.getItem(apiClient.getCurrentUserId(), id);\n    }\n\n    function notifyRefreshNeeded(childElement, itemsContainer) {\n\n        itemsContainer = itemsContainer || dom.parentWithAttribute(childElement, 'is', 'emby-itemscontainer');\n\n        if (itemsContainer) {\n            itemsContainer.notifyRefreshNeeded(true);\n        }\n    }\n\n    function showContextMenu(card, options) {\n\n        getItem(card).then(function (item) {\n\n            var playlistId = card.getAttribute('data-playlistid');\n            var collectionId = card.getAttribute('data-collectionid');\n\n            if (playlistId) {\n                var elem = dom.parentWithAttribute(card, 'data-playlistitemid');\n                item.PlaylistItemId = elem ? elem.getAttribute('data-playlistitemid') : null;\n            }\n\n            require(['itemContextMenu'], function (itemContextMenu) {\n\n                connectionManager.getApiClient(item.ServerId).getCurrentUser().then(function (user) {\n                    itemContextMenu.show(Object.assign({\n                        item: item,\n                        play: true,\n                        queue: true,\n                        playAllFromHere: !item.IsFolder,\n                        queueAllFromHere: !item.IsFolder,\n                        playlistId: playlistId,\n                        collectionId: collectionId,\n                        user: user\n\n                    }, options || {})).then(function (result) {\n\n                        var itemsContainer;\n\n                        if (result.command === 'playallfromhere' || result.command === 'queueallfromhere') {\n                            executeAction(card, options.positionTo, result.command);\n                        } else if (result.updated || result.deleted) {\n                            notifyRefreshNeeded(card, options.itemsContainer);\n                        }\n                    });\n                });\n            });\n        });\n    }\n\n    function getItemInfoFromCard(card) {\n\n        return {\n            Type: card.getAttribute('data-type'),\n            Id: card.getAttribute('data-id'),\n            TimerId: card.getAttribute('data-timerid'),\n            CollectionType: card.getAttribute('data-collectiontype'),\n            ChannelId: card.getAttribute('data-channelid'),\n            SeriesId: card.getAttribute('data-seriesid'),\n            ServerId: card.getAttribute('data-serverid'),\n            MediaType: card.getAttribute('data-mediatype'),\n            IsFolder: card.getAttribute('data-isfolder') === 'true',\n            UserData: {\n                PlaybackPositionTicks: parseInt(card.getAttribute('data-positionticks') || '0')\n            }\n        };\n    }\n\n    function showPlayMenu(card, target) {\n\n        var item = getItemInfoFromCard(card);\n\n        require(['playMenu'], function (playMenu) {\n\n            playMenu.show({\n\n                item: item,\n                positionTo: target\n            });\n        });\n    }\n\n    function sendToast(text) {\n        require(['toast'], function (toast) {\n            toast(text);\n        });\n    }\n\n    function executeAction(card, target, action) {\n\n        target = target || card;\n\n        var id = card.getAttribute('data-id');\n\n        if (!id) {\n            card = dom.parentWithAttribute(card, 'data-id');\n            id = card.getAttribute('data-id');\n        }\n\n        var item = getItemInfoFromCard(card);\n\n        var serverId = item.ServerId;\n        var type = item.Type;\n\n        var playableItemId = type === 'Program' ? item.ChannelId : item.Id;\n\n        if (item.MediaType === 'Photo' && action === 'link') {\n            action = 'play';\n        }\n\n        if (action === 'link') {\n\n            appRouter.showItem(item, {\n                context: card.getAttribute('data-context'),\n                parentId: card.getAttribute('data-parentid')\n            });\n        } else if (action === 'programdialog') {\n\n            showProgramDialog(item);\n        } else if (action === 'instantmix') {\n            playbackManager.instantMix({\n                Id: playableItemId,\n                ServerId: serverId\n            });\n        } else if (action === 'play' || action === 'resume') {\n\n            var startPositionTicks = parseInt(card.getAttribute('data-positionticks') || '0');\n\n            playbackManager.play({\n                ids: [playableItemId],\n                startPositionTicks: startPositionTicks,\n                serverId: serverId\n            });\n        } else if (action === 'queue') {\n\n            if (playbackManager.isPlaying()) {\n                playbackManager.queue({\n                    ids: [playableItemId],\n                    serverId: serverId\n                });\n                sendToast(globalize.translate('MediaQueued'));\n            } else {\n                playbackManager.queue({\n                    ids: [playableItemId],\n                    serverId: serverId\n                });\n            }\n        } else if (action === 'playallfromhere') {\n            playAllFromHere(card, serverId);\n        } else if (action === 'queueallfromhere') {\n            playAllFromHere(card, serverId, true);\n        } else if (action === 'setplaylistindex') {\n            playbackManager.setCurrentPlaylistItem(card.getAttribute('data-playlistitemid'));\n        } else if (action === 'record') {\n            onRecordCommand(serverId, id, type, card.getAttribute('data-timerid'), card.getAttribute('data-seriestimerid'));\n        } else if (action === 'menu') {\n\n            var options = target.getAttribute('data-playoptions') === 'false' ?\n                {\n                    shuffle: false,\n                    instantMix: false,\n                    play: false,\n                    playAllFromHere: false,\n                    queue: false,\n                    queueAllFromHere: false\n                } :\n                {};\n\n            options.positionTo = target;\n\n            showContextMenu(card, options);\n        } else if (action === 'playmenu') {\n            showPlayMenu(card, target);\n        } else if (action === 'edit') {\n            getItem(target).then(function (item) {\n                editItem(item, serverId);\n            });\n        } else if (action === 'playtrailer') {\n            getItem(target).then(playTrailer);\n        } else if (action === 'addtoplaylist') {\n            getItem(target).then(addToPlaylist);\n        } else if (action === 'custom') {\n\n            var customAction = target.getAttribute('data-customaction');\n\n            card.dispatchEvent(new CustomEvent('action-' + customAction, {\n                detail: {\n                    playlistItemId: card.getAttribute('data-playlistitemid')\n                },\n                cancelable: false,\n                bubbles: true\n            }));\n        }\n    }\n\n    function addToPlaylist(item) {\n        require(['playlistEditor'], function (playlistEditor) {\n\n            new playlistEditor().show({\n                items: [item.Id],\n                serverId: item.ServerId\n\n            });\n        });\n    }\n\n    function playTrailer(item) {\n\n        var apiClient = connectionManager.getApiClient(item.ServerId);\n\n        apiClient.getLocalTrailers(apiClient.getCurrentUserId(), item.Id).then(function (trailers) {\n            playbackManager.play({ items: trailers });\n        });\n    }\n\n    function editItem(item, serverId) {\n\n        var apiClient = connectionManager.getApiClient(serverId);\n\n        return new Promise(function (resolve, reject) {\n\n            var serverId = apiClient.serverInfo().Id;\n\n            if (item.Type === 'Timer') {\n                if (item.ProgramId) {\n                    require(['recordingCreator'], function (recordingCreator) {\n\n                        recordingCreator.show(item.ProgramId, serverId).then(resolve, reject);\n                    });\n                } else {\n                    require(['recordingEditor'], function (recordingEditor) {\n\n                        recordingEditor.show(item.Id, serverId).then(resolve, reject);\n                    });\n                }\n            } else {\n                require(['metadataEditor'], function (metadataEditor) {\n\n                    metadataEditor.show(item.Id, serverId).then(resolve, reject);\n                });\n            }\n        });\n    }\n\n    function onRecordCommand(serverId, id, type, timerId, seriesTimerId) {\n\n        if (type === 'Program' || timerId || seriesTimerId) {\n\n            var programId = type === 'Program' ? id : null;\n            recordingHelper.toggleRecording(serverId, programId, timerId, seriesTimerId);\n        }\n    }\n\n    function onClick(e) {\n\n        var card = dom.parentWithClass(e.target, 'itemAction');\n\n        if (card) {\n\n            var actionElement = card;\n            var action = actionElement.getAttribute('data-action');\n\n            if (!action) {\n                actionElement = dom.parentWithAttribute(actionElement, 'data-action');\n                if (actionElement) {\n                    action = actionElement.getAttribute('data-action');\n                }\n            }\n\n            if (action) {\n                executeAction(card, actionElement, action);\n\n                e.preventDefault();\n                e.stopPropagation();\n                return false;\n            }\n        }\n    }\n\n    function onCommand(e) {\n\n        var cmd = e.detail.command;\n\n        if (cmd === 'play' || cmd === 'resume' || cmd === 'record' || cmd === 'menu' || cmd === 'info') {\n\n            var target = e.target;\n            var card = dom.parentWithClass(target, 'itemAction') || dom.parentWithAttribute(target, 'data-id');\n\n            if (card) {\n                e.preventDefault();\n                e.stopPropagation();\n                executeAction(card, card, cmd);\n            }\n        }\n    }\n\n    function on(context, options) {\n\n        options = options || {};\n\n        if (options.click !== false) {\n            context.addEventListener('click', onClick);\n        }\n\n        if (options.command !== false) {\n            inputManager.on(context, onCommand);\n        }\n    }\n\n    function off(context, options) {\n        options = options || {};\n\n        context.removeEventListener('click', onClick);\n\n        if (options.command !== false) {\n            inputManager.off(context, onCommand);\n        }\n    }\n\n    function getShortcutAttributesHtml(item, serverId) {\n\n        var html = 'data-id=\"' + item.Id + '\" data-serverid=\"' + (serverId || item.ServerId) + '\" data-type=\"' + item.Type + '\" data-mediatype=\"' + item.MediaType + '\" data-channelid=\"' + item.ChannelId + '\" data-isfolder=\"' + item.IsFolder + '\"';\n\n        var collectionType = item.CollectionType;\n        if (collectionType) {\n            html += ' data-collectiontype=\"' + collectionType + '\"';\n        }\n\n        return html;\n    }\n\n    return {\n        on: on,\n        off: off,\n        onClick: onClick,\n        getShortcutAttributesHtml: getShortcutAttributesHtml\n    };\n\n});\n"]}