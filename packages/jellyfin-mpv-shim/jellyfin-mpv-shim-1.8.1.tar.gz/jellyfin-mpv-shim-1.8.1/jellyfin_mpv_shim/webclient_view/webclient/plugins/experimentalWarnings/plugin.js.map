{"version":3,"sources":["plugins/experimentalWarnings/plugin.js"],"names":["define","connectionManager","globalize","userSettings","appHost","showMessage","text","userSettingsKey","appHostFeature","supports","Promise","resolve","now","Date","getFullYear","getWeek","date","d","UTC","getMonth","getDate","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","Math","ceil","get","reject","set","require","alert","then","ExpirementalPlaybackWarnings","this","name","type","id","prototype","intercept","options","item","VideoType","showIsoMessage","translate","showBlurayMessage","showDvdMessage"],"mappings":"AAAA,aAAAA,OAAO,CAAC,oBAAqB,YAAa,eAAgB,YAAY,SAAUC,kBAAmBC,UAAWC,aAAcC,SAoBxH,SAASC,YAAYC,KAAMC,gBAAiBC,gBAExC,GAAIJ,QAAQK,SAASD,gBACjB,OAAOE,QAAQC,UAGnB,IAAIC,IAAM,IAAIC,KAId,OAFAN,iBAAmBK,IAAIE,cAAgB,KAhB3C,SAASC,QAAQC,MACb,IAAIC,EAAI,IAAIJ,KAAKA,KAAKK,IAAIF,KAAKF,cAAeE,KAAKG,WAAYH,KAAKI,YAChEC,OAASJ,EAAEK,aAAe,EAC9BL,EAAEM,WAAWN,EAAEO,aAAe,EAAIH,QAClC,IAAII,UAAY,IAAIZ,KAAKA,KAAKK,IAAID,EAAES,iBAAkB,EAAG,IACzD,OAAOC,KAAKC,OAAQX,EAAIQ,WAAa,MAAY,GAAK,GAWRV,CAAQH,KAEL,MAA7CT,aAAa0B,IAAItB,iBAAiB,GAC3BG,QAAQC,UAGZ,IAAID,SAAQ,SAAUC,QAASmB,QAElC3B,aAAa4B,IAAIxB,gBAAiB,KAAK,GAEvCyB,QAAQ,CAAC,UAAU,SAAUC,OAEzB,OAAOA,MAAM3B,MAAM4B,KAAKvB,QAASA,eAiB7C,SAASwB,+BAELC,KAAKC,KAAO,iCACZD,KAAKE,KAAO,mBACZF,KAAKG,GAAK,+BAyBd,OAtBAJ,6BAA6BK,UAAUC,UAAY,SAAUC,SAEzD,IAAIC,KAAOD,QAAQC,KACnB,OAAKA,KAIkB,QAAnBA,KAAKC,UAlBb,SAASC,iBACL,OAAOxC,YAAYH,UAAU4C,UAAU,uBAAwB,sBAAuB,qBAkB3ED,GAGY,WAAnBF,KAAKC,UA9Bb,SAASG,oBACL,OAAO1C,YAAYH,UAAU4C,UAAU,uBAAwB,yBAA0B,wBA8B9EC,GAGY,QAAnBJ,KAAKC,UA9Bb,SAASI,iBACL,OAAO3C,YAAYH,UAAU4C,UAAU,uBAAwB,sBAAuB,qBA8B3EE,GAGJtC,QAAQC,UAfJD,QAAQC,WAkBhBwB","file":"plugin.js","sourcesContent":["define(['connectionManager', 'globalize', 'userSettings', 'apphost'], function (connectionManager, globalize, userSettings, appHost) {\n    'use strict';\n\n    function getRequirePromise(deps) {\n\n        return new Promise(function (resolve, reject) {\n\n            require(deps, resolve);\n        });\n    }\n\n    // https://stackoverflow.com/questions/6117814/get-week-of-year-in-javascript-like-in-php\n    function getWeek(date) {\n        var d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n        var dayNum = d.getUTCDay() || 7;\n        d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n        var yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n        return Math.ceil((((d - yearStart) / 86400000) + 1) / 7);\n    }\n\n    function showMessage(text, userSettingsKey, appHostFeature) {\n\n        if (appHost.supports(appHostFeature)) {\n            return Promise.resolve();\n        }\n\n        var now = new Date();\n\n        userSettingsKey += now.getFullYear() + '-w' + getWeek(now);\n\n        if (userSettings.get(userSettingsKey, false) === '1') {\n            return Promise.resolve();\n        }\n\n        return new Promise(function (resolve, reject) {\n\n            userSettings.set(userSettingsKey, '1', false);\n\n            require(['alert'], function (alert) {\n\n                return alert(text).then(resolve, resolve);\n            });\n        });\n    }\n\n    function showBlurayMessage() {\n        return showMessage(globalize.translate('UnsupportedPlayback'), 'blurayexpirementalinfo', 'nativeblurayplayback');\n    }\n\n    function showDvdMessage() {\n        return showMessage(globalize.translate('UnsupportedPlayback'), 'dvdexpirementalinfo', 'nativedvdplayback');\n    }\n\n    function showIsoMessage() {\n        return showMessage(globalize.translate('UnsupportedPlayback'), 'isoexpirementalinfo', 'nativeisoplayback');\n    }\n\n    function ExpirementalPlaybackWarnings() {\n\n        this.name = 'Experimental playback warnings';\n        this.type = 'preplayintercept';\n        this.id = 'expirementalplaybackwarnings';\n    }\n\n    ExpirementalPlaybackWarnings.prototype.intercept = function (options) {\n\n        var item = options.item;\n        if (!item) {\n            return Promise.resolve();\n        }\n\n        if (item.VideoType === 'Iso') {\n            return showIsoMessage();\n        }\n\n        if (item.VideoType === 'BluRay') {\n            return showBlurayMessage();\n        }\n\n        if (item.VideoType === 'Dvd') {\n            return showDvdMessage();\n        }\n\n        return Promise.resolve();\n    };\n\n    return ExpirementalPlaybackWarnings;\n});\n"]}