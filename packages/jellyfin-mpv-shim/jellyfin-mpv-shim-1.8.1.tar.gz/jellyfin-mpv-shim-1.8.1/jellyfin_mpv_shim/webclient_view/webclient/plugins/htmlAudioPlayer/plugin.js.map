{"version":3,"sources":["plugins/htmlAudioPlayer/plugin.js"],"names":["define","events","browser","require","appHost","appSettings","htmlMediaHelper","fadeTimeout","supportedFeatures","cancelFadeTimeout","clearTimeout","HtmlAudioPlayer","self","this","unBindEvents","elem","removeEventListener","onTimeUpdate","onEnded","onVolumeChange","onPause","onPlaying","onPlay","onWaiting","onEndedInternal","onError","time","currentTime","_isFadingOut","_currentTime","trigger","saveVolume","volume","e","_started","removeAttribute","seekOnPlaybackStart","target","_currentPlayOptions","playerStartPositionTicks","type","errorCode","error","code","errorMessage","message","console","toString","_hlsPlayer","handleHlsJsMediaError","onErrorInternal","name","id","priority","play","options","_timeUpdated","setCurrentSrc","bindEvents","addEventListener","val","url","debug","seconds","destroyHlsPlayer","crossOrigin","getCrossOriginValue","mediaSource","enableHlsPlayer","item","mediaType","enableHlsJsPlayer","RunTimeTicks","indexOf","Promise","resolve","reject","fetchHelper","ajax","then","response","headers","get","toLowerCase","requireHlsPlayer","callback","hls","window","Hls","manifestLoadingTimeOut","xhrSetup","xhr","withCredentials","loadSource","attachMedia","bindEventsToHlsPlayer","_currentSrc","autoplay","applySrc","playWithPromise","createMediaElement","_mediaElement","document","querySelector","createElement","classList","add","body","appendChild","getSavedVolume","stop","destroyPlayer","src","supportsFade","tv","pause","destroy","originalVolume","fade","instance","startingVolume","newVolume","Math","max","setTimeout","prototype","currentSrc","canPlayMediaType","getDeviceProfile","getDefaultProfile","profileBuilder","mediaElement","duration","isValidDuration","seekable","length","start","end","getBufferedRanges","resume","unpause","paused","setPlaybackRate","value","playbackRate","getPlaybackRate","setVolume","getVolume","min","round","volumeUp","volumeDown","setMute","mute","muted","isMuted","supports","feature","getSupportedFeatures","list","push"],"mappings":"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","file":"plugin.js","sourcesContent":["define(['events', 'browser', 'require', 'apphost', 'appSettings', 'htmlMediaHelper'], function (events, browser, require, appHost, appSettings, htmlMediaHelper) {\n    'use strict';\n\n    function getDefaultProfile() {\n        return new Promise(function (resolve, reject) {\n            require(['browserdeviceprofile'], function (profileBuilder) {\n                resolve(profileBuilder({}));\n            });\n        });\n    }\n\n    var fadeTimeout;\n    function fade(instance, elem, startingVolume) {\n        instance._isFadingOut = true;\n\n        // Need to record the starting volume on each pass rather than querying elem.volume\n        // This is due to iOS safari not allowing volume changes and always returning the system volume value\n        var newVolume = Math.max(0, startingVolume - 0.15);\n        console.debug('fading volume to ' + newVolume);\n        elem.volume = newVolume;\n\n        if (newVolume <= 0) {\n            instance._isFadingOut = false;\n            return Promise.resolve();\n        }\n\n        return new Promise(function (resolve, reject) {\n            cancelFadeTimeout();\n            fadeTimeout = setTimeout(function () {\n                fade(instance, elem, newVolume).then(resolve, reject);\n            }, 100);\n        });\n    }\n\n    function cancelFadeTimeout() {\n        var timeout = fadeTimeout;\n        if (timeout) {\n            clearTimeout(timeout);\n            fadeTimeout = null;\n        }\n    }\n\n    function supportsFade() {\n        if (browser.tv) {\n            // Not working on tizen.\n            // We could possibly enable on other tv's, but all smart tv browsers tend to be pretty primitive\n            return false;\n        }\n\n        return true;\n    }\n\n    function requireHlsPlayer(callback) {\n        require(['hlsjs'], function (hls) {\n            window.Hls = hls;\n            callback();\n        });\n    }\n\n    function enableHlsPlayer(url, item, mediaSource, mediaType) {\n        if (!htmlMediaHelper.enableHlsJsPlayer(mediaSource.RunTimeTicks, mediaType)) {\n            return Promise.reject();\n        }\n\n        if (url.indexOf('.m3u8') !== -1) {\n            return Promise.resolve();\n        }\n\n        // issue head request to get content type\n        return new Promise(function (resolve, reject) {\n\n            require(['fetchHelper'], function (fetchHelper) {\n                fetchHelper.ajax({\n                    url: url,\n                    type: 'HEAD'\n                }).then(function (response) {\n                    var contentType = (response.headers.get('Content-Type') || '').toLowerCase();\n                    if (contentType === 'application/x-mpegurl') {\n                        resolve();\n                    } else {\n                        reject();\n                    }\n                }, reject);\n            });\n        });\n    }\n\n    function HtmlAudioPlayer() {\n        var self = this;\n\n        self.name = 'Html Audio Player';\n        self.type = 'mediaplayer';\n        self.id = 'htmlaudioplayer';\n\n        // Let any players created by plugins take priority\n        self.priority = 1;\n\n        self.play = function (options) {\n\n            self._started = false;\n            self._timeUpdated = false;\n            self._currentTime = null;\n\n            var elem = createMediaElement();\n            return setCurrentSrc(elem, options);\n        };\n\n        function setCurrentSrc(elem, options) {\n\n            elem.removeEventListener('error', onError);\n\n            unBindEvents(elem);\n            bindEvents(elem);\n\n            var val = options.url;\n            console.debug('playing url: ' + val);\n\n            // Convert to seconds\n            var seconds = (options.playerStartPositionTicks || 0) / 10000000;\n            if (seconds) {\n                val += '#t=' + seconds;\n            }\n\n            htmlMediaHelper.destroyHlsPlayer(self);\n\n            self._currentPlayOptions = options;\n\n            var crossOrigin = htmlMediaHelper.getCrossOriginValue(options.mediaSource);\n            if (crossOrigin) {\n                elem.crossOrigin = crossOrigin;\n            }\n\n            return enableHlsPlayer(val, options.item, options.mediaSource, 'Audio').then(function () {\n\n                return new Promise(function (resolve, reject) {\n\n                    requireHlsPlayer(function () {\n                        var hls = new Hls({\n                            manifestLoadingTimeOut: 20000,\n                            xhrSetup: function(xhr, url) {\n                                xhr.withCredentials = true;\n                            }\n                            //appendErrorMaxRetry: 6,\n                            //debug: true\n                        });\n                        hls.loadSource(val);\n                        hls.attachMedia(elem);\n\n                        htmlMediaHelper.bindEventsToHlsPlayer(self, hls, elem, onError, resolve, reject);\n\n                        self._hlsPlayer = hls;\n\n                        self._currentSrc = val;\n                    });\n                });\n\n            }, function () {\n\n                elem.autoplay = true;\n\n                // Safari will not send cookies without this\n                elem.crossOrigin = 'use-credentials';\n\n                return htmlMediaHelper.applySrc(elem, val, options).then(function () {\n\n                    self._currentSrc = val;\n\n                    return htmlMediaHelper.playWithPromise(elem, onError);\n                });\n            });\n        }\n\n        function bindEvents(elem) {\n            elem.addEventListener('timeupdate', onTimeUpdate);\n            elem.addEventListener('ended', onEnded);\n            elem.addEventListener('volumechange', onVolumeChange);\n            elem.addEventListener('pause', onPause);\n            elem.addEventListener('playing', onPlaying);\n            elem.addEventListener('play', onPlay);\n            elem.addEventListener('waiting', onWaiting);\n        }\n\n        function unBindEvents(elem) {\n            elem.removeEventListener('timeupdate', onTimeUpdate);\n            elem.removeEventListener('ended', onEnded);\n            elem.removeEventListener('volumechange', onVolumeChange);\n            elem.removeEventListener('pause', onPause);\n            elem.removeEventListener('playing', onPlaying);\n            elem.removeEventListener('play', onPlay);\n            elem.removeEventListener('waiting', onWaiting);\n        }\n\n        self.stop = function (destroyPlayer) {\n\n            cancelFadeTimeout();\n\n            var elem = self._mediaElement;\n            var src = self._currentSrc;\n\n            if (elem && src) {\n\n                if (!destroyPlayer || !supportsFade()) {\n\n                    elem.pause();\n\n                    htmlMediaHelper.onEndedInternal(self, elem, onError);\n\n                    if (destroyPlayer) {\n                        self.destroy();\n                    }\n                    return Promise.resolve();\n                }\n\n                var originalVolume = elem.volume;\n\n                return fade(self, elem, elem.volume).then(function () {\n\n                    elem.pause();\n                    elem.volume = originalVolume;\n\n                    htmlMediaHelper.onEndedInternal(self, elem, onError);\n\n                    if (destroyPlayer) {\n                        self.destroy();\n                    }\n                });\n            }\n            return Promise.resolve();\n        };\n\n        self.destroy = function () {\n            unBindEvents(self._mediaElement);\n        };\n\n        function createMediaElement() {\n\n            var elem = self._mediaElement;\n\n            if (elem) {\n                return elem;\n            }\n\n            elem = document.querySelector('.mediaPlayerAudio');\n\n            if (!elem) {\n                elem = document.createElement('audio');\n                elem.classList.add('mediaPlayerAudio');\n                elem.classList.add('hide');\n\n                document.body.appendChild(elem);\n            }\n\n            elem.volume = htmlMediaHelper.getSavedVolume();\n\n            self._mediaElement = elem;\n\n            return elem;\n        }\n\n        function onEnded() {\n\n            htmlMediaHelper.onEndedInternal(self, this, onError);\n        }\n\n        function onTimeUpdate() {\n\n            // Get the player position + the transcoding offset\n            var time = this.currentTime;\n\n            // Don't trigger events after user stop\n            if (!self._isFadingOut) {\n                self._currentTime = time;\n                events.trigger(self, 'timeupdate');\n            }\n        }\n\n        function onVolumeChange() {\n\n            if (!self._isFadingOut) {\n                htmlMediaHelper.saveVolume(this.volume);\n                events.trigger(self, 'volumechange');\n            }\n        }\n\n        function onPlaying(e) {\n\n            if (!self._started) {\n                self._started = true;\n                this.removeAttribute('controls');\n\n                htmlMediaHelper.seekOnPlaybackStart(self, e.target, self._currentPlayOptions.playerStartPositionTicks);\n            }\n            events.trigger(self, 'playing');\n        }\n\n        function onPlay(e) {\n\n            events.trigger(self, 'unpause');\n        }\n\n        function onPause() {\n            events.trigger(self, 'pause');\n        }\n\n        function onWaiting() {\n            events.trigger(self, 'waiting');\n        }\n\n        function onError() {\n\n            var errorCode = this.error ? (this.error.code || 0) : 0;\n            var errorMessage = this.error ? (this.error.message || '') : '';\n            console.error('media element error: ' + errorCode.toString() + ' ' + errorMessage);\n\n            var type;\n\n            switch (errorCode) {\n                case 1:\n                    // MEDIA_ERR_ABORTED\n                    // This will trigger when changing media while something is playing\n                    return;\n                case 2:\n                    // MEDIA_ERR_NETWORK\n                    type = 'network';\n                    break;\n                case 3:\n                    // MEDIA_ERR_DECODE\n                    if (self._hlsPlayer) {\n                        htmlMediaHelper.handleHlsJsMediaError(self);\n                        return;\n                    } else {\n                        type = 'mediadecodeerror';\n                    }\n                    break;\n                case 4:\n                    // MEDIA_ERR_SRC_NOT_SUPPORTED\n                    type = 'medianotsupported';\n                    break;\n                default:\n                    // seeing cases where Edge is firing error events with no error code\n                    // example is start playing something, then immediately change src to something else\n                    return;\n            }\n\n            htmlMediaHelper.onErrorInternal(self, type);\n        }\n    }\n\n    HtmlAudioPlayer.prototype.currentSrc = function () {\n        return this._currentSrc;\n    };\n\n    HtmlAudioPlayer.prototype.canPlayMediaType = function (mediaType) {\n\n        return (mediaType || '').toLowerCase() === 'audio';\n    };\n\n    HtmlAudioPlayer.prototype.getDeviceProfile = function (item) {\n\n        if (appHost.getDeviceProfile) {\n            return appHost.getDeviceProfile(item);\n        }\n\n        return getDefaultProfile();\n    };\n\n    // Save this for when playback stops, because querying the time at that point might return 0\n    HtmlAudioPlayer.prototype.currentTime = function (val) {\n\n        var mediaElement = this._mediaElement;\n        if (mediaElement) {\n            if (val != null) {\n                mediaElement.currentTime = val / 1000;\n                return;\n            }\n\n            var currentTime = this._currentTime;\n            if (currentTime) {\n                return currentTime * 1000;\n            }\n\n            return (mediaElement.currentTime || 0) * 1000;\n        }\n    };\n\n    HtmlAudioPlayer.prototype.duration = function (val) {\n\n        var mediaElement = this._mediaElement;\n        if (mediaElement) {\n            var duration = mediaElement.duration;\n            if (htmlMediaHelper.isValidDuration(duration)) {\n                return duration * 1000;\n            }\n        }\n\n        return null;\n    };\n\n    HtmlAudioPlayer.prototype.seekable = function () {\n        var mediaElement = this._mediaElement;\n        if (mediaElement) {\n\n            var seekable = mediaElement.seekable;\n            if (seekable && seekable.length) {\n\n                var start = seekable.start(0);\n                var end = seekable.end(0);\n\n                if (!htmlMediaHelper.isValidDuration(start)) {\n                    start = 0;\n                }\n                if (!htmlMediaHelper.isValidDuration(end)) {\n                    end = 0;\n                }\n\n                return (end - start) > 0;\n            }\n\n            return false;\n        }\n    };\n\n    HtmlAudioPlayer.prototype.getBufferedRanges = function () {\n        var mediaElement = this._mediaElement;\n        if (mediaElement) {\n\n            return htmlMediaHelper.getBufferedRanges(this, mediaElement);\n        }\n\n        return [];\n    };\n\n    HtmlAudioPlayer.prototype.pause = function () {\n        var mediaElement = this._mediaElement;\n        if (mediaElement) {\n            mediaElement.pause();\n        }\n    };\n\n    // This is a retry after error\n    HtmlAudioPlayer.prototype.resume = function () {\n        var mediaElement = this._mediaElement;\n        if (mediaElement) {\n            mediaElement.play();\n        }\n    };\n\n    HtmlAudioPlayer.prototype.unpause = function () {\n        var mediaElement = this._mediaElement;\n        if (mediaElement) {\n            mediaElement.play();\n        }\n    };\n\n    HtmlAudioPlayer.prototype.paused = function () {\n\n        var mediaElement = this._mediaElement;\n        if (mediaElement) {\n            return mediaElement.paused;\n        }\n\n        return false;\n    };\n\n    HtmlAudioPlayer.prototype.setPlaybackRate = function (value) {\n        var mediaElement = this._mediaElement;\n        if (mediaElement) {\n            mediaElement.playbackRate = value;\n        }\n    };\n\n    HtmlAudioPlayer.prototype.getPlaybackRate = function () {\n        var mediaElement = this._mediaElement;\n        if (mediaElement) {\n            return mediaElement.playbackRate;\n        }\n        return null;\n    };\n\n    HtmlAudioPlayer.prototype.setVolume = function (val) {\n        var mediaElement = this._mediaElement;\n        if (mediaElement) {\n            mediaElement.volume = val / 100;\n        }\n    };\n\n    HtmlAudioPlayer.prototype.getVolume = function () {\n        var mediaElement = this._mediaElement;\n        if (mediaElement) {\n\n            return Math.min(Math.round(mediaElement.volume * 100), 100);\n        }\n    };\n\n    HtmlAudioPlayer.prototype.volumeUp = function () {\n        this.setVolume(Math.min(this.getVolume() + 2, 100));\n    };\n\n    HtmlAudioPlayer.prototype.volumeDown = function () {\n        this.setVolume(Math.max(this.getVolume() - 2, 0));\n    };\n\n    HtmlAudioPlayer.prototype.setMute = function (mute) {\n\n        var mediaElement = this._mediaElement;\n        if (mediaElement) {\n            mediaElement.muted = mute;\n        }\n    };\n\n    HtmlAudioPlayer.prototype.isMuted = function () {\n        var mediaElement = this._mediaElement;\n        if (mediaElement) {\n            return mediaElement.muted;\n        }\n        return false;\n    };\n\n    HtmlAudioPlayer.prototype.destroy = function () {\n\n    };\n\n    var supportedFeatures;\n\n    function getSupportedFeatures() {\n        var list = [];\n        var audio = document.createElement('audio');\n\n        if (typeof audio.playbackRate === 'number') {\n            list.push('PlaybackRate');\n        }\n\n        return list;\n    }\n\n    HtmlAudioPlayer.prototype.supports = function (feature) {\n        if (!supportedFeatures) {\n            supportedFeatures = getSupportedFeatures();\n        }\n\n        return supportedFeatures.indexOf(feature) !== -1;\n    };\n\n    return HtmlAudioPlayer;\n});\n"]}