{"version":3,"sources":["scripts/editorsidebar.js"],"names":["define","datetime","$","globalize","getNode","item","folderState","selected","htmlName","getNodeInnerHtml","node","id","Id","text","state","opened","IsFolder","li_attr","serveritemtype","Type","collectiontype","CollectionType","children","icon","loadedFromServer","selectedNodeId","name","Name","Number","IndexNumber","MediaType","LockData","loadNode","page","scope","openItems","selectedId","currentUser","callback","query","ParentId","Fields","IsVirtualUnaired","IsMissing","EnableTotalRecordCount","EnableImages","EnableUserData","itemtype","SortBy","ApiClient","getItems","Dashboard","getCurrentUserId","then","result","nodes","Items","map","n","indexOf","call","i","length","nodesToLoad","push","loadMediaFolders","getJSON","getUrl","loadLiveTvChannels","service","getLiveTvChannels","ServiceName","AddCurrentProgram","loadChildrenOfRootNode","limit","translate","TotalRecordCount","initializeTree","require","initializeTreeInternal","jstree","destroy","plugins","core","check_callback","data","this","themes","variant","off","onNodeSelect","on","onNodeOpen","onNodeLoad","event","eventData","itemType","serverItemType","collectionType","dispatchEvent","CustomEvent","detail","bubbles","cancelable","document","querySelector","classList","add","remove","parents","loadNodesToLoad","reference","load_node","loadNodeCallback","child","filter","setTimeout","scrollToNode","elem","scrollIntoView","getCurrentItemId","itemId","url","window","location","hash","href","getParameterByName","e","updateEditorNode","append","tree","jQuery","_reference","currentNode","_get_node","refresh","getCurrentUser","user","getAncestorItems","ancestors","ids","MetadataEditor","getItemPromise","currentItemId","getItem","getRootFolder","setCurrentItemId"],"mappings":"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","file":"editorsidebar.js","sourcesContent":["define(['datetime', 'jQuery', 'globalize', 'material-icons'], function (datetime, $, globalize) {\n    'use strict';\n\n    function getNode(item, folderState, selected) {\n        var htmlName = getNodeInnerHtml(item);\n        var node = {\n            id: item.Id,\n            text: htmlName,\n            state: {\n                opened: item.IsFolder && folderState == 'open',\n                selected: selected\n            },\n            li_attr: {\n                serveritemtype: item.Type,\n                collectiontype: item.CollectionType\n            }\n        };\n        if (item.IsFolder) {\n            node.children = [{\n                text: 'Loading...',\n                icon: false\n            }];\n            node.icon = false;\n        } else {\n            node.icon = false;\n        }\n        if (node.state.opened) {\n            node.li_attr.loadedFromServer = true;\n        }\n        if (selected) {\n            selectedNodeId = item.Id;\n        }\n        return node;\n    }\n\n    function getNodeInnerHtml(item) {\n        var name = item.Name;\n        if (item.Number) {\n            name = item.Number + ' - ' + name;\n        }\n        if (item.IndexNumber != null && item.Type != 'Season') {\n            name = item.IndexNumber + ' - ' + name;\n        }\n        var htmlName = \"<div class='editorNode'>\";\n        if (item.IsFolder) {\n            htmlName += '<span class=\"material-icons metadataSidebarIcon folder\"></span>';\n        } else if (item.MediaType === 'Video') {\n            htmlName += '<span class=\"material-icons metadataSidebarIcon movie\"></span>';\n        } else if (item.MediaType === 'Audio') {\n            htmlName += '<span class=\"material-icons metadataSidebarIcon audiotrack\"></span>';\n        } else if (item.Type === 'TvChannel') {\n            htmlName += '<span class=\"material-icons metadataSidebarIcon live_tv\"></span>';\n        } else if (item.MediaType === 'Photo') {\n            htmlName += '<span class=\"material-icons metadataSidebarIcon photo\"></span>';\n        } else if (item.MediaType === 'Book') {\n            htmlName += '<span class=\"material-icons metadataSidebarIcon book\"></span>';\n        }\n        if (item.LockData) {\n            htmlName += '<span class=\"material-icons metadataSidebarIcon lock\"></span>';\n        }\n        htmlName += name;\n        htmlName += '</div>';\n        return htmlName;\n    }\n\n    function loadChildrenOfRootNode(page, scope, callback) {\n        ApiClient.getLiveTvChannels({\n            limit: 0\n        }).then(function (result) {\n            var nodes = [];\n            nodes.push({\n                id: 'MediaFolders',\n                text: globalize.translate('HeaderMediaFolders'),\n                state: {\n                    opened: true\n                },\n                li_attr: {\n                    itemtype: 'mediafolders',\n                    loadedFromServer: true\n                },\n                icon: false\n            });\n            if (result.TotalRecordCount) {\n                nodes.push({\n                    id: 'livetv',\n                    text: globalize.translate('HeaderLiveTV'),\n                    state: {\n                        opened: false\n                    },\n                    li_attr: {\n                        itemtype: 'livetv'\n                    },\n                    children: [{\n                        text: 'Loading...',\n                        icon: false\n                    }],\n                    icon: false\n                });\n            }\n            callback.call(scope, nodes);\n            nodesToLoad.push('MediaFolders');\n        });\n    }\n\n    function loadLiveTvChannels(service, openItems, callback) {\n        ApiClient.getLiveTvChannels({\n            ServiceName: service,\n            AddCurrentProgram: false\n        }).then(function (result) {\n            var nodes = result.Items.map(function (i) {\n                var state = openItems.indexOf(i.Id) == -1 ? 'closed' : 'open';\n                return getNode(i, state, false);\n            });\n            callback(nodes);\n        });\n    }\n\n    function loadMediaFolders(page, scope, openItems, callback) {\n        ApiClient.getJSON(ApiClient.getUrl('Library/MediaFolders')).then(function (result) {\n            var nodes = result.Items.map(function (n) {\n                var state = openItems.indexOf(n.Id) == -1 ? 'closed' : 'open';\n                return getNode(n, state, false);\n            });\n            callback.call(scope, nodes);\n            for (var i = 0, length = nodes.length; i < length; i++) {\n                if (nodes[i].state.opened) {\n                    nodesToLoad.push(nodes[i].id);\n                }\n            }\n        });\n    }\n\n    function loadNode(page, scope, node, openItems, selectedId, currentUser, callback) {\n        var id = node.id;\n        if (id == '#') {\n            loadChildrenOfRootNode(page, scope, callback);\n            return;\n        }\n        if (id == 'livetv') {\n            loadLiveTvChannels(id, openItems, callback);\n            return;\n        }\n        if (id == 'MediaFolders') {\n            loadMediaFolders(page, scope, openItems, callback);\n            return;\n        }\n        var query = {\n            ParentId: id,\n            Fields: 'Settings',\n            IsVirtualUnaired: false,\n            IsMissing: false,\n            EnableTotalRecordCount: false,\n            EnableImages: false,\n            EnableUserData: false\n        };\n        var itemtype = node.li_attr.itemtype;\n        if (itemtype != 'Season' && itemtype != 'Series') {\n            query.SortBy = 'SortName';\n        }\n        ApiClient.getItems(Dashboard.getCurrentUserId(), query).then(function (result) {\n            var nodes = result.Items.map(function (n) {\n                var state = openItems.indexOf(n.Id) == -1 ? 'closed' : 'open';\n                return getNode(n, state, n.Id == selectedId);\n            });\n            callback.call(scope, nodes);\n            for (var i = 0, length = nodes.length; i < length; i++) {\n                if (nodes[i].state.opened) {\n                    nodesToLoad.push(nodes[i].id);\n                }\n            }\n        });\n    }\n\n    function scrollToNode(id) {\n        var elem = $('#' + id)[0];\n        if (elem) {\n            elem.scrollIntoView();\n        }\n    }\n\n    function initializeTree(page, currentUser, openItems, selectedId) {\n        require(['jstree'], function () {\n            initializeTreeInternal(page, currentUser, openItems, selectedId);\n        });\n    }\n\n    function onNodeSelect(event, data) {\n        var node = data.node;\n        var eventData = {\n            id: node.id,\n            itemType: node.li_attr.itemtype,\n            serverItemType: node.li_attr.serveritemtype,\n            collectionType: node.li_attr.collectiontype\n        };\n        if (eventData.itemType != 'livetv' && eventData.itemType != 'mediafolders') {\n            {\n                this.dispatchEvent(new CustomEvent('itemclicked', {\n                    detail: eventData,\n                    bubbles: true,\n                    cancelable: false\n                }));\n            }\n            document.querySelector('.editPageSidebar').classList.add('editPageSidebar-withcontent');\n        } else {\n            document.querySelector('.editPageSidebar').classList.remove('editPageSidebar-withcontent');\n        }\n    }\n\n    function onNodeOpen(event, data) {\n        var page = $(this).parents('.page')[0];\n        var node = data.node;\n        if (node.children) {\n            loadNodesToLoad(page, node);\n        }\n        if (node.li_attr && node.id != '#' && !node.li_attr.loadedFromServer) {\n            node.li_attr.loadedFromServer = true;\n            $.jstree.reference('.libraryTree', page).load_node(node.id, loadNodeCallback);\n        }\n    }\n\n    function onNodeLoad(event, data) {\n        var page = $(this).parents('.page')[0];\n        var node = data.node;\n        if (node.children) {\n            loadNodesToLoad(page, node);\n        }\n        if (node.li_attr && node.id != '#' && !node.li_attr.loadedFromServer) {\n            node.li_attr.loadedFromServer = true;\n            $.jstree.reference('.libraryTree', page).load_node(node.id, loadNodeCallback);\n        }\n    }\n\n    function initializeTreeInternal(page, currentUser, openItems, selectedId) {\n        nodesToLoad = [];\n        selectedNodeId = null;\n        $.jstree.destroy();\n        $('.libraryTree', page).jstree({\n            'plugins': ['wholerow'],\n            core: {\n                check_callback: true,\n                data: function (node, callback) {\n                    loadNode(page, this, node, openItems, selectedId, currentUser, callback);\n                },\n                themes: {\n                    variant: 'large'\n                }\n            }\n        }).off('select_node.jstree', onNodeSelect).on('select_node.jstree', onNodeSelect).off('open_node.jstree', onNodeOpen).on('open_node.jstree', onNodeOpen).off('load_node.jstree', onNodeLoad).on('load_node.jstree', onNodeLoad);\n    }\n\n    function loadNodesToLoad(page, node) {\n        var children = node.children;\n        for (var i = 0, length = children.length; i < length; i++) {\n            var child = children[i];\n            if (nodesToLoad.indexOf(child) != -1) {\n                nodesToLoad = nodesToLoad.filter(function (n) {\n                    return n != child;\n                });\n                $.jstree.reference('.libraryTree', page).load_node(child, loadNodeCallback);\n            }\n        }\n    }\n\n    function loadNodeCallback(node) {\n        if (selectedNodeId && node.children && node.children.indexOf(selectedNodeId) != -1) {\n            setTimeout(function () {\n                scrollToNode(selectedNodeId);\n            }, 500);\n        }\n    }\n\n    function updateEditorNode(page, item) {\n        var elem = $('#' + item.Id + '>a', page)[0];\n        if (elem == null) {\n            return;\n        }\n        $('.editorNode', elem).remove();\n        $(elem).append(getNodeInnerHtml(item));\n        if (item.IsFolder) {\n            var tree = jQuery.jstree._reference('.libraryTree');\n            var currentNode = tree._get_node(null, false);\n            tree.refresh(currentNode);\n        }\n    }\n\n    function setCurrentItemId(id) {\n        itemId = id;\n    }\n\n    function getCurrentItemId() {\n        if (itemId) {\n            return itemId;\n        }\n        var url = window.location.hash || window.location.href;\n        return getParameterByName('id', url);\n    }\n    var nodesToLoad = [];\n    var selectedNodeId;\n    $(document).on('itemsaved', '.metadataEditorPage', function (e, item) {\n        updateEditorNode(this, item);\n    }).on('pagebeforeshow', '.metadataEditorPage', function () {\n        require(['css!assets/css/metadataeditor.css']);\n    }).on('pagebeforeshow', '.metadataEditorPage', function () {\n        var page = this;\n        Dashboard.getCurrentUser().then(function (user) {\n            var id = getCurrentItemId();\n            if (id) {\n                ApiClient.getAncestorItems(id, user.Id).then(function (ancestors) {\n                    var ids = ancestors.map(function (i) {\n                        return i.Id;\n                    });\n                    initializeTree(page, user, ids, id);\n                });\n            } else {\n                initializeTree(page, user, []);\n            }\n        });\n    }).on('pagebeforehide', '.metadataEditorPage', function () {\n        var page = this;\n        $('.libraryTree', page).off('select_node.jstree', onNodeSelect).off('open_node.jstree', onNodeOpen).off('load_node.jstree', onNodeLoad);\n    });\n    var itemId;\n    window.MetadataEditor = {\n        getItemPromise: function () {\n            var currentItemId = getCurrentItemId();\n            if (currentItemId) {\n                return ApiClient.getItem(Dashboard.getCurrentUserId(), currentItemId);\n            }\n            return ApiClient.getRootFolder(Dashboard.getCurrentUserId());\n        },\n        getCurrentItemId: getCurrentItemId,\n        setCurrentItemId: setCurrentItemId\n    };\n});\n"]}