{"version":3,"sources":["scripts/touchHelper.js"],"names":["define","dom","events","getTouches","e","changedTouches","targetTouches","touches","TouchHelper","elem","options","touchTarget","touchStartX","touchStartY","lastDeltaX","lastDeltaY","thresholdYMet","self","this","swipeXThreshold","swipeYThreshold","excludeTagNames","ignoreTagNames","touchStart","touch","currentTouchTarget","target","parentWithTag","clientX","clientY","touchEnd","isTouchMove","type","deltaX","deltaY","currentDeltaX","currentDeltaY","Math","abs","trigger","preventDefaultOnMove","preventDefault","addEventListener","passive","triggerOnMove","prototype","destroy","removeEventListener"],"mappings":"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","file":"touchHelper.js","sourcesContent":["define(['dom', 'events'], function (dom, events) {\n    'use strict';\n\n    function getTouches(e) {\n\n        return e.changedTouches || e.targetTouches || e.touches;\n    }\n\n    function TouchHelper(elem, options) {\n\n        options = options || {};\n        var touchTarget;\n        var touchStartX;\n        var touchStartY;\n        var lastDeltaX;\n        var lastDeltaY;\n        var thresholdYMet;\n        var self = this;\n\n        var swipeXThreshold = options.swipeXThreshold || 50;\n        var swipeYThreshold = options.swipeYThreshold || 50;\n        var swipeXMaxY = 30;\n\n        var excludeTagNames = options.ignoreTagNames || [];\n\n        var touchStart = function (e) {\n\n            var touch = getTouches(e)[0];\n            touchTarget = null;\n            touchStartX = 0;\n            touchStartY = 0;\n            lastDeltaX = null;\n            lastDeltaY = null;\n            thresholdYMet = false;\n\n            if (touch) {\n\n                var currentTouchTarget = touch.target;\n\n                if (dom.parentWithTag(currentTouchTarget, excludeTagNames)) {\n                    return;\n                }\n\n                touchTarget = currentTouchTarget;\n                touchStartX = touch.clientX;\n                touchStartY = touch.clientY;\n            }\n        };\n\n        var touchEnd = function (e) {\n\n            var isTouchMove = e.type === 'touchmove';\n\n            if (touchTarget) {\n                var touch = getTouches(e)[0];\n\n                var deltaX;\n                var deltaY;\n\n                var clientX;\n                var clientY;\n\n                if (touch) {\n                    clientX = touch.clientX || 0;\n                    clientY = touch.clientY || 0;\n                    deltaX = clientX - (touchStartX || 0);\n                    deltaY = clientY - (touchStartY || 0);\n                } else {\n                    deltaX = 0;\n                    deltaY = 0;\n                }\n\n                var currentDeltaX = lastDeltaX == null ? deltaX : (deltaX - lastDeltaX);\n                var currentDeltaY = lastDeltaY == null ? deltaY : (deltaY - lastDeltaY);\n\n                lastDeltaX = deltaX;\n                lastDeltaY = deltaY;\n\n                if (deltaX > swipeXThreshold && Math.abs(deltaY) < swipeXMaxY) {\n                    events.trigger(self, 'swiperight', [touchTarget]);\n                } else if (deltaX < (0 - swipeXThreshold) && Math.abs(deltaY) < swipeXMaxY) {\n                    events.trigger(self, 'swipeleft', [touchTarget]);\n                } else if ((deltaY < (0 - swipeYThreshold) || thresholdYMet) && Math.abs(deltaX) < swipeXMaxY) {\n\n                    thresholdYMet = true;\n\n                    events.trigger(self, 'swipeup', [touchTarget, {\n                        deltaY: deltaY,\n                        deltaX: deltaX,\n                        clientX: clientX,\n                        clientY: clientY,\n                        currentDeltaX: currentDeltaX,\n                        currentDeltaY: currentDeltaY\n                    }]);\n                } else if ((deltaY > swipeYThreshold || thresholdYMet) && Math.abs(deltaX) < swipeXMaxY) {\n                    thresholdYMet = true;\n\n                    events.trigger(self, 'swipedown', [touchTarget, {\n                        deltaY: deltaY,\n                        deltaX: deltaX,\n                        clientX: clientX,\n                        clientY: clientY,\n                        currentDeltaX: currentDeltaX,\n                        currentDeltaY: currentDeltaY\n                    }]);\n                }\n\n                if (isTouchMove && options.preventDefaultOnMove) {\n                    e.preventDefault();\n                }\n            }\n\n            if (!isTouchMove) {\n                touchTarget = null;\n                touchStartX = 0;\n                touchStartY = 0;\n                lastDeltaX = null;\n                lastDeltaY = null;\n                thresholdYMet = false;\n            }\n        };\n\n        this.touchStart = touchStart;\n        this.touchEnd = touchEnd;\n\n        dom.addEventListener(elem, 'touchstart', touchStart, {\n            passive: true\n        });\n        if (options.triggerOnMove) {\n            dom.addEventListener(elem, 'touchmove', touchEnd, {\n                passive: !options.preventDefaultOnMove\n            });\n        }\n        dom.addEventListener(elem, 'touchend', touchEnd, {\n            passive: true\n        });\n        dom.addEventListener(elem, 'touchcancel', touchEnd, {\n            passive: true\n        });\n    }\n\n    TouchHelper.prototype.destroy = function () {\n\n        var elem = this.elem;\n\n        if (elem) {\n            var touchStart = this.touchStart;\n            var touchEnd = this.touchEnd;\n\n            dom.removeEventListener(elem, 'touchstart', touchStart, {\n                passive: true\n            });\n            dom.removeEventListener(elem, 'touchmove', touchEnd, {\n                passive: true\n            });\n            dom.removeEventListener(elem, 'touchend', touchEnd, {\n                passive: true\n            });\n            dom.removeEventListener(elem, 'touchcancel', touchEnd, {\n                passive: true\n            });\n        }\n\n        this.touchStart = null;\n        this.touchEnd = null;\n\n        this.elem = null;\n    };\n\n    return TouchHelper;\n});\n"]}