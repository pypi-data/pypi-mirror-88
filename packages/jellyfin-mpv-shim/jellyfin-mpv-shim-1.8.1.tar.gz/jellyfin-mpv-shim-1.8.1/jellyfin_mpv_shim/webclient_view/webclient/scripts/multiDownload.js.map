{"version":3,"sources":["scripts/multiDownload.js"],"names":["define","browser","download","url","a","document","createElement","href","dispatchEvent","MouseEvent","urls","Error","fallback","i","createIframe","frame","style","display","src","documentElement","appendChild","interval","setInterval","contentWindow","readyState","clearInterval","setTimeout","parentNode","removeChild","length","delay","forEach","firefox","sameDomain","location","hostname","protocol","bind"],"mappings":"AAAA,aAAAA,OAAO,CAAC,YAAY,SAAUC,SAqC1B,SAASC,SAASC,KACd,IAAIC,EAAIC,SAASC,cAAc,KAC/BF,EAAEF,SAAW,GACbE,EAAEG,KAAOJ,IAETC,EAAEI,cAAc,IAAIC,WAAW,UAGnC,OAAO,SAAUC,MACb,IAAKA,KACD,MAAM,IAAIC,MAAM,mBAGpB,QAAoD,IAAzCN,SAASC,cAAc,KAAKJ,SACnC,OAhDR,SAASU,SAASF,MACd,IAAIG,EAAI,GAER,SAAUC,eACN,IAAIC,MAAQV,SAASC,cAAc,UACnCS,MAAMC,MAAMC,QAAU,OACtBF,MAAMG,IAAMR,KAAKG,KACjBR,SAASc,gBAAgBC,YAAYL,OAGrC,IAAIM,SAAWC,aAAY,WACyB,aAA5CP,MAAMQ,cAAclB,SAASmB,YAAyE,gBAA5CT,MAAMQ,cAAclB,SAASmB,aACvFC,cAAcJ,UAGdK,YAAW,WACPX,MAAMY,WAAWC,YAAYb,SAC9B,KAECF,EAAIH,KAAKmB,QACTf,kBAGT,KApBP,GA6CWF,CAASF,MAGpB,IAAIoB,MAAQ,EAEZpB,KAAKqB,SAAQ,SAAU5B,KAEnB,GAAIF,QAAQ+B,UA5BpB,SAASC,WAAW9B,KAChB,IAAIC,EAAIC,SAASC,cAAc,KAG/B,OAFAF,EAAEG,KAAOJ,IAEF+B,SAASC,WAAa/B,EAAE+B,UAAYD,SAASE,WAAahC,EAAEgC,SAwBvCH,CAAW9B,KAC/B,OAAOuB,WAAWxB,SAASmC,KAAK,KAAMlC,KAAM,MAAQ2B,OAGxD5B,SAASC","file":"multiDownload.js","sourcesContent":["define(['browser'], function (browser) {\n    'use strict';\n\n    function fallback(urls) {\n        var i = 0;\n\n        (function createIframe() {\n            var frame = document.createElement('iframe');\n            frame.style.display = 'none';\n            frame.src = urls[i++];\n            document.documentElement.appendChild(frame);\n\n            // the download init has to be sequential otherwise IE only use the first\n            var interval = setInterval(function () {\n                if (frame.contentWindow.document.readyState === 'complete' || frame.contentWindow.document.readyState === 'interactive') {\n                    clearInterval(interval);\n\n                    // Safari needs a timeout\n                    setTimeout(function () {\n                        frame.parentNode.removeChild(frame);\n                    }, 1000);\n\n                    if (i < urls.length) {\n                        createIframe();\n                    }\n                }\n            }, 100);\n        })();\n    }\n\n    function sameDomain(url) {\n        var a = document.createElement('a');\n        a.href = url;\n\n        return location.hostname === a.hostname && location.protocol === a.protocol;\n    }\n\n    function download(url) {\n        var a = document.createElement('a');\n        a.download = '';\n        a.href = url;\n        // firefox doesn't support `a.click()`...\n        a.dispatchEvent(new MouseEvent('click'));\n    }\n\n    return function (urls) {\n        if (!urls) {\n            throw new Error('`urls` required');\n        }\n\n        if (typeof document.createElement('a').download === 'undefined') {\n            return fallback(urls);\n        }\n\n        var delay = 0;\n\n        urls.forEach(function (url) {\n            // the download init has to be sequential for firefox if the urls are not on the same domain\n            if (browser.firefox && !sameDomain(url)) {\n                return setTimeout(download.bind(null, url), 100 * ++delay);\n            }\n\n            download(url);\n        });\n    };\n});\n"]}