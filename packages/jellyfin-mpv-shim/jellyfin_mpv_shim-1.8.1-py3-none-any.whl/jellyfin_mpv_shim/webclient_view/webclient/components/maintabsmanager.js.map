{"version":3,"sources":["components/maintabsmanager.js"],"names":["define","dom","browser","events","tabOwnerView","footerTabsContainer","headerTabsContainer","tabsElem","queryScope","document","querySelector","ensureElements","enableInFooter","createElement","classList","add","onViewTabsReady","this","selectedIndex","readySelectedIndex","allowSwipe","target","allowSwipeOn","elem","parentWithTag","contains","parent","parentNode","setTabs","view","getTabsFn","getTabContainersFn","onBeforeTabChange","onTabChange","setSelectedIndex","body","remove","innerHTML","tabsContainer","replaced","tabsContainerElem","index","tabsHtml","map","t","tabHtml","tabClass","enabled","cssClass","href","name","join","window","CustomElements","upgradeSubtree","configureSwipeTabs","touch","length","onSwipeLeft","e","selectNext","onSwipeRight","selectPrevious","require","TouchHelper","touchHelper","on","addEventListener","destroy","tabContainers","detail","previousIndex","previousPanel","newPanel","selectedTabIndex","tabs","getTabsElement","intv","setInterval","clearInterval","triggerTabChange"],"mappings":"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","file":"maintabsmanager.js","sourcesContent":["define(['dom', 'browser', 'events', 'emby-tabs', 'emby-button'], function (dom, browser, events) {\n    'use strict';\n\n    var tabOwnerView;\n    var queryScope = document.querySelector('.skinHeader');\n    var footerTabsContainer;\n    var headerTabsContainer;\n    var tabsElem;\n\n    function enableTabsInFooter() {\n        return false;\n    }\n\n    function getTabsContainerElem() {\n    }\n\n    function ensureElements(enableInFooter) {\n\n        if (enableInFooter) {\n            if (!footerTabsContainer) {\n                footerTabsContainer = document.createElement('div');\n                footerTabsContainer.classList.add('footerTabs');\n                footerTabsContainer.classList.add('sectionTabs');\n                footerTabsContainer.classList.add('hide');\n                //appFooter.add(footerTabsContainer);\n            }\n        }\n\n        if (!headerTabsContainer) {\n            headerTabsContainer = queryScope.querySelector('.headerTabs');\n        }\n    }\n\n    function onViewTabsReady() {\n        this.selectedIndex(this.readySelectedIndex);\n        this.readySelectedIndex = null;\n    }\n\n    function allowSwipe(target) {\n\n        function allowSwipeOn(elem) {\n\n            if (dom.parentWithTag(elem, 'input')) {\n                return false;\n            }\n\n            var classList = elem.classList;\n            if (classList) {\n                return !classList.contains('scrollX') && !classList.contains('animatedScrollX');\n            }\n\n            return true;\n        }\n\n        var parent = target;\n        while (parent != null) {\n            if (!allowSwipeOn(parent)) {\n                return false;\n            }\n            parent = parent.parentNode;\n        }\n\n        return true;\n    }\n\n    function configureSwipeTabs(view, tabsElem, getTabContainersFn) {\n\n        if (!browser.touch) {\n            return;\n        }\n\n        // implement without hammer\n        var pageCount = getTabContainersFn().length;\n        var onSwipeLeft = function (e, target) {\n            if (allowSwipe(target) && view.contains(target)) {\n                tabsElem.selectNext();\n            }\n        };\n\n        var onSwipeRight = function (e, target) {\n            if (allowSwipe(target) && view.contains(target)) {\n                tabsElem.selectPrevious();\n            }\n        };\n\n        require(['touchHelper'], function (TouchHelper) {\n\n            var touchHelper = new TouchHelper(view.parentNode.parentNode);\n\n            events.on(touchHelper, 'swipeleft', onSwipeLeft);\n            events.on(touchHelper, 'swiperight', onSwipeRight);\n\n            view.addEventListener('viewdestroy', function () {\n                touchHelper.destroy();\n            });\n        });\n    }\n\n    function setTabs(view, selectedIndex, getTabsFn, getTabContainersFn, onBeforeTabChange, onTabChange, setSelectedIndex) {\n\n        var enableInFooter = enableTabsInFooter();\n\n        if (!view) {\n            if (tabOwnerView) {\n\n                if (!headerTabsContainer) {\n                    headerTabsContainer = queryScope.querySelector('.headerTabs');\n                }\n\n                ensureElements(enableInFooter);\n\n                document.body.classList.remove('withSectionTabs');\n\n                headerTabsContainer.innerHTML = '';\n                headerTabsContainer.classList.add('hide');\n\n                if (footerTabsContainer) {\n                    footerTabsContainer.innerHTML = '';\n                    footerTabsContainer.classList.add('hide');\n                }\n\n                tabOwnerView = null;\n            }\n            return {\n                tabsContainer: headerTabsContainer,\n                replaced: false\n            };\n        }\n\n        ensureElements(enableInFooter);\n\n        var tabsContainerElem = enableInFooter ? footerTabsContainer : headerTabsContainer;\n\n        if (!tabOwnerView) {\n            tabsContainerElem.classList.remove('hide');\n        }\n\n        if (tabOwnerView !== view) {\n\n            var index = 0;\n\n            var indexAttribute = selectedIndex == null ? '' : (' data-index=\"' + selectedIndex + '\"');\n            var tabsHtml = '<div is=\"emby-tabs\"' + indexAttribute + ' class=\"tabs-viewmenubar\"><div class=\"emby-tabs-slider\" style=\"white-space:nowrap;\">' + getTabsFn().map(function (t) {\n\n                var tabClass = 'emby-tab-button';\n\n                if (t.enabled === false) {\n                    tabClass += ' hide';\n                }\n\n                var tabHtml;\n\n                if (t.cssClass) {\n                    tabClass += ' ' + t.cssClass;\n                }\n\n                if (t.href) {\n                    tabHtml = '<a href=\"' + t.href + '\" is=\"emby-linkbutton\" class=\"' + tabClass + '\" data-index=\"' + index + '\"><div class=\"emby-button-foreground\">' + t.name + '</div></a>';\n                } else {\n                    tabHtml = '<button type=\"button\" is=\"emby-button\" class=\"' + tabClass + '\" data-index=\"' + index + '\"><div class=\"emby-button-foreground\">' + t.name + '</div></button>';\n                }\n\n                index++;\n                return tabHtml;\n\n            }).join('') + '</div></div>';\n\n            tabsContainerElem.innerHTML = tabsHtml;\n            window.CustomElements.upgradeSubtree(tabsContainerElem);\n\n            document.body.classList.add('withSectionTabs');\n            tabOwnerView = view;\n\n            tabsElem = tabsContainerElem.querySelector('[is=\"emby-tabs\"]');\n\n            configureSwipeTabs(view, tabsElem, getTabContainersFn);\n\n            tabsElem.addEventListener('beforetabchange', function (e) {\n\n                var tabContainers = getTabContainersFn();\n                if (e.detail.previousIndex != null) {\n\n                    var previousPanel = tabContainers[e.detail.previousIndex];\n                    if (previousPanel) {\n                        previousPanel.classList.remove('is-active');\n                    }\n                }\n\n                var newPanel = tabContainers[e.detail.selectedTabIndex];\n\n                //if (e.detail.previousIndex != null && e.detail.previousIndex != e.detail.selectedTabIndex) {\n                //    if (newPanel.animate && (animateTabs || []).indexOf(e.detail.selectedTabIndex) != -1) {\n                //        fadeInRight(newPanel);\n                //    }\n                //}\n\n                if (newPanel) {\n                    newPanel.classList.add('is-active');\n                }\n            });\n\n            if (onBeforeTabChange) {\n                tabsElem.addEventListener('beforetabchange', onBeforeTabChange);\n            }\n            if (onTabChange) {\n                tabsElem.addEventListener('tabchange', onTabChange);\n            }\n\n            if (setSelectedIndex !== false) {\n                if (tabsElem.selectedIndex) {\n                    tabsElem.selectedIndex(selectedIndex);\n                } else {\n\n                    tabsElem.readySelectedIndex = selectedIndex;\n                    tabsElem.addEventListener('ready', onViewTabsReady);\n                }\n            }\n\n            //if (enableSwipe !== false) {\n            //    libraryBrowser.configureSwipeTabs(ownerpage, tabs);\n            //}\n\n            return {\n                tabsContainer: tabsContainerElem,\n                tabs: tabsContainerElem.querySelector('[is=\"emby-tabs\"]'),\n                replaced: true\n            };\n        }\n\n        if (!tabsElem) {\n            tabsElem = tabsContainerElem.querySelector('[is=\"emby-tabs\"]');\n        }\n\n        tabsElem.selectedIndex(selectedIndex);\n\n        tabOwnerView = view;\n        return {\n            tabsContainer: tabsContainerElem,\n            tabs: tabsElem,\n            replaced: false\n        };\n    }\n\n    function selectedTabIndex(index) {\n\n        var tabsContainerElem = headerTabsContainer;\n\n        if (!tabsElem) {\n            tabsElem = tabsContainerElem.querySelector('[is=\"emby-tabs\"]');\n        }\n\n        if (index != null) {\n            // For some reason, with the MPV Shim Edge client\n            // tabsElem.selectedIndex isn't defined until after this runs.\n            if (typeof tabsElem.selectedIndex !== \"function\") {\n                var intv = window.setInterval(function() {\n                    var tabs = window.document.querySelector('.skinHeader .headerTabs [is=\"emby-tabs\"]')\n                    if (typeof tabs.selectedIndex === \"function\") {\n                        tabs.selectedIndex(index);\n                        window.clearInterval(intv);\n                    }\n                }, 100);\n            } else {\n                tabsElem.selectedIndex(index);\n            }\n        } else {\n            tabsElem.triggerTabChange();\n        }\n    }\n\n    function getTabsElement() {\n        return document.querySelector('.tabs-viewmenubar');\n    }\n\n    return {\n        setTabs: setTabs,\n        getTabsElement: getTabsElement,\n        selectedTabIndex: selectedTabIndex\n    };\n});\n"]}