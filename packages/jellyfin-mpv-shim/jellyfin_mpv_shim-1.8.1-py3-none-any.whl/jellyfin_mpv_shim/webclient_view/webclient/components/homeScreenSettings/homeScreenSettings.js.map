{"version":3,"sources":["components/homeScreenSettings/homeScreenSettings.js"],"names":["define","require","appHost","layoutManager","focusManager","globalize","loading","connectionManager","homeSections","dom","events","getLandingScreenOptionsHtml","type","userValue","getLandingScreenOptions","list","push","name","translate","value","isDefault","map","o","selectedHtml","join","getPerLibrarySettingsHtml","item","user","userSettings","apiClient","isChecked","html","Type","CollectionType","Configuration","MyMediaExcludes","indexOf","Id","LatestItemsExcludes","idForLanding","get","prefix","Name","loadForm","context","querySelector","checked","HidePlayedInLatest","updateHomeSectionValues","i","select","defaultValue","getDefaultSection","option","promise1","getUserViews","IncludeHidden","promise2","getJSON","getUrl","Promise","all","then","responses","renderViewOrder","result","Items","view","currentHtml","innerHTML","renderPerLibrarySettings","userViews","elem","length","renderViews","page","folderHtml","id","checkedHtml","GroupedFolders","hide","onSectionOrderListClick","e","target","parentWithClass","viewItem","classList","contains","next","nextSibling","parentNode","removeChild","insertBefore","focus","prev","previousSibling","getCheckboxItems","selector","inputs","querySelectorAll","save","instance","userId","enableSaveConfirmation","show","getUser","saveUser","userSettingsInstance","getAttribute","viewItems","orderedViews","OrderedViews","set","selectLandings","selectLanding","updateUserConfiguration","toast","trigger","onSubmit","self","this","getApiClient","options","serverId","setUserInfo","element","preventDefault","onChange","chkIncludeInMyMedia","fldIncludeInLatest","remove","add","HomeScreenSettings","embed","template","replace","translateDocument","addEventListener","bind","enableSaveButton","tv","loadData","autoFocus","prototype","dataLoaded","submit","call","destroy"],"mappings":"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","file":"homeScreenSettings.js","sourcesContent":["define(['require', 'apphost', 'layoutManager', 'focusManager', 'globalize', 'loading', 'connectionManager', 'homeSections', 'dom', 'events', 'listViewStyle', 'emby-select', 'emby-checkbox'], function (require, appHost, layoutManager, focusManager, globalize, loading, connectionManager, homeSections, dom, events) {\n    'use strict';\n\n    var numConfigurableSections = 7;\n\n    function renderViews(page, user, result) {\n\n        var folderHtml = '';\n\n        folderHtml += '<div class=\"checkboxList\">';\n        folderHtml += result.map(function (i) {\n\n            var currentHtml = '';\n\n            var id = 'chkGroupFolder' + i.Id;\n\n            var isChecked = user.Configuration.GroupedFolders.indexOf(i.Id) !== -1;\n\n            var checkedHtml = isChecked ? ' checked=\"checked\"' : '';\n\n            currentHtml += '<label>';\n            currentHtml += '<input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkGroupFolder\" data-folderid=\"' + i.Id + '\" id=\"' + id + '\"' + checkedHtml + '/>';\n            currentHtml += '<span>' + i.Name + '</span>';\n            currentHtml += '</label>';\n\n            return currentHtml;\n\n        }).join('');\n\n        folderHtml += '</div>';\n\n        page.querySelector('.folderGroupList').innerHTML = folderHtml;\n    }\n\n    function getLandingScreenOptions(type) {\n\n        var list = [];\n\n        if (type === 'movies') {\n            list.push({\n                name: globalize.translate('Movies'),\n                value: 'movies',\n                isDefault: true\n            });\n            list.push({\n                name: globalize.translate('Suggestions'),\n                value: 'suggestions'\n            });\n            list.push({\n                name: globalize.translate('Genres'),\n                value: 'genres'\n            });\n            list.push({\n                name: globalize.translate('Favorites'),\n                value: 'favorites'\n            });\n            list.push({\n                name: globalize.translate('Collections'),\n                value: 'collections'\n            });\n        } else if (type === 'tvshows') {\n            list.push({\n                name: globalize.translate('Shows'),\n                value: 'shows',\n                isDefault: true\n            });\n            list.push({\n                name: globalize.translate('Suggestions'),\n                value: 'suggestions'\n            });\n            list.push({\n                name: globalize.translate('Latest'),\n                value: 'latest'\n            });\n            list.push({\n                name: globalize.translate('Genres'),\n                value: 'genres'\n            });\n            list.push({\n                name: globalize.translate('Favorites'),\n                value: 'favorites'\n            });\n        } else if (type === 'music') {\n            list.push({\n                name: globalize.translate('Suggestions'),\n                value: 'suggestions',\n                isDefault: true\n            });\n            list.push({\n                name: globalize.translate('Albums'),\n                value: 'albums'\n            });\n            list.push({\n                name: globalize.translate('HeaderAlbumArtists'),\n                value: 'albumartists'\n            });\n            list.push({\n                name: globalize.translate('Artists'),\n                value: 'artists'\n            });\n            list.push({\n                name: globalize.translate('Playlists'),\n                value: 'playlists'\n            });\n            list.push({\n                name: globalize.translate('Genres'),\n                value: 'genres'\n            });\n        } else if (type === 'livetv') {\n            list.push({\n                name: globalize.translate('Suggestions'),\n                value: 'suggestions',\n                isDefault: true\n            });\n            list.push({\n                name: globalize.translate('Guide'),\n                value: 'guide'\n            });\n        }\n\n        return list;\n    }\n\n    function getLandingScreenOptionsHtml(type, userValue) {\n\n        return getLandingScreenOptions(type).map(function (o) {\n\n            var selected = userValue === o.value || (o.isDefault && !userValue);\n            var selectedHtml = selected ? ' selected' : '';\n            var optionValue = o.isDefault ? '' : o.value;\n\n            return '<option value=\"' + optionValue + '\"' + selectedHtml + '>' + o.name + '</option>';\n        }).join('');\n    }\n\n    function renderViewOrder(context, user, result) {\n\n        var html = '';\n\n        var index = 0;\n\n        html += result.Items.map(function (view) {\n\n            var currentHtml = '';\n\n            currentHtml += '<div class=\"listItem viewItem\" data-viewid=\"' + view.Id + '\">';\n\n            currentHtml += '<span class=\"material-icons listItemIcon folder_open\"></span>';\n\n            currentHtml += '<div class=\"listItemBody\">';\n\n            currentHtml += '<div>';\n            currentHtml += view.Name;\n            currentHtml += '</div>';\n\n            currentHtml += '</div>';\n\n            currentHtml += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"btnViewItemUp btnViewItemMove autoSize\" title=\"' + globalize.translate('Up') + '\"><span class=\"material-icons keyboard_arrow_up\"></span></button>';\n            currentHtml += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"btnViewItemDown btnViewItemMove autoSize\" title=\"' + globalize.translate('Down') + '\"><span class=\"material-icons keyboard_arrow_down\"></span></button>';\n\n            currentHtml += '</div>';\n\n            index++;\n            return currentHtml;\n\n        }).join('');\n\n        context.querySelector('.viewOrderList').innerHTML = html;\n    }\n\n    function updateHomeSectionValues(context, userSettings) {\n\n        for (var i = 1; i <= 7; i++) {\n\n            var select = context.querySelector('#selectHomeSection' + i);\n            var defaultValue = homeSections.getDefaultSection(i - 1);\n\n            var option = select.querySelector('option[value=' + defaultValue + ']') || select.querySelector('option[value=\"\"]');\n\n            var userValue = userSettings.get('homesection' + (i - 1));\n\n            option.value = '';\n\n            if (userValue === defaultValue || !userValue) {\n                select.value = '';\n            } else {\n                select.value = userValue;\n            }\n        }\n\n        context.querySelector('.selectTVHomeScreen').value = userSettings.get('tvhome') || '';\n    }\n\n    function getPerLibrarySettingsHtml(item, user, userSettings, apiClient) {\n\n        var html = '';\n\n        var isChecked;\n\n        if (item.Type === 'Channel' || item.CollectionType === 'boxsets' || item.CollectionType === 'playlists') {\n            isChecked = (user.Configuration.MyMediaExcludes || []).indexOf(item.Id) === -1;\n            html += '<div>';\n            html += '<label>';\n            html += '<input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkIncludeInMyMedia\" data-folderid=\"' + item.Id + '\"' + (isChecked ? ' checked=\"checked\"' : '') + '/>';\n            html += '<span>' + globalize.translate('DisplayInMyMedia') + '</span>';\n            html += '</label>';\n            html += '</div>';\n        }\n\n        var excludeFromLatest = ['playlists', 'livetv', 'boxsets', 'channels'];\n        if (excludeFromLatest.indexOf(item.CollectionType || '') === -1) {\n\n            isChecked = user.Configuration.LatestItemsExcludes.indexOf(item.Id) === -1;\n            html += '<label class=\"fldIncludeInLatest\">';\n            html += '<input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkIncludeInLatest\" data-folderid=\"' + item.Id + '\"' + (isChecked ? ' checked=\"checked\"' : '') + '/>';\n            html += '<span>' + globalize.translate('DisplayInOtherHomeScreenSections') + '</span>';\n            html += '</label>';\n        }\n\n        if (html) {\n\n            html = '<div class=\"checkboxListContainer\">' + html + '</div>';\n        }\n\n        if (item.CollectionType === 'movies' || item.CollectionType === 'tvshows' || item.CollectionType === 'music' || item.CollectionType === 'livetv') {\n\n            var idForLanding = item.CollectionType === 'livetv' ? item.CollectionType : item.Id;\n            html += '<div class=\"selectContainer\">';\n            html += '<select is=\"emby-select\" class=\"selectLanding\" data-folderid=\"' + idForLanding + '\" label=\"' + globalize.translate('LabelDefaultScreen') + '\">';\n\n            var userValue = userSettings.get('landing-' + idForLanding);\n\n            html += getLandingScreenOptionsHtml(item.CollectionType, userValue);\n\n            html += '</select>';\n            html += '</div>';\n        }\n\n        if (html) {\n\n            var prefix = '';\n            prefix += '<div class=\"verticalSection\">';\n\n            prefix += '<h2 class=\"sectionTitle\">';\n            prefix += item.Name;\n            prefix += '</h2>';\n\n            html = prefix + html;\n            html += '</div>';\n        }\n\n        return html;\n    }\n\n    function renderPerLibrarySettings(context, user, userViews, userSettings, apiClient) {\n\n        var elem = context.querySelector('.perLibrarySettings');\n        var html = '';\n\n        for (var i = 0, length = userViews.length; i < length; i++) {\n\n            html += getPerLibrarySettingsHtml(userViews[i], user, userSettings, apiClient);\n        }\n\n        elem.innerHTML = html;\n    }\n\n    function loadForm(context, user, userSettings, apiClient) {\n\n        context.querySelector('.chkHidePlayedFromLatest').checked = user.Configuration.HidePlayedInLatest || false;\n\n        updateHomeSectionValues(context, userSettings);\n\n        var promise1 = apiClient.getUserViews({ IncludeHidden: true }, user.Id);\n        var promise2 = apiClient.getJSON(apiClient.getUrl('Users/' + user.Id + '/GroupingOptions'));\n\n        Promise.all([promise1, promise2]).then(function (responses) {\n\n            renderViewOrder(context, user, responses[0]);\n\n            renderPerLibrarySettings(context, user, responses[0].Items, userSettings, apiClient);\n\n            renderViews(context, user, responses[1]);\n\n            loading.hide();\n        });\n    }\n\n    function getSibling(elem, type, className) {\n\n        var sibling = elem[type];\n\n        while (sibling != null) {\n            if (sibling.classList.contains(className)) {\n                break;\n            }\n        }\n\n        if (sibling != null) {\n            if (!sibling.classList.contains(className)) {\n                sibling = null;\n            }\n        }\n\n        return sibling;\n    }\n\n    function onSectionOrderListClick(e) {\n\n        var target = dom.parentWithClass(e.target, 'btnViewItemMove');\n\n        if (target) {\n            var viewItem = dom.parentWithClass(target, 'viewItem');\n\n            if (viewItem) {\n                var ul = dom.parentWithClass(viewItem, 'paperList');\n\n                if (target.classList.contains('btnViewItemDown')) {\n\n                    var next = viewItem.nextSibling;\n\n                    if (next) {\n                        viewItem.parentNode.removeChild(viewItem);\n                        next.parentNode.insertBefore(viewItem, next.nextSibling);\n                        focusManager.focus(e.target);\n                    }\n\n                } else {\n\n                    var prev = viewItem.previousSibling;\n\n                    if (prev) {\n                        viewItem.parentNode.removeChild(viewItem);\n                        prev.parentNode.insertBefore(viewItem, prev);\n                        focusManager.focus(e.target);\n                    }\n                }\n            }\n        }\n    }\n\n    function getCheckboxItems(selector, context, isChecked) {\n\n        var inputs = context.querySelectorAll(selector);\n        var list = [];\n\n        for (var i = 0, length = inputs.length; i < length; i++) {\n\n            if (inputs[i].checked === isChecked) {\n                list.push(inputs[i]);\n            }\n\n        }\n\n        return list;\n    }\n\n    function saveUser(context, user, userSettingsInstance, apiClient) {\n\n        user.Configuration.HidePlayedInLatest = context.querySelector('.chkHidePlayedFromLatest').checked;\n\n        user.Configuration.LatestItemsExcludes = getCheckboxItems('.chkIncludeInLatest', context, false).map(function (i) {\n\n            return i.getAttribute('data-folderid');\n        });\n\n        user.Configuration.MyMediaExcludes = getCheckboxItems('.chkIncludeInMyMedia', context, false).map(function (i) {\n\n            return i.getAttribute('data-folderid');\n        });\n\n        user.Configuration.GroupedFolders = getCheckboxItems('.chkGroupFolder', context, true).map(function (i) {\n\n            return i.getAttribute('data-folderid');\n        });\n\n        var viewItems = context.querySelectorAll('.viewItem');\n        var orderedViews = [];\n        var i;\n        var length;\n        for (i = 0, length = viewItems.length; i < length; i++) {\n            orderedViews.push(viewItems[i].getAttribute('data-viewid'));\n        }\n\n        user.Configuration.OrderedViews = orderedViews;\n\n        userSettingsInstance.set('tvhome', context.querySelector('.selectTVHomeScreen').value);\n\n        userSettingsInstance.set('homesection0', context.querySelector('#selectHomeSection1').value);\n        userSettingsInstance.set('homesection1', context.querySelector('#selectHomeSection2').value);\n        userSettingsInstance.set('homesection2', context.querySelector('#selectHomeSection3').value);\n        userSettingsInstance.set('homesection3', context.querySelector('#selectHomeSection4').value);\n        userSettingsInstance.set('homesection4', context.querySelector('#selectHomeSection5').value);\n        userSettingsInstance.set('homesection5', context.querySelector('#selectHomeSection6').value);\n        userSettingsInstance.set('homesection6', context.querySelector('#selectHomeSection7').value);\n\n        var selectLandings = context.querySelectorAll('.selectLanding');\n        for (i = 0, length = selectLandings.length; i < length; i++) {\n            var selectLanding = selectLandings[i];\n            userSettingsInstance.set('landing-' + selectLanding.getAttribute('data-folderid'), selectLanding.value);\n        }\n\n        return apiClient.updateUserConfiguration(user.Id, user.Configuration);\n    }\n\n    function save(instance, context, userId, userSettings, apiClient, enableSaveConfirmation) {\n\n        loading.show();\n\n        apiClient.getUser(userId).then(function (user) {\n\n            saveUser(context, user, userSettings, apiClient).then(function () {\n\n                loading.hide();\n                if (enableSaveConfirmation) {\n                    require(['toast'], function (toast) {\n                        toast(globalize.translate('SettingsSaved'));\n                    });\n                }\n\n                events.trigger(instance, 'saved');\n\n            }, function () {\n                loading.hide();\n            });\n        });\n    }\n\n    function onSubmit(e) {\n\n        var self = this;\n        var apiClient = connectionManager.getApiClient(self.options.serverId);\n        var userId = self.options.userId;\n        var userSettings = self.options.userSettings;\n\n        userSettings.setUserInfo(userId, apiClient).then(function () {\n\n            var enableSaveConfirmation = self.options.enableSaveConfirmation;\n            save(self, self.options.element, userId, userSettings, apiClient, enableSaveConfirmation);\n        });\n\n        // Disable default form submission\n        if (e) {\n            e.preventDefault();\n        }\n        return false;\n    }\n\n    function onChange(e) {\n\n        var chkIncludeInMyMedia = dom.parentWithClass(e.target, 'chkIncludeInMyMedia');\n        if (!chkIncludeInMyMedia) {\n            return;\n        }\n\n        var section = dom.parentWithClass(chkIncludeInMyMedia, 'verticalSection');\n        var fldIncludeInLatest = section.querySelector('.fldIncludeInLatest');\n        if (fldIncludeInLatest) {\n            if (chkIncludeInMyMedia.checked) {\n                fldIncludeInLatest.classList.remove('hide');\n            } else {\n                fldIncludeInLatest.classList.add('hide');\n            }\n        }\n    }\n\n    function embed(options, self) {\n\n        require(['text!./homeScreenSettings.template.html'], function (template) {\n\n            for (var i = 1; i <= numConfigurableSections; i++) {\n                template = template.replace('{section' + i + 'label}', globalize.translate('LabelHomeScreenSectionValue', i));\n            }\n\n            options.element.innerHTML = globalize.translateDocument(template, 'core');\n\n            options.element.querySelector('.viewOrderList').addEventListener('click', onSectionOrderListClick);\n            options.element.querySelector('form').addEventListener('submit', onSubmit.bind(self));\n            options.element.addEventListener('change', onChange);\n\n            if (options.enableSaveButton) {\n                options.element.querySelector('.btnSave').classList.remove('hide');\n            }\n\n            if (layoutManager.tv) {\n                options.element.querySelector('.selectTVHomeScreenContainer').classList.remove('hide');\n            } else {\n                options.element.querySelector('.selectTVHomeScreenContainer').classList.add('hide');\n            }\n\n            self.loadData(options.autoFocus);\n        });\n    }\n\n    function HomeScreenSettings(options) {\n\n        this.options = options;\n\n        embed(options, this);\n    }\n\n    HomeScreenSettings.prototype.loadData = function (autoFocus) {\n\n        var self = this;\n        var context = self.options.element;\n\n        loading.show();\n\n        var userId = self.options.userId;\n        var apiClient = connectionManager.getApiClient(self.options.serverId);\n        var userSettings = self.options.userSettings;\n\n        apiClient.getUser(userId).then(function (user) {\n\n            userSettings.setUserInfo(userId, apiClient).then(function () {\n\n                self.dataLoaded = true;\n\n                loadForm(context, user, userSettings, apiClient);\n\n                if (autoFocus) {\n                    focusManager.autoFocus(context);\n                }\n            });\n        });\n    };\n\n    HomeScreenSettings.prototype.submit = function () {\n        onSubmit.call(this);\n    };\n\n    HomeScreenSettings.prototype.destroy = function () {\n\n        this.options = null;\n    };\n\n    return HomeScreenSettings;\n});\n"]}