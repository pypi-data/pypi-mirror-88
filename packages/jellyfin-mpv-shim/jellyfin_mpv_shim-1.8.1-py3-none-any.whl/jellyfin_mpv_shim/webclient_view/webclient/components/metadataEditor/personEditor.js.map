{"version":3,"sources":["components/metadataEditor/personEditor.js"],"names":["define","dialogHelper","layoutManager","globalize","require","centerFocus","elem","horiz","on","scrollHelper","fn","show","person","Promise","resolve","reject","template","dialogOptions","removeOnClose","scrollY","tv","size","dlg","createDialog","classList","add","html","submitted","translateDocument","innerHTML","querySelector","value","Name","Type","Role","open","addEventListener","e","this","remove","close","preventDefault","dispatchEvent","CustomEvent","bubbles"],"mappings":"AAAA,aAAAA,OAAO,CAAC,eAAgB,gBAAiB,YAAa,UAAW,0BAA2B,aAAc,cAAe,wBAAwB,SAAUC,aAAcC,cAAeC,UAAWC,SAG/L,SAASC,YAAYC,KAAMC,MAAOC,IAC9BJ,QAAQ,CAAC,iBAAiB,SAAUK,cAChC,IAAIC,GAAKF,GAAK,KAAO,MACrBC,aAAaJ,YAAYK,IAAIJ,KAAMC,UAyF3C,MAAO,CACHI,KAtFJ,SAASA,KAAKC,QACV,OAAO,IAAIC,SAAQ,SAAUC,QAASC,QAElCX,QAAQ,CAAC,sCAAsC,SAAUY,UAErD,IAAIC,cAAgB,CAChBC,eAAe,EACfC,SAAS,GAGTjB,cAAckB,GACdH,cAAcI,KAAO,aAErBJ,cAAcI,KAAO,QAGzB,IAAIC,IAAMrB,aAAasB,aAAaN,eAEpCK,IAAIE,UAAUC,IAAI,cAElB,IAAIC,KAAO,GACPC,WAAY,EAEhBD,MAAQvB,UAAUyB,kBAAkBZ,SAAU,QAE9CM,IAAIO,UAAYH,KAEhBJ,IAAIQ,cAAc,iBAAkBR,KAAKS,MAAQnB,OAAOoB,MAAQ,GAChEV,IAAIQ,cAAc,oBAAqBR,KAAKS,MAAQnB,OAAOqB,MAAQ,GACnEX,IAAIQ,cAAc,iBAAkBR,KAAKS,MAAQnB,OAAOsB,MAAQ,GAE5DhC,cAAckB,IACdf,YAAYiB,IAAIQ,cAAc,uBAAuB,GAAO,GAGhE7B,aAAakC,KAAKb,KAElBA,IAAIc,iBAAiB,SAAS,WAEtBlC,cAAckB,IACdf,YAAYiB,IAAIQ,cAAc,uBAAuB,GAAO,GAG5DH,UACAb,QAAQF,QAERG,YAIRO,IAAIQ,cAAc,qBAAqBM,iBAAiB,UAAU,SAAUC,GAErD,UAAfC,KAAKP,MACLT,IAAIQ,cAAc,YAAYN,UAAUe,OAAO,QAE/CjB,IAAIQ,cAAc,YAAYN,UAAUC,IAAI,WAIpDH,IAAIQ,cAAc,cAAcM,iBAAiB,SAAS,SAAUC,GAEhEpC,aAAauC,MAAMlB,QAGvBA,IAAIQ,cAAc,QAAQM,iBAAiB,UAAU,SAAUC,GAW3D,OATAV,WAAY,EAEZf,OAAOoB,KAAOV,IAAIQ,cAAc,iBAAkBR,KAAKS,MACvDnB,OAAOqB,KAAOX,IAAIQ,cAAc,oBAAqBR,KAAKS,MAC1DnB,OAAOsB,KAAOZ,IAAIQ,cAAc,iBAAkBR,KAAKS,OAAS,KAEhE9B,aAAauC,MAAMlB,KAEnBe,EAAEI,kBACK,KAGXnB,IAAIQ,cAAc,qBAAqBY,cAAc,IAAIC,YAAY,SAAU,CAC3EC,SAAS","file":"personEditor.js","sourcesContent":["define(['dialogHelper', 'layoutManager', 'globalize', 'require', 'paper-icon-button-light', 'emby-input', 'emby-select', 'css!./../formdialog'], function (dialogHelper, layoutManager, globalize, require) {\n    'use strict';\n\n    function centerFocus(elem, horiz, on) {\n        require(['scrollHelper'], function (scrollHelper) {\n            var fn = on ? 'on' : 'off';\n            scrollHelper.centerFocus[fn](elem, horiz);\n        });\n    }\n\n    function show(person) {\n        return new Promise(function (resolve, reject) {\n\n            require(['text!./personEditor.template.html'], function (template) {\n\n                var dialogOptions = {\n                    removeOnClose: true,\n                    scrollY: false\n                };\n\n                if (layoutManager.tv) {\n                    dialogOptions.size = 'fullscreen';\n                } else {\n                    dialogOptions.size = 'small';\n                }\n\n                var dlg = dialogHelper.createDialog(dialogOptions);\n\n                dlg.classList.add('formDialog');\n\n                var html = '';\n                var submitted = false;\n\n                html += globalize.translateDocument(template, 'core');\n\n                dlg.innerHTML = html;\n\n                dlg.querySelector('.txtPersonName', dlg).value = person.Name || '';\n                dlg.querySelector('.selectPersonType', dlg).value = person.Type || '';\n                dlg.querySelector('.txtPersonRole', dlg).value = person.Role || '';\n\n                if (layoutManager.tv) {\n                    centerFocus(dlg.querySelector('.formDialogContent'), false, true);\n                }\n\n                dialogHelper.open(dlg);\n\n                dlg.addEventListener('close', function () {\n\n                    if (layoutManager.tv) {\n                        centerFocus(dlg.querySelector('.formDialogContent'), false, false);\n                    }\n\n                    if (submitted) {\n                        resolve(person);\n                    } else {\n                        reject();\n                    }\n                });\n\n                dlg.querySelector('.selectPersonType').addEventListener('change', function (e) {\n\n                    if (this.value === 'Actor') {\n                        dlg.querySelector('.fldRole').classList.remove('hide');\n                    } else {\n                        dlg.querySelector('.fldRole').classList.add('hide');\n                    }\n                });\n\n                dlg.querySelector('.btnCancel').addEventListener('click', function (e) {\n\n                    dialogHelper.close(dlg);\n                });\n\n                dlg.querySelector('form').addEventListener('submit', function (e) {\n\n                    submitted = true;\n\n                    person.Name = dlg.querySelector('.txtPersonName', dlg).value;\n                    person.Type = dlg.querySelector('.selectPersonType', dlg).value;\n                    person.Role = dlg.querySelector('.txtPersonRole', dlg).value || null;\n\n                    dialogHelper.close(dlg);\n\n                    e.preventDefault();\n                    return false;\n                });\n\n                dlg.querySelector('.selectPersonType').dispatchEvent(new CustomEvent('change', {\n                    bubbles: true\n                }));\n            });\n        });\n    }\n\n    return {\n        show: show\n    };\n});\n"]}