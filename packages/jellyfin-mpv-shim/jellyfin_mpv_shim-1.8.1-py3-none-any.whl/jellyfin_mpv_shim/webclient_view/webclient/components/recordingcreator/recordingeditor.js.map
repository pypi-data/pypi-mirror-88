{"version":3,"sources":["components/recordingcreator/recordingeditor.js"],"names":["define","dialogHelper","globalize","layoutManager","mediaInfo","appHost","connectionManager","require","loading","scrollHelper","imageLoader","currentDialog","currentItemId","currentServerId","currentResolve","recordingDeleted","closeDialog","isDeleted","close","onSubmit","e","form","this","apiClient","getApiClient","getLiveTvTimer","then","item","PrePaddingSeconds","querySelector","value","PostPaddingSeconds","updateLiveTvTimer","preventDefault","init","context","addEventListener","deleteTimer","timerId","Promise","resolve","reject","recordingHelper","cancelTimerWithConfirmation","serverId","reload","id","show","result","renderTimer","ProgramInfo","hide","showEditor","itemId","options","template","dialogOptions","removeOnClose","scrollY","tv","size","dlg","createDialog","classList","add","style","html","translateDocument","innerHTML","enableCancel","click","updated","deleted","centerFocus","on","open"],"mappings":"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","file":"recordingeditor.js","sourcesContent":["define(['dialogHelper', 'globalize', 'layoutManager', 'mediaInfo', 'apphost', 'connectionManager', 'require', 'loading', 'scrollHelper', 'imageLoader', 'scrollStyles', 'emby-button', 'emby-collapse', 'emby-input', 'paper-icon-button-light', 'css!./../formdialog', 'css!./recordingcreator', 'material-icons', 'flexStyles'], function (dialogHelper, globalize, layoutManager, mediaInfo, appHost, connectionManager, require, loading, scrollHelper, imageLoader) {\n    'use strict';\n\n    var currentDialog;\n    var recordingDeleted = false;\n    var currentItemId;\n    var currentServerId;\n    var currentResolve;\n\n    function deleteTimer(apiClient, timerId) {\n\n        return new Promise(function (resolve, reject) {\n\n            require(['recordingHelper'], function (recordingHelper) {\n\n                recordingHelper.cancelTimerWithConfirmation(timerId, apiClient.serverId()).then(resolve, reject);\n            });\n        });\n    }\n\n    function renderTimer(context, item, apiClient) {\n\n        var program = item.ProgramInfo || {};\n\n        context.querySelector('#txtPrePaddingMinutes').value = item.PrePaddingSeconds / 60;\n        context.querySelector('#txtPostPaddingMinutes').value = item.PostPaddingSeconds / 60;\n\n        loading.hide();\n    }\n\n    function closeDialog(isDeleted) {\n\n        recordingDeleted = isDeleted;\n\n        dialogHelper.close(currentDialog);\n    }\n\n    function onSubmit(e) {\n\n        var form = this;\n\n        var apiClient = connectionManager.getApiClient(currentServerId);\n\n        apiClient.getLiveTvTimer(currentItemId).then(function (item) {\n            item.PrePaddingSeconds = form.querySelector('#txtPrePaddingMinutes').value * 60;\n            item.PostPaddingSeconds = form.querySelector('#txtPostPaddingMinutes').value * 60;\n            apiClient.updateLiveTvTimer(item).then(currentResolve);\n        });\n\n        e.preventDefault();\n\n        // Disable default form submission\n        return false;\n    }\n\n    function init(context) {\n\n        context.querySelector('.btnCancel').addEventListener('click', function () {\n\n            closeDialog(false);\n        });\n\n        context.querySelector('.btnCancelRecording').addEventListener('click', function () {\n\n            var apiClient = connectionManager.getApiClient(currentServerId);\n            deleteTimer(apiClient, currentItemId).then(function () {\n                closeDialog(true);\n            });\n        });\n\n        context.querySelector('form').addEventListener('submit', onSubmit);\n    }\n\n    function reload(context, id) {\n\n        loading.show();\n        currentItemId = id;\n\n        var apiClient = connectionManager.getApiClient(currentServerId);\n        apiClient.getLiveTvTimer(id).then(function (result) {\n\n            renderTimer(context, result, apiClient);\n            loading.hide();\n        });\n    }\n\n    function showEditor(itemId, serverId, options) {\n\n        return new Promise(function (resolve, reject) {\n\n            recordingDeleted = false;\n            currentServerId = serverId;\n            loading.show();\n            options = options || {};\n            currentResolve = resolve;\n\n            require(['text!./recordingeditor.template.html'], function (template) {\n                var dialogOptions = {\n                    removeOnClose: true,\n                    scrollY: false\n                };\n\n                if (layoutManager.tv) {\n                    dialogOptions.size = 'fullscreen';\n                }\n\n                var dlg = dialogHelper.createDialog(dialogOptions);\n\n                dlg.classList.add('formDialog');\n                dlg.classList.add('recordingDialog');\n\n                if (!layoutManager.tv) {\n                    dlg.style['min-width'] = '20%';\n                    dlg.classList.add('dialog-fullscreen-lowres');\n                }\n\n                var html = '';\n\n                html += globalize.translateDocument(template, 'core');\n\n                dlg.innerHTML = html;\n\n                if (options.enableCancel === false) {\n                    dlg.querySelector('.formDialogFooter').classList.add('hide');\n                }\n\n                currentDialog = dlg;\n\n                dlg.addEventListener('closing', function () {\n\n                    if (!recordingDeleted) {\n                        dlg.querySelector('.btnSubmit').click();\n                    }\n                });\n\n                dlg.addEventListener('close', function () {\n\n                    if (recordingDeleted) {\n                        resolve({\n                            updated: true,\n                            deleted: true\n                        });\n                    }\n                });\n\n                if (layoutManager.tv) {\n                    scrollHelper.centerFocus.on(dlg.querySelector('.formDialogContent'), false);\n                }\n\n                init(dlg);\n\n                reload(dlg, itemId);\n\n                dialogHelper.open(dlg);\n            });\n        });\n    }\n\n    return {\n        show: showEditor\n    };\n});\n"]}