{"version":3,"sources":["components/serviceworker/notifications.js"],"names":["executeAction","action","data","serverId","getApiClient","Promise","reject","then","apiClient","id","cancelPackageInstallation","restartServer","clients","openWindow","resolve","self","addEventListener","event","notification","close","waitUntil"],"mappings":"AAAA,cACA,WAYI,SAASA,cAAcC,OAAQC,KAAMC,UACjC,OARJ,SAASC,aAAaD,UAIlB,OAAOE,QAAQC,SAIRF,GAAuBG,MAAK,SAAUC,WACzC,OAAQP,QACJ,IAAK,iBACD,IAAIQ,GAAKP,KAAKO,GACd,OAAOD,UAAUE,0BAA0BD,IAC/C,IAAK,UACD,OAAOD,UAAUG,gBACrB,QAEI,OADAC,QAAQC,WAAW,KACZR,QAAQS,cAK/BC,KAAKC,iBAAiB,qBAAqB,SAAUC,OACjD,IAAIC,aAAeD,MAAMC,aACzBA,aAAaC,QAEb,IAAIjB,KAAOgB,aAAahB,KAEpBD,QADWC,KAAKC,SACPc,MAAMhB,QAEnB,IAAKA,OAGD,OAFAW,QAAQC,WAAW,UACnBI,MAAMG,UAAUf,QAAQS,WAI5BG,MAAMG,UAAUpB,cAAcC,OAAQC,UACvC,GA1CP","file":"notifications.js","sourcesContent":["/* eslint-env serviceworker */\n(function () {\n    'use strict';\n\n    var connectionManager;\n\n    function getApiClient(serverId) {\n        if (connectionManager) {\n            return Promise.resolve(connectionManager.getApiClient(serverId));\n        }\n        return Promise.reject();\n    }\n\n    function executeAction(action, data, serverId) {\n        return getApiClient(serverId).then(function (apiClient) {\n            switch (action) {\n                case 'cancel-install':\n                    var id = data.id;\n                    return apiClient.cancelPackageInstallation(id);\n                case 'restart':\n                    return apiClient.restartServer();\n                default:\n                    clients.openWindow('/');\n                    return Promise.resolve();\n            }\n        });\n    }\n\n    self.addEventListener('notificationclick', function (event) {\n        var notification = event.notification;\n        notification.close();\n\n        var data = notification.data;\n        var serverId = data.serverId;\n        var action = event.action;\n\n        if (!action) {\n            clients.openWindow('/');\n            event.waitUntil(Promise.resolve());\n            return;\n        }\n\n        event.waitUntil(executeAction(action, data, serverId));\n    }, false);\n})();\n"]}