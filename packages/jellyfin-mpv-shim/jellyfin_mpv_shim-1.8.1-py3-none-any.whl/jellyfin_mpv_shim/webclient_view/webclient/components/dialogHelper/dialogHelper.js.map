{"version":3,"sources":["components/dialogHelper/dialogHelper.js"],"names":["define","appRouter","focusManager","browser","layoutManager","inputManager","dom","globalOnOpenCallback","enableAnimation","tv","supportsCssAnimation","tryRemoveElement","elem","parentNode","removeChild","err","console","error","DialogHashHandler","dlg","hash","resolve","self","this","originalUrl","window","location","href","activeElement","document","removeScrollLockOnClose","onHashChange","e","isBack","isOpened","removeEventListener","closedByBack","closeDialog","onBackCommand","detail","command","preventDefault","stopPropagation","addEventListener","onDialogClosed","isHistoryEnabled","off","removeBackdrop","backdrop","onAnimationFinish","classList","remove","setTimeout","body","history","state","dialogId","back","focus","getAttribute","removeCenterFocus","contains","centerFocus","dialogContainer","element","add","addBackdropOverlay","createElement","backdropParent","insertBefore","offsetWidth","target","close","passive","dispatchEvent","CustomEvent","bubbles","cancelable","animateDialogOpen","pushScope","autoFocus","blur","whichAnimationEvent","onFinish","once","pushState","on","animateDialogClose","animated","animationConfig","exit","name","style","animation","timing","duration","popScope","supportsOverscrollBehavior","horiz","require","scrollHelper","fn","open","parent","appendChild","Promise","reject","Date","getTime","createDialog","options","shouldLockDocumentScroll","size","touch","lockScroll","setAttribute","enableHistory","enableNativeHistory","modal","entryAnimation","exitAnimation","entryAnimationDuration","exitAnimationDuration","entry","easing","fill","scrollX","scrollY","removeOnClose","setOnOpen","val"],"mappings":"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","file":"dialogHelper.js","sourcesContent":["define(['appRouter', 'focusManager', 'browser', 'layoutManager', 'inputManager', 'dom', 'css!./dialoghelper.css', 'scrollStyles'], function (appRouter, focusManager, browser, layoutManager, inputManager, dom) {\n    'use strict';\n\n    var globalOnOpenCallback;\n\n    function enableAnimation() {\n\n        // too slow\n        if (browser.tv) {\n            return false;\n        }\n\n        return browser.supportsCssAnimation();\n    }\n\n    function removeCenterFocus(dlg) {\n\n        if (layoutManager.tv) {\n            if (dlg.classList.contains('scrollX')) {\n                centerFocus(dlg, true, false);\n            } else if (dlg.classList.contains('smoothScrollY')) {\n                centerFocus(dlg, false, false);\n            }\n        }\n    }\n\n    function tryRemoveElement(elem) {\n        var parentNode = elem.parentNode;\n        if (parentNode) {\n\n            // Seeing crashes in edge webview\n            try {\n                parentNode.removeChild(elem);\n            } catch (err) {\n                console.error('error removing dialog element: ' + err);\n            }\n        }\n    }\n\n    function DialogHashHandler(dlg, hash, resolve) {\n\n        var self = this;\n        self.originalUrl = window.location.href;\n        var activeElement = document.activeElement;\n        var removeScrollLockOnClose = false;\n\n        function onHashChange(e) {\n\n            var isBack = self.originalUrl === window.location.href;\n\n            if (isBack || !isOpened(dlg)) {\n                window.removeEventListener('popstate', onHashChange);\n            }\n\n            if (isBack) {\n                self.closedByBack = true;\n                closeDialog(dlg);\n            }\n        }\n\n        function onBackCommand(e) {\n\n            if (e.detail.command === 'back') {\n                self.closedByBack = true;\n                e.preventDefault();\n                e.stopPropagation();\n                closeDialog(dlg);\n            }\n        }\n\n        function onDialogClosed() {\n\n            if (!isHistoryEnabled(dlg)) {\n                inputManager.off(dlg, onBackCommand);\n            }\n\n            window.removeEventListener('popstate', onHashChange);\n\n            removeBackdrop(dlg);\n            dlg.classList.remove('opened');\n\n            if (removeScrollLockOnClose) {\n                document.body.classList.remove('noScroll');\n            }\n\n            if (!self.closedByBack && isHistoryEnabled(dlg)) {\n                var state = history.state || {};\n                if (state.dialogId === hash) {\n                    history.back();\n                }\n            }\n\n            if (layoutManager.tv) {\n                focusManager.focus(activeElement);\n            }\n\n            if (dlg.getAttribute('data-removeonclose') !== 'false') {\n                removeCenterFocus(dlg);\n\n                var dialogContainer = dlg.dialogContainer;\n                if (dialogContainer) {\n                    tryRemoveElement(dialogContainer);\n                    dlg.dialogContainer = null;\n                } else {\n                    tryRemoveElement(dlg);\n                }\n            }\n\n            //resolve();\n            // if we just called history.back(), then use a timeout to allow the history events to fire first\n            setTimeout(function () {\n                resolve({\n                    element: dlg,\n                    closedByBack: self.closedByBack\n                });\n            }, 1);\n        }\n\n        dlg.addEventListener('close', onDialogClosed);\n\n        var center = !dlg.classList.contains('dialog-fixedSize');\n        if (center) {\n            dlg.classList.add('centeredDialog');\n        }\n\n        dlg.classList.remove('hide');\n\n        addBackdropOverlay(dlg);\n\n        dlg.classList.add('opened');\n        dlg.dispatchEvent(new CustomEvent('open', {\n            bubbles: false,\n            cancelable: false\n        }));\n\n        if (dlg.getAttribute('data-lockscroll') === 'true' && !document.body.classList.contains('noScroll')) {\n            document.body.classList.add('noScroll');\n            removeScrollLockOnClose = true;\n        }\n\n        animateDialogOpen(dlg);\n\n        if (isHistoryEnabled(dlg)) {\n            appRouter.pushState({ dialogId: hash }, 'Dialog', '#' + hash);\n\n            window.addEventListener('popstate', onHashChange);\n        } else {\n            inputManager.on(dlg, onBackCommand);\n        }\n    }\n\n    function addBackdropOverlay(dlg) {\n\n        var backdrop = document.createElement('div');\n        backdrop.classList.add('dialogBackdrop');\n\n        var backdropParent = dlg.dialogContainer || dlg;\n        backdropParent.parentNode.insertBefore(backdrop, backdropParent);\n        dlg.backdrop = backdrop;\n\n        // trigger reflow or the backdrop will not animate\n        void backdrop.offsetWidth;\n        backdrop.classList.add('dialogBackdropOpened');\n\n        dom.addEventListener((dlg.dialogContainer || backdrop), 'click', function (e) {\n            if (e.target === dlg.dialogContainer) {\n                close(dlg);\n            }\n        }, {\n            passive: true\n        });\n\n        dom.addEventListener((dlg.dialogContainer || backdrop), 'contextmenu', function (e) {\n            if (e.target === dlg.dialogContainer) {\n                // Close the application dialog menu\n                close(dlg);\n                // Prevent the default browser context menu from appearing\n                e.preventDefault();\n            }\n        });\n    }\n\n    function isHistoryEnabled(dlg) {\n        return dlg.getAttribute('data-history') === 'true';\n    }\n\n    function open(dlg) {\n\n        if (globalOnOpenCallback) {\n            globalOnOpenCallback(dlg);\n        }\n\n        var parent = dlg.parentNode;\n        if (parent) {\n            parent.removeChild(dlg);\n        }\n\n        var dialogContainer = document.createElement('div');\n        dialogContainer.classList.add('dialogContainer');\n        dialogContainer.appendChild(dlg);\n        dlg.dialogContainer = dialogContainer;\n        document.body.appendChild(dialogContainer);\n\n        return new Promise(function (resolve, reject) {\n\n            new DialogHashHandler(dlg, 'dlg' + new Date().getTime(), resolve);\n        });\n    }\n\n    function isOpened(dlg) {\n\n        //return dlg.opened;\n        return !dlg.classList.contains('hide');\n    }\n\n    function close(dlg) {\n\n        if (isOpened(dlg)) {\n            if (isHistoryEnabled(dlg)) {\n                history.back();\n            } else {\n                closeDialog(dlg);\n            }\n        }\n    }\n\n    function closeDialog(dlg) {\n\n        if (!dlg.classList.contains('hide')) {\n\n            dlg.dispatchEvent(new CustomEvent('closing', {\n                bubbles: false,\n                cancelable: false\n            }));\n\n            var onAnimationFinish = function () {\n                focusManager.popScope(dlg);\n\n                dlg.classList.add('hide');\n                dlg.dispatchEvent(new CustomEvent('close', {\n                    bubbles: false,\n                    cancelable: false\n                }));\n            };\n\n            animateDialogClose(dlg, onAnimationFinish);\n        }\n    }\n\n    function animateDialogOpen(dlg) {\n\n        var onAnimationFinish = function () {\n            focusManager.pushScope(dlg);\n\n            if (dlg.getAttribute('data-autofocus') === 'true') {\n                focusManager.autoFocus(dlg);\n            }\n\n            if (document.activeElement && !dlg.contains(document.activeElement)) {\n                // Blur foreign element to prevent triggering of an action from the previous scope\n                document.activeElement.blur();\n            }\n        };\n\n        if (enableAnimation()) {\n\n            var onFinish = function () {\n                dom.removeEventListener(dlg, dom.whichAnimationEvent(), onFinish, {\n                    once: true\n                });\n                onAnimationFinish();\n            };\n            dom.addEventListener(dlg, dom.whichAnimationEvent(), onFinish, {\n                once: true\n            });\n            return;\n        }\n\n        onAnimationFinish();\n    }\n\n    function animateDialogClose(dlg, onAnimationFinish) {\n\n        if (enableAnimation()) {\n\n            var animated = true;\n\n            switch (dlg.animationConfig.exit.name) {\n\n                case 'fadeout':\n                    dlg.style.animation = 'fadeout ' + dlg.animationConfig.exit.timing.duration + 'ms ease-out normal both';\n                    break;\n                case 'scaledown':\n                    dlg.style.animation = 'scaledown ' + dlg.animationConfig.exit.timing.duration + 'ms ease-out normal both';\n                    break;\n                case 'slidedown':\n                    dlg.style.animation = 'slidedown ' + dlg.animationConfig.exit.timing.duration + 'ms ease-out normal both';\n                    break;\n                default:\n                    animated = false;\n                    break;\n            }\n            var onFinish = function () {\n                dom.removeEventListener(dlg, dom.whichAnimationEvent(), onFinish, {\n                    once: true\n                });\n                onAnimationFinish();\n            };\n            dom.addEventListener(dlg, dom.whichAnimationEvent(), onFinish, {\n                once: true\n            });\n\n            if (animated) {\n                return;\n            }\n        }\n\n        onAnimationFinish();\n    }\n\n    var supportsOverscrollBehavior = 'overscroll-behavior-y' in document.body.style;\n\n    function shouldLockDocumentScroll(options) {\n\n        if (supportsOverscrollBehavior && (options.size || !browser.touch)) {\n            return false;\n        }\n\n        if (options.lockScroll != null) {\n            return options.lockScroll;\n        }\n\n        if (options.size === 'fullscreen') {\n            return true;\n        }\n\n        if (options.size) {\n            return true;\n        }\n\n        return browser.touch;\n    }\n\n    function removeBackdrop(dlg) {\n\n        var backdrop = dlg.backdrop;\n\n        if (!backdrop) {\n            return;\n        }\n\n        dlg.backdrop = null;\n\n        var onAnimationFinish = function () {\n            tryRemoveElement(backdrop);\n        };\n\n        if (enableAnimation()) {\n\n            backdrop.classList.remove('dialogBackdropOpened');\n\n            // this is not firing animatonend\n            setTimeout(onAnimationFinish, 300);\n            return;\n        }\n\n        onAnimationFinish();\n    }\n\n    function centerFocus(elem, horiz, on) {\n        require(['scrollHelper'], function (scrollHelper) {\n            var fn = on ? 'on' : 'off';\n            scrollHelper.centerFocus[fn](elem, horiz);\n        });\n    }\n\n    function createDialog(options) {\n\n        options = options || {};\n\n        // If there's no native dialog support, use a plain div\n        // Also not working well in samsung tizen browser, content inside not clickable\n        // Just go ahead and always use a plain div because we're seeing issues overlaying absoltutely positioned content over a modal dialog\n        var dlg = document.createElement('div');\n\n        dlg.classList.add('focuscontainer');\n        dlg.classList.add('hide');\n\n        if (shouldLockDocumentScroll(options)) {\n            dlg.setAttribute('data-lockscroll', 'true');\n        }\n\n        if (options.enableHistory !== false && appRouter.enableNativeHistory()) {\n            dlg.setAttribute('data-history', 'true');\n        }\n\n        // without this safari will scroll the background instead of the dialog contents\n        // but not needed here since this is already on top of an existing dialog\n        // but skip it in IE because it's causing the entire browser to hang\n        // Also have to disable for firefox because it's causing select elements to not be clickable\n        if (options.modal !== false) {\n            dlg.setAttribute('modal', 'modal');\n        }\n\n        if (options.autoFocus !== false) {\n            dlg.setAttribute('data-autofocus', 'true');\n        }\n\n        var defaultEntryAnimation;\n        var defaultExitAnimation;\n\n        defaultEntryAnimation = 'scaleup';\n        defaultExitAnimation = 'scaledown';\n        var entryAnimation = options.entryAnimation || defaultEntryAnimation;\n        var exitAnimation = options.exitAnimation || defaultExitAnimation;\n\n        // If it's not fullscreen then lower the default animation speed to make it open really fast\n        var entryAnimationDuration = options.entryAnimationDuration || (options.size !== 'fullscreen' ? 180 : 280);\n        var exitAnimationDuration = options.exitAnimationDuration || (options.size !== 'fullscreen' ? 120 : 220);\n\n        dlg.animationConfig = {\n            // scale up\n            'entry': {\n                name: entryAnimation,\n                timing: {\n                    duration: entryAnimationDuration,\n                    easing: 'ease-out'\n                }\n            },\n            // fade out\n            'exit': {\n                name: exitAnimation,\n                timing: {\n                    duration: exitAnimationDuration,\n                    easing: 'ease-out',\n                    fill: 'both'\n                }\n            }\n        };\n\n        dlg.classList.add('dialog');\n\n        if (options.scrollX) {\n            dlg.classList.add('scrollX');\n            dlg.classList.add('smoothScrollX');\n\n            if (layoutManager.tv) {\n                centerFocus(dlg, true, true);\n            }\n        } else if (options.scrollY !== false) {\n            dlg.classList.add('smoothScrollY');\n\n            if (layoutManager.tv) {\n                centerFocus(dlg, false, true);\n            }\n        }\n\n        if (options.removeOnClose) {\n            dlg.setAttribute('data-removeonclose', 'true');\n        }\n\n        if (options.size) {\n            dlg.classList.add('dialog-fixedSize');\n            dlg.classList.add('dialog-' + options.size);\n        }\n\n        if (enableAnimation()) {\n\n            switch (dlg.animationConfig.entry.name) {\n\n                case 'fadein':\n                    dlg.style.animation = 'fadein ' + entryAnimationDuration + 'ms ease-out normal';\n                    break;\n                case 'scaleup':\n                    dlg.style.animation = 'scaleup ' + entryAnimationDuration + 'ms ease-out normal both';\n                    break;\n                case 'slideup':\n                    dlg.style.animation = 'slideup ' + entryAnimationDuration + 'ms ease-out normal';\n                    break;\n                case 'slidedown':\n                    dlg.style.animation = 'slidedown ' + entryAnimationDuration + 'ms ease-out normal';\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return dlg;\n    }\n\n    return {\n        open: open,\n        close: close,\n        createDialog: createDialog,\n        setOnOpen: function (val) {\n            globalOnOpenCallback = val;\n        }\n    };\n});\n"]}