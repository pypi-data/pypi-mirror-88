{"version":3,"sources":["components/actionSheet/actionSheet.js"],"names":["define","_exports","_dialogHelper","_layoutManager","_globalize","_dom","_embyButton","_actionSheet","_materialIcons","_scrollStyles","_listViewStyle","_interopRequireDefault","obj","__esModule","default","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","length","i","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","getPosition","options","dlg","windowSize","dom","getWindowSize","windowHeight","innerHeight","windowWidth","innerWidth","pos","getOffsets","elems","results","document","_step","_iterator","box","getBoundingClientRect","push","top","left","width","height","positionTo","positionY","offsetHeight","offsetWidth","overflowX","overflowY","offsetTop","offsetLeft","Math","max","centerFocus","elem","horiz","on","require","scrollHelper","fn","show","isFullscreen","dialogOptions","removeOnClose","enableHistory","scrollY","layoutManager","tv","size","autoFocus","modal","entryAnimation","exitAnimation","entryAnimationDuration","exitAnimationDuration","dialogHelper","createDialog","classList","add","dialogClass","html","scrollClassName","style","items","itemIcon","_step2","renderIcon","icons","_iterator2","item","icon","selected","center","title","text","scrollerClassName","menuItemClass","border","shaded","mobile","divider","id","concat","textContent","innerText","secondaryText","asideText","showCancel","globalize","translate","innerHTML","querySelector","selectedId","timeout","btnCloseActionSheet","addEventListener","close","setTimeout","Promise","resolve","reject","isResolved","actionSheetMenuItem","parentWithClass","target","getAttribute","resolveOnClick","indexOf","clearTimeout","callback","open","position","margin","defineProperty","_default"],"mappings":"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","file":"actionSheet.js","sourcesContent":["import dialogHelper from 'dialogHelper';\nimport layoutManager from 'layoutManager';\nimport globalize from 'globalize';\nimport dom from 'dom';\nimport 'emby-button';\nimport 'css!./actionSheet';\nimport 'material-icons';\nimport 'scrollStyles';\nimport 'listViewStyle';\n\nfunction getOffsets(elems) {\n\n    let results = [];\n\n    if (!document) {\n        return results;\n    }\n\n    for (const elem of elems) {\n        let box = elem.getBoundingClientRect();\n\n        results.push({\n            top: box.top,\n            left: box.left,\n            width: box.width,\n            height: box.height\n        });\n    }\n\n    return results;\n}\n\nfunction getPosition(options, dlg) {\n\n    const windowSize = dom.getWindowSize();\n    const windowHeight = windowSize.innerHeight;\n    const windowWidth = windowSize.innerWidth;\n\n    let pos = getOffsets([options.positionTo])[0];\n\n    if (options.positionY !== 'top') {\n        pos.top += (pos.height || 0) / 2;\n    }\n\n    pos.left += (pos.width || 0) / 2;\n\n    const height = dlg.offsetHeight || 300;\n    const width = dlg.offsetWidth || 160;\n\n    // Account for popup size\n    pos.top -= height / 2;\n    pos.left -= width / 2;\n\n    // Avoid showing too close to the bottom\n    const overflowX = pos.left + width - windowWidth;\n    const overflowY = pos.top + height - windowHeight;\n\n    if (overflowX > 0) {\n        pos.left -= (overflowX + 20);\n    }\n    if (overflowY > 0) {\n        pos.top -= (overflowY + 20);\n    }\n\n    pos.top += (options.offsetTop || 0);\n    pos.left += (options.offsetLeft || 0);\n\n    // Do some boundary checking\n    pos.top = Math.max(pos.top, 10);\n    pos.left = Math.max(pos.left, 10);\n\n    return pos;\n}\n\nfunction centerFocus(elem, horiz, on) {\n    require(['scrollHelper'], function (scrollHelper) {\n        const fn = on ? 'on' : 'off';\n        scrollHelper.centerFocus[fn](elem, horiz);\n    });\n}\n\nexport function show(options) {\n\n    // items\n    // positionTo\n    // showCancel\n    // title\n    let dialogOptions = {\n        removeOnClose: true,\n        enableHistory: options.enableHistory,\n        scrollY: false\n    };\n\n    let isFullscreen;\n\n    if (layoutManager.tv) {\n        dialogOptions.size = 'fullscreen';\n        isFullscreen = true;\n        dialogOptions.autoFocus = true;\n    } else {\n\n        dialogOptions.modal = false;\n        dialogOptions.entryAnimation = options.entryAnimation;\n        dialogOptions.exitAnimation = options.exitAnimation;\n        dialogOptions.entryAnimationDuration = options.entryAnimationDuration || 140;\n        dialogOptions.exitAnimationDuration = options.exitAnimationDuration || 100;\n        dialogOptions.autoFocus = false;\n    }\n\n    let dlg = dialogHelper.createDialog(dialogOptions);\n\n    if (isFullscreen) {\n        dlg.classList.add('actionsheet-fullscreen');\n    } else {\n        dlg.classList.add('actionsheet-not-fullscreen');\n    }\n\n    dlg.classList.add('actionSheet');\n\n    if (options.dialogClass) {\n        dlg.classList.add(options.dialogClass);\n    }\n\n    let html = '';\n\n    const scrollClassName = layoutManager.tv ? 'scrollY smoothScrollY hiddenScrollY' : 'scrollY';\n    let style = '';\n\n    // Admittedly a hack but right now the scrollbar is being factored into the width which is causing truncation\n    if (options.items.length > 20) {\n        const minWidth = dom.getWindowSize().innerWidth >= 300 ? 240 : 200;\n        style += 'min-width:' + minWidth + 'px;';\n    }\n\n    let renderIcon = false;\n    let icons = [];\n    let itemIcon;\n    for (const item of options.items) {\n\n        itemIcon = item.icon || (item.selected ? 'check' : null);\n\n        if (itemIcon) {\n            renderIcon = true;\n        }\n        icons.push(itemIcon || '');\n    }\n\n    if (layoutManager.tv) {\n        html += `<button is=\"paper-icon-button-light\" class=\"btnCloseActionSheet hide-mouse-idle-tv\" tabindex=\"-1\">\n                     <span class=\"material-icons arrow_back\"></span>\n                 </button>`;\n    }\n\n    // If any items have an icon, give them all an icon just to make sure they're all lined up evenly\n    const center = options.title && (!renderIcon /*|| itemsWithIcons.length != options.items.length*/);\n\n    if (center || layoutManager.tv) {\n        html += '<div class=\"actionSheetContent actionSheetContent-centered\">';\n    } else {\n        html += '<div class=\"actionSheetContent\">';\n    }\n\n    if (options.title) {\n\n        html += '<h1 class=\"actionSheetTitle\">' + options.title + '</h1>';\n    }\n    if (options.text) {\n        html += '<p class=\"actionSheetText\">' + options.text + '</p>';\n    }\n\n    let scrollerClassName = 'actionSheetScroller';\n    if (layoutManager.tv) {\n        scrollerClassName += ' actionSheetScroller-tv focuscontainer-x focuscontainer-y';\n    }\n    html += '<div class=\"' + scrollerClassName + ' ' + scrollClassName + '\" style=\"' + style + '\">';\n\n    let menuItemClass = 'listItem listItem-button actionSheetMenuItem';\n\n    if (options.border || options.shaded) {\n        menuItemClass += ' listItem-border';\n    }\n\n    if (options.menuItemClass) {\n        menuItemClass += ' ' + options.menuItemClass;\n    }\n\n    if (layoutManager.tv) {\n        menuItemClass += ' listItem-focusscale';\n    }\n\n    if (layoutManager.mobile) {\n        menuItemClass += ' actionsheet-xlargeFont';\n    }\n\n    // 'options.items' is HTMLOptionsCollection, so no fancy loops\n    for (let i = 0; i < options.items.length; i++) {\n        const item = options.items[i];\n\n        if (item.divider) {\n\n            html += '<div class=\"actionsheetDivider\"></div>';\n            continue;\n        }\n\n        const autoFocus = item.selected && layoutManager.tv ? ' autoFocus' : '';\n\n        // Check for null in case int 0 was passed in\n        const optionId = item.id == null || item.id === '' ? item.value : item.id;\n        html += '<button' + autoFocus + ' is=\"emby-button\" type=\"button\" class=\"' + menuItemClass + '\" data-id=\"' + optionId + '\">';\n\n        itemIcon = icons[i];\n\n        if (itemIcon) {\n            html += `<span class=\"actionsheetMenuItemIcon listItemIcon listItemIcon-transparent material-icons ${itemIcon}\"></span>`;\n        } else if (renderIcon && !center) {\n            html += '<span class=\"actionsheetMenuItemIcon listItemIcon listItemIcon-transparent material-icons check\" style=\"visibility:hidden;\"></span>';\n        }\n\n        html += '<div class=\"listItemBody actionsheetListItemBody\">';\n\n        html += '<div class=\"listItemBodyText actionSheetItemText\">';\n        html += (item.name || item.textContent || item.innerText);\n        html += '</div>';\n\n        if (item.secondaryText) {\n            html += `<div class=\"listItemBodyText secondary\">${item.secondaryText}</div>`;\n        }\n\n        html += '</div>';\n\n        if (item.asideText) {\n            html += `<div class=\"listItemAside actionSheetItemAsideText\">${item.asideText}</div>`;\n        }\n\n        html += '</button>';\n    }\n\n    if (options.showCancel) {\n        html += '<div class=\"buttons\">';\n        html += `<button is=\"emby-button\" type=\"button\" class=\"btnCloseActionSheet\">${globalize.translate('ButtonCancel')}</button>`;\n        html += '</div>';\n    }\n    html += '</div>';\n\n    dlg.innerHTML = html;\n\n    if (layoutManager.tv) {\n        centerFocus(dlg.querySelector('.actionSheetScroller'), false, true);\n    }\n\n    let btnCloseActionSheet = dlg.querySelector('.btnCloseActionSheet');\n    if (btnCloseActionSheet) {\n        btnCloseActionSheet.addEventListener('click', function () {\n            dialogHelper.close(dlg);\n        });\n    }\n\n    // Seeing an issue in some non-chrome browsers where this is requiring a double click\n    //var eventName = browser.firefox ? 'mousedown' : 'click';\n    let selectedId;\n\n    let timeout;\n    if (options.timeout) {\n        timeout = setTimeout(function () {\n            dialogHelper.close(dlg);\n        }, options.timeout);\n    }\n\n    return new Promise(function (resolve, reject) {\n\n        let isResolved;\n\n        dlg.addEventListener('click', function (e) {\n\n            const actionSheetMenuItem = dom.parentWithClass(e.target, 'actionSheetMenuItem');\n\n            if (actionSheetMenuItem) {\n                selectedId = actionSheetMenuItem.getAttribute('data-id');\n\n                if (options.resolveOnClick) {\n\n                    if (options.resolveOnClick.indexOf) {\n\n                        if (options.resolveOnClick.indexOf(selectedId) !== -1) {\n\n                            resolve(selectedId);\n                            isResolved = true;\n                        }\n\n                    } else {\n                        resolve(selectedId);\n                        isResolved = true;\n                    }\n                }\n\n                dialogHelper.close(dlg);\n            }\n\n        });\n\n        dlg.addEventListener('close', function () {\n\n            if (layoutManager.tv) {\n                centerFocus(dlg.querySelector('.actionSheetScroller'), false, false);\n            }\n\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n\n            if (!isResolved) {\n                if (selectedId != null) {\n                    if (options.callback) {\n                        options.callback(selectedId);\n                    }\n\n                    resolve(selectedId);\n                } else {\n                    reject();\n                }\n            }\n        });\n\n        dialogHelper.open(dlg);\n\n        const pos = options.positionTo && dialogOptions.size !== 'fullscreen' ? getPosition(options, dlg) : null;\n\n        if (pos) {\n            dlg.style.position = 'fixed';\n            dlg.style.margin = 0;\n            dlg.style.left = pos.left + 'px';\n            dlg.style.top = pos.top + 'px';\n        }\n    });\n}\n\nexport default {\n    show: show\n};\n"]}