{"version":3,"sources":["components/subtitleeditor/subtitleeditor.js"],"names":["define","dialogHelper","require","layoutManager","globalize","userSettings","connectionManager","loading","focusManager","dom","appHost","currentItem","hasChanges","downloadRemoteSubtitles","context","id","url","Id","apiClient","getApiClient","ServerId","ajax","type","getUrl","then","toast","translate","autoFocus","searchForSubtitles","language","set","show","getJSON","results","renderSearchResults","lastProvider","html","length","querySelector","classList","remove","innerHTML","hide","add","i","result","provider","ProviderName","tagName","tv","className","Comment","IsHashMatch","Name","Format","DownloadCount","reload","itemId","onGetItem","item","fillSubtitleList","subs","MediaStreams","filter","s","Type","map","itemHtml","Path","Index","DisplayTitle","join","elem","file","index","Math","max","lastIndexOf","substring","getItem","getCurrentUserId","onSearchSubmit","e","lang","this","value","parentWithClass","preventDefault","onSubtitleListClick","btnDelete","target","getAttribute","deleteLocalSubtitle","msg","confirm","title","text","confirmText","primary","onSubtitleResultsClick","subtitleId","btnOptions","showDownloadOptions","button","items","push","name","actionsheet","positionTo","btnDownload","centerFocus","horiz","on","scrollHelper","fn","showEditorInternal","serverId","template","dialogOptions","removeOnClose","scrollY","size","dlg","createDialog","translateDocument","addEventListener","btnSubmit","editorContent","getCultures","languages","fillLanguages","selectLanguage","l","ThreeLetterISOLanguageName","DisplayName","lastLanguage","get","getCurrentUser","user","Configuration","SubtitleLanguagePreference","close","Promise","resolve","reject","open","showEditor"],"mappings":"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","file":"subtitleeditor.js","sourcesContent":["define(['dialogHelper', 'require', 'layoutManager', 'globalize', 'userSettings', 'connectionManager', 'loading', 'focusManager', 'dom', 'apphost', 'emby-select', 'listViewStyle', 'paper-icon-button-light', 'css!./../formdialog', 'material-icons', 'css!./subtitleeditor', 'emby-button', 'flexStyles'], function (dialogHelper, require, layoutManager, globalize, userSettings, connectionManager, loading, focusManager, dom, appHost) {\n    'use strict';\n\n    var currentItem;\n    var hasChanges;\n\n    function showLocalSubtitles(context, index) {\n\n        loading.show();\n\n        var subtitleContent = context.querySelector('.subtitleContent');\n        subtitleContent.innerHTML = '';\n\n        var apiClient = connectionManager.getApiClient(currentItem.ServerId);\n        var url = 'Videos/' + currentItem.Id + '/Subtitles/' + index;\n\n        apiClient.ajax({\n\n            type: 'GET',\n            url: url\n\n        }).then(function (result) {\n\n            subtitleContent.innerHTML = result;\n\n            loading.hide();\n        });\n    }\n\n    function showRemoteSubtitles(context, id) {\n\n        loading.show();\n\n        var url = 'Providers/Subtitles/Subtitles/' + id;\n\n        ApiClient.get(ApiClient.getUrl(url)).then(function (result) {\n\n            // show result\n\n            loading.hide();\n        });\n    }\n\n    function downloadRemoteSubtitles(context, id) {\n\n        var url = 'Items/' + currentItem.Id + '/RemoteSearch/Subtitles/' + id;\n\n        var apiClient = connectionManager.getApiClient(currentItem.ServerId);\n        apiClient.ajax({\n\n            type: 'POST',\n            url: apiClient.getUrl(url)\n\n        }).then(function () {\n\n            hasChanges = true;\n\n            require(['toast'], function (toast) {\n                toast(globalize.translate('MessageDownloadQueued'));\n            });\n\n            focusManager.autoFocus(context);\n        });\n    }\n\n    function deleteLocalSubtitle(context, index) {\n\n        var msg = globalize.translate('MessageAreYouSureDeleteSubtitles');\n\n        require(['confirm'], function (confirm) {\n\n            confirm({\n\n                title: globalize.translate('ConfirmDeletion'),\n                text: msg,\n                confirmText: globalize.translate('Delete'),\n                primary: 'delete'\n\n            }).then(function () {\n\n                loading.show();\n\n                var itemId = currentItem.Id;\n                var url = 'Videos/' + itemId + '/Subtitles/' + index;\n\n                var apiClient = connectionManager.getApiClient(currentItem.ServerId);\n\n                apiClient.ajax({\n\n                    type: 'DELETE',\n                    url: apiClient.getUrl(url)\n\n                }).then(function () {\n\n                    hasChanges = true;\n                    reload(context, apiClient, itemId);\n\n                });\n            });\n        });\n    }\n\n    function fillSubtitleList(context, item) {\n\n        var streams = item.MediaStreams || [];\n\n        var subs = streams.filter(function (s) {\n\n            return s.Type === 'Subtitle';\n        });\n\n        var html = '';\n\n        if (subs.length) {\n\n            html += '<h2>' + globalize.translate('MySubtitles') + '</h2>';\n\n            html += '<div>';\n\n            html += subs.map(function (s) {\n\n                var itemHtml = '';\n\n                var tagName = layoutManager.tv ? 'button' : 'div';\n                var className = layoutManager.tv && s.Path ? 'listItem listItem-border btnDelete' : 'listItem listItem-border';\n\n                if (layoutManager.tv) {\n                    className += ' listItem-focusscale listItem-button';\n                }\n\n                className += ' listItem-noborder';\n\n                itemHtml += '<' + tagName + ' class=\"' + className + '\" data-index=\"' + s.Index + '\">';\n\n                itemHtml += '<span class=\"listItemIcon material-icons closed_caption\"></span>';\n\n                itemHtml += '<div class=\"listItemBody two-line\">';\n\n                itemHtml += '<div>';\n                itemHtml += s.DisplayTitle || '';\n                itemHtml += '</div>';\n\n                if (s.Path) {\n                    itemHtml += '<div class=\"secondary listItemBodyText\">' + (s.Path) + '</div>';\n                }\n\n                itemHtml += '</a>';\n                itemHtml += '</div>';\n\n                if (!layoutManager.tv) {\n                    if (s.Path) {\n                        itemHtml += '<button is=\"paper-icon-button-light\" data-index=\"' + s.Index + '\" title=\"' + globalize.translate('Delete') + '\" class=\"btnDelete listItemButton\"><span class=\"material-icons delete\"></span></button>';\n                    }\n                }\n\n                itemHtml += '</' + tagName + '>';\n\n                return itemHtml;\n\n            }).join('');\n\n            html += '</div>';\n        }\n\n        var elem = context.querySelector('.subtitleList');\n\n        if (subs.length) {\n            elem.classList.remove('hide');\n        } else {\n            elem.classList.add('hide');\n        }\n        elem.innerHTML = html;\n\n        //('.btnViewSubtitles', elem).on('click', function () {\n\n        //    var index = this.getAttribute('data-index');\n\n        //    showLocalSubtitles(context, index);\n\n        //});\n    }\n\n    function fillLanguages(context, apiClient, languages) {\n\n        var selectLanguage = context.querySelector('#selectLanguage');\n\n        selectLanguage.innerHTML = languages.map(function (l) {\n\n            return '<option value=\"' + l.ThreeLetterISOLanguageName + '\">' + l.DisplayName + '</option>';\n        });\n\n        var lastLanguage = userSettings.get('subtitleeditor-language');\n        if (lastLanguage) {\n            selectLanguage.value = lastLanguage;\n        } else {\n\n            apiClient.getCurrentUser().then(function (user) {\n\n                var lang = user.Configuration.SubtitleLanguagePreference;\n\n                if (lang) {\n                    selectLanguage.value = lang;\n                }\n            });\n        }\n    }\n\n    function renderSearchResults(context, results) {\n\n        var lastProvider = '';\n        var html = '';\n\n        if (!results.length) {\n\n            context.querySelector('.noSearchResults').classList.remove('hide');\n            context.querySelector('.subtitleResults').innerHTML = '';\n            loading.hide();\n            return;\n        }\n\n        context.querySelector('.noSearchResults').classList.add('hide');\n\n        for (var i = 0, length = results.length; i < length; i++) {\n\n            var result = results[i];\n\n            var provider = result.ProviderName;\n\n            if (provider !== lastProvider) {\n\n                if (i > 0) {\n                    html += '</div>';\n                }\n                html += '<h2>' + provider + '</h2>';\n                html += '<div>';\n                lastProvider = provider;\n            }\n\n            var tagName = layoutManager.tv ? 'button' : 'div';\n            var className = layoutManager.tv ? 'listItem listItem-border btnOptions' : 'listItem listItem-border';\n            if (layoutManager.tv) {\n                className += ' listItem-focusscale listItem-button';\n            }\n\n            html += '<' + tagName + ' class=\"' + className + '\" data-subid=\"' + result.Id + '\">';\n\n            html += '<span class=\"listItemIcon material-icons closed_caption\"></span>';\n\n            var bodyClass = result.Comment || result.IsHashMatch ? 'three-line' : 'two-line';\n\n            html += '<div class=\"listItemBody ' + bodyClass + '\">';\n\n            //html += '<a class=\"btnViewSubtitle\" href=\"#\" data-subid=\"' + result.Id + '\">';\n\n            html += '<div>' + (result.Name) + '</div>';\n            html += '<div class=\"secondary listItemBodyText\">';\n\n            if (result.Format) {\n                html += '<span style=\"margin-right:1em;\">' + globalize.translate('FormatValue', result.Format) + '</span>';\n            }\n\n            if (result.DownloadCount != null) {\n                html += '<span>' + globalize.translate('DownloadsValue', result.DownloadCount) + '</span>';\n            }\n            html += '</div>';\n\n            if (result.Comment) {\n                html += '<div class=\"secondary listItemBodyText\">' + (result.Comment) + '</div>';\n            }\n\n            if (result.IsHashMatch) {\n                html += '<div class=\"secondary listItemBodyText\"><div class=\"inline-flex align-items-center justify-content-center\" style=\"background:#3388cc;color:#fff;padding: .3em 1em;border-radius:1000em;\">' + globalize.translate('PerfectMatch') + '</div></div>';\n            }\n\n            //html += '</a>';\n\n            html += '</div>';\n\n            if (!layoutManager.tv) {\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" data-subid=\"' + result.Id + '\" class=\"btnDownload listItemButton\"><span class=\"material-icons file_download\"></span></button>';\n            }\n\n            html += '</' + tagName + '>';\n        }\n\n        if (results.length) {\n            html += '</div>';\n        }\n\n        var elem = context.querySelector('.subtitleResults');\n        elem.innerHTML = html;\n\n        //('.btnViewSubtitle', elem).on('click', function () {\n\n        //    var id = this.getAttribute('data-subid');\n        //    showRemoteSubtitles(context, id);\n        //});\n\n        loading.hide();\n    }\n\n    function searchForSubtitles(context, language) {\n\n        userSettings.set('subtitleeditor-language', language);\n\n        loading.show();\n\n        var apiClient = connectionManager.getApiClient(currentItem.ServerId);\n        var url = apiClient.getUrl('Items/' + currentItem.Id + '/RemoteSearch/Subtitles/' + language);\n\n        apiClient.getJSON(url).then(function (results) {\n\n            renderSearchResults(context, results);\n        });\n    }\n\n    function reload(context, apiClient, itemId) {\n\n        context.querySelector('.noSearchResults').classList.add('hide');\n\n        function onGetItem(item) {\n\n            currentItem = item;\n\n            fillSubtitleList(context, item);\n            var file = item.Path || '';\n            var index = Math.max(file.lastIndexOf('/'), file.lastIndexOf('\\\\'));\n            if (index > -1) {\n                file = file.substring(index + 1);\n            }\n\n            if (file) {\n                context.querySelector('.pathValue').innerHTML = file;\n                context.querySelector('.originalFile').classList.remove('hide');\n            } else {\n                context.querySelector('.pathValue').innerHTML = '';\n                context.querySelector('.originalFile').classList.add('hide');\n            }\n\n            loading.hide();\n        }\n\n        if (typeof itemId === 'string') {\n            apiClient.getItem(apiClient.getCurrentUserId(), itemId).then(onGetItem);\n        } else {\n            onGetItem(itemId);\n        }\n    }\n\n    function onSearchSubmit(e) {\n        var form = this;\n\n        var lang = form.querySelector('#selectLanguage', form).value;\n\n        searchForSubtitles(dom.parentWithClass(form, 'formDialogContent'), lang);\n\n        e.preventDefault();\n        return false;\n    }\n\n    function onSubtitleListClick(e) {\n\n        var btnDelete = dom.parentWithClass(e.target, 'btnDelete');\n        if (btnDelete) {\n            var index = btnDelete.getAttribute('data-index');\n            var context = dom.parentWithClass(btnDelete, 'subtitleEditorDialog');\n            deleteLocalSubtitle(context, index);\n        }\n    }\n\n    function onSubtitleResultsClick(e) {\n\n        var btnOptions = dom.parentWithClass(e.target, 'btnOptions');\n        var subtitleId;\n        var context;\n\n        if (btnOptions) {\n            subtitleId = btnOptions.getAttribute('data-subid');\n            context = dom.parentWithClass(btnOptions, 'subtitleEditorDialog');\n            showDownloadOptions(btnOptions, context, subtitleId);\n        }\n\n        var btnDownload = dom.parentWithClass(e.target, 'btnDownload');\n        if (btnDownload) {\n            subtitleId = btnDownload.getAttribute('data-subid');\n            context = dom.parentWithClass(btnDownload, 'subtitleEditorDialog');\n            downloadRemoteSubtitles(context, subtitleId);\n        }\n    }\n\n    function showDownloadOptions(button, context, subtitleId) {\n\n        var items = [];\n\n        items.push({\n            name: globalize.translate('Download'),\n            id: 'download'\n        });\n\n        require(['actionsheet'], function (actionsheet) {\n\n            actionsheet.show({\n                items: items,\n                positionTo: button\n\n            }).then(function (id) {\n\n                switch (id) {\n\n                    case 'download':\n                        downloadRemoteSubtitles(context, subtitleId);\n                        break;\n                    default:\n                        break;\n                }\n            });\n\n        });\n    }\n\n    function centerFocus(elem, horiz, on) {\n        require(['scrollHelper'], function (scrollHelper) {\n            var fn = on ? 'on' : 'off';\n            scrollHelper.centerFocus[fn](elem, horiz);\n        });\n    }\n\n    function showEditorInternal(itemId, serverId, template) {\n\n        hasChanges = false;\n\n        var apiClient = connectionManager.getApiClient(serverId);\n        return apiClient.getItem(apiClient.getCurrentUserId(), itemId).then(function (item) {\n\n            var dialogOptions = {\n                removeOnClose: true,\n                scrollY: false\n            };\n\n            if (layoutManager.tv) {\n                dialogOptions.size = 'fullscreen';\n            } else {\n                dialogOptions.size = 'small';\n            }\n\n            var dlg = dialogHelper.createDialog(dialogOptions);\n\n            dlg.classList.add('formDialog');\n            dlg.classList.add('subtitleEditorDialog');\n\n            dlg.innerHTML = globalize.translateDocument(template, 'core');\n\n            dlg.querySelector('.originalSubtitleFileLabel').innerHTML = globalize.translate('File');\n\n            dlg.querySelector('.subtitleSearchForm').addEventListener('submit', onSearchSubmit);\n\n            var btnSubmit = dlg.querySelector('.btnSubmit');\n\n            if (layoutManager.tv) {\n                centerFocus(dlg.querySelector('.formDialogContent'), false, true);\n                dlg.querySelector('.btnSearchSubtitles').classList.add('hide');\n            } else {\n                btnSubmit.classList.add('hide');\n            }\n\n            var editorContent = dlg.querySelector('.formDialogContent');\n\n            dlg.querySelector('.subtitleList').addEventListener('click', onSubtitleListClick);\n            dlg.querySelector('.subtitleResults').addEventListener('click', onSubtitleResultsClick);\n\n            apiClient.getCultures().then(function (languages) {\n\n                fillLanguages(editorContent, apiClient, languages);\n            });\n\n            dlg.querySelector('.btnCancel').addEventListener('click', function () {\n\n                dialogHelper.close(dlg);\n            });\n\n            return new Promise(function (resolve, reject) {\n\n                dlg.addEventListener('close', function () {\n\n                    if (layoutManager.tv) {\n                        centerFocus(dlg.querySelector('.formDialogContent'), false, false);\n                    }\n\n                    if (hasChanges) {\n                        resolve();\n                    } else {\n                        reject();\n                    }\n                });\n\n                dialogHelper.open(dlg);\n\n                reload(editorContent, apiClient, item);\n            });\n        });\n    }\n\n    function showEditor(itemId, serverId) {\n\n        loading.show();\n\n        return new Promise(function (resolve, reject) {\n\n            require(['text!./subtitleeditor.template.html'], function (template) {\n\n                showEditorInternal(itemId, serverId, template).then(resolve, reject);\n            });\n        });\n\n    }\n\n    return {\n        show: showEditor\n    };\n});\n"]}