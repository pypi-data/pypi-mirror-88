{"version":3,"sources":["components/imageUploader/imageUploader.js"],"names":["define","dialogHelper","connectionManager","dom","loading","scrollHelper","layoutManager","globalize","require","currentItemId","currentServerId","currentFile","hasChanges","onFileReaderError","evt","hide","target","error","code","NOT_FOUND_ERR","toast","translate","ABORT_ERR","onSubmit","e","file","type","startsWith","preventDefault","show","dlg","parentWithClass","this","imageType","querySelector","value","getApiClient","uploadItemImage","then","close","initEditor","page","addEventListener","setFiles","files","match","innerHTML","classList","add","theFile","reader","FileReader","onerror","onloadstart","onabort","console","debug","onload","html","result","escape","name","join","remove","readAsDataURL","click","options","Promise","resolve","reject","showEditor","template","itemId","serverId","dialogOptions","removeOnClose","tv","size","createDialog","translateDocument","centerFocus","on","off","open"],"mappings":"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","file":"imageUploader.js","sourcesContent":["define(['dialogHelper', 'connectionManager', 'dom', 'loading', 'scrollHelper', 'layoutManager', 'globalize', 'require', 'emby-button', 'emby-select', 'formDialogStyle', 'css!./style'], function (dialogHelper, connectionManager, dom, loading, scrollHelper, layoutManager, globalize, require) {\n    'use strict';\n\n    var currentItemId;\n    var currentServerId;\n    var currentFile;\n    var hasChanges = false;\n\n    function onFileReaderError(evt) {\n\n        loading.hide();\n\n        switch (evt.target.error.code) {\n            case evt.target.error.NOT_FOUND_ERR:\n                require(['toast'], function (toast) {\n                    toast(globalize.translate('MessageFileReadError'));\n                });\n                break;\n            case evt.target.error.ABORT_ERR:\n                break; // noop\n            default:\n                require(['toast'], function (toast) {\n                    toast(globalize.translate('MessageFileReadError'));\n                });\n                break;\n        }\n    }\n\n    function setFiles(page, files) {\n\n        var file = files[0];\n\n        if (!file || !file.type.match('image.*')) {\n            page.querySelector('#imageOutput').innerHTML = '';\n            page.querySelector('#fldUpload').classList.add('hide');\n            currentFile = null;\n            return;\n        }\n\n        currentFile = file;\n\n        var reader = new FileReader();\n\n        reader.onerror = onFileReaderError;\n        reader.onloadstart = function () {\n            page.querySelector('#fldUpload').classList.add('hide');\n        };\n        reader.onabort = function () {\n            loading.hide();\n            console.debug('File read cancelled');\n        };\n\n        // Closure to capture the file information.\n        reader.onload = (function (theFile) {\n            return function (e) {\n\n                // Render thumbnail.\n                var html = ['<img style=\"max-width:100%;max-height:100%;\" src=\"', e.target.result, '\" title=\"', escape(theFile.name), '\"/>'].join('');\n\n                page.querySelector('#imageOutput').innerHTML = html;\n                page.querySelector('#dropImageText').classList.add('hide');\n                page.querySelector('#fldUpload').classList.remove('hide');\n            };\n        })(file);\n\n        // Read in the image file as a data URL.\n        reader.readAsDataURL(file);\n    }\n\n    function onSubmit(e) {\n\n        var file = currentFile;\n\n        if (!file) {\n            return false;\n        }\n\n        if (!file.type.startsWith('image/')) {\n            require(['toast'], function (toast) {\n                toast(globalize.translate('MessageImageFileTypeAllowed'));\n            });\n            e.preventDefault();\n            return false;\n        }\n\n        loading.show();\n\n        var dlg = dom.parentWithClass(this, 'dialog');\n\n        var imageType = dlg.querySelector('#selectImageType').value;\n        if (imageType === 'None') {\n            require(['toast'], function(toast) {\n                toast(globalize.translate('MessageImageTypeNotSelected'));\n            });\n            e.preventDefault();\n            return false;\n        }\n\n        connectionManager.getApiClient(currentServerId).uploadItemImage(currentItemId, imageType, file).then(function () {\n\n            dlg.querySelector('#uploadImage').value = '';\n\n            loading.hide();\n            hasChanges = true;\n            dialogHelper.close(dlg);\n        });\n\n        e.preventDefault();\n        return false;\n    }\n\n    function initEditor(page) {\n\n        page.querySelector('form').addEventListener('submit', onSubmit);\n\n        page.querySelector('#uploadImage').addEventListener('change', function () {\n            setFiles(page, this.files);\n        });\n\n        page.querySelector('.btnBrowse').addEventListener('click', function () {\n            page.querySelector('#uploadImage').click();\n        });\n    }\n\n    function showEditor(options, resolve, reject) {\n\n        options = options || {};\n\n        require(['text!./imageUploader.template.html'], function (template) {\n\n            currentItemId = options.itemId;\n            currentServerId = options.serverId;\n\n            var dialogOptions = {\n                removeOnClose: true\n            };\n\n            if (layoutManager.tv) {\n                dialogOptions.size = 'fullscreen';\n            } else {\n                dialogOptions.size = 'small';\n            }\n\n            var dlg = dialogHelper.createDialog(dialogOptions);\n\n            dlg.classList.add('formDialog');\n\n            dlg.innerHTML = globalize.translateDocument(template, 'core');\n\n            if (layoutManager.tv) {\n                scrollHelper.centerFocus.on(dlg, false);\n            }\n\n            // Has to be assigned a z-index after the call to .open()\n            dlg.addEventListener('close', function () {\n\n                if (layoutManager.tv) {\n                    scrollHelper.centerFocus.off(dlg, false);\n                }\n\n                loading.hide();\n                resolve(hasChanges);\n            });\n\n            dialogHelper.open(dlg);\n\n            initEditor(dlg);\n\n            dlg.querySelector('#selectImageType').value = options.imageType || 'Primary';\n\n            dlg.querySelector('.btnCancel').addEventListener('click', function () {\n\n                dialogHelper.close(dlg);\n            });\n        });\n    }\n\n    return {\n        show: function (options) {\n\n            return new Promise(function (resolve, reject) {\n\n                hasChanges = false;\n\n                showEditor(options, resolve, reject);\n            });\n        }\n    };\n});\n"]}