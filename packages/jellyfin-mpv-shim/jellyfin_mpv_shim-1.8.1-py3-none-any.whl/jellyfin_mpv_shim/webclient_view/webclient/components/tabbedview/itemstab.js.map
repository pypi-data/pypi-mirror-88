{"version":3,"sources":["components/tabbedview/itemstab.js"],"names":["define","playbackManager","userSettings","AlphaPicker","AlphaNumericShortcuts","connectionManager","focusManager","loading","globalize","onAlphaValueChanged","value","this","alphaPicker","trySelectValue","instance","scroller","view","card","querySelector","toStart","values","index","indexOf","length","all","querySelectorAll","itemsContainer","showFilterMenu","require","FilterMenu","show","settingsKey","getSettingsKey","settings","getFilters","visibleSettings","getVisibleFilters","onChange","refreshItems","bind","parentId","params","itemTypes","getItemTypes","serverId","apiClient","filterMenuOptions","getFilterMenuOptions","then","updateAlphaPickerState","alphaPickerElement","getSortValues","sortBy","sortOrder","classList","remove","add","showSortMenu","SortMenu","sortOptions","getSortMenuOptions","updateSortText","showViewSettingsMenu","ViewSettings","getViewSettings","getVisibleViewSettings","updateItemsContainerForViewType","imageType","btnSortText","options","i","innerHTML","translate","name","btnSortIcon","bindAll","elems","eventName","fn","addEventListener","play","fetchData","result","items","Items","shuffle","ItemsTab","getApiClient","getItemsHtml","setAttribute","btnViewSettings","filterButtons","hasVisibleFilters","btnFilter","sortButtons","sortButton","type","hideOrShowAll","hide","prototype","basekey","showTitle","get","showYear","getDefaultImageType","onResume","refresh","resume","enableAlphaPicker","initAlphaPicker","element","itemClass","on","enableAlphaNumericShortcuts","alphaNumericShortcuts","autoFocus","IsPlayed","getFilter","IsUnplayed","IsFavorite","IsResumable","Is4K","IsHD","IsSD","Is3D","VideoTypes","SeriesStatus","HasSubtitles","HasTrailer","HasSpecialFeature","HasThemeSong","HasThemeVideo","GenreIds","getDefaultSortBy","option","getNameSortOption","push","getCommunityRatingSortOption","getCriticRatingSortOption","getDatePlayedSortOption","getPlayCountSortOption","setFilterStatus","hasFilters","bubble","insertAdjacentHTML","onPause","pause","destroy"],"mappings":"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","file":"itemstab.js","sourcesContent":["define(['playbackManager', 'userSettings', 'alphaPicker', 'alphaNumericShortcuts', 'connectionManager', 'focusManager', 'loading', 'globalize'], function (playbackManager, userSettings, AlphaPicker, AlphaNumericShortcuts, connectionManager, focusManager, loading, globalize) {\n    'use strict';\n\n    function trySelectValue(instance, scroller, view, value) {\n\n        var card;\n\n        // If it's the symbol just pick the first card\n        if (value === '#') {\n\n            card = view.querySelector('.card');\n\n            if (card) {\n                scroller.toStart(card, false);\n                return;\n            }\n        }\n\n        card = view.querySelector('.card[data-prefix^=\\'' + value + '\\']');\n\n        if (card) {\n            scroller.toStart(card, false);\n            return;\n        }\n\n        // go to the previous letter\n        var values = instance.alphaPicker.values();\n        var index = values.indexOf(value);\n\n        if (index < values.length - 2) {\n            trySelectValue(instance, scroller, view, values[index + 1]);\n        } else {\n            var all = view.querySelectorAll('.card');\n            card = all.length ? all[all.length - 1] : null;\n\n            if (card) {\n                scroller.toStart(card, false);\n            }\n        }\n    }\n\n    function onAlphaValueChanged() {\n\n        var value = this.alphaPicker.value();\n        var scroller = this.scroller;\n\n        trySelectValue(this, scroller, this.itemsContainer, value);\n    }\n\n    function initAlphaPicker(instance, view) {\n\n        instance.itemsContainer = view.querySelector('.itemsContainer');\n\n        instance.alphaPicker = new AlphaPicker({\n            element: instance.alphaPickerElement,\n            itemsContainer: instance.itemsContainer,\n            itemClass: 'card'\n        });\n\n        instance.alphaPicker.on('alphavaluechanged', onAlphaValueChanged.bind(instance));\n    }\n\n    function showFilterMenu() {\n\n        var instance = this;\n\n        require(['filterMenu'], function (FilterMenu) {\n\n            new FilterMenu().show({\n\n                settingsKey: instance.getSettingsKey(),\n                settings: instance.getFilters(),\n                visibleSettings: instance.getVisibleFilters(),\n                onChange: instance.itemsContainer.refreshItems.bind(instance.itemsContainer),\n                parentId: instance.params.parentId,\n                itemTypes: instance.getItemTypes ? instance.getItemTypes() : [],\n                serverId: instance.apiClient.serverId(),\n                filterMenuOptions: instance.getFilterMenuOptions()\n\n            }).then(function () {\n\n                instance.itemsContainer.refreshItems();\n            });\n        });\n    }\n\n    function updateAlphaPickerState(instance) {\n\n        if (!instance.alphaPicker) {\n            return;\n        }\n\n        var alphaPicker = instance.alphaPickerElement;\n        if (!alphaPicker) {\n            return;\n        }\n        var values = instance.getSortValues();\n\n        if (values.sortBy === 'SortName' && values.sortOrder === 'Ascending') {\n            alphaPicker.classList.remove('hide');\n        } else {\n            alphaPicker.classList.add('hide');\n        }\n    }\n\n    function showSortMenu() {\n        var instance = this;\n        require(['sortMenu'], function (SortMenu) {\n            new SortMenu().show({\n                settingsKey: instance.getSettingsKey(),\n                settings: instance.getSortValues(),\n                onChange: instance.itemsContainer.refreshItems.bind(instance.itemsContainer),\n                serverId: instance.params.serverId,\n                sortOptions: instance.getSortMenuOptions()\n            }).then(function () {\n                updateSortText(instance);\n                updateAlphaPickerState(instance);\n                instance.itemsContainer.refreshItems();\n            });\n        });\n    }\n\n    function showViewSettingsMenu() {\n\n        var instance = this;\n\n        require(['viewSettings'], function (ViewSettings) {\n\n            new ViewSettings().show({\n\n                settingsKey: instance.getSettingsKey(),\n                settings: instance.getViewSettings(),\n                visibleSettings: instance.getVisibleViewSettings()\n\n            }).then(function () {\n\n                updateItemsContainerForViewType(instance);\n                instance.itemsContainer.refreshItems();\n            });\n        });\n    }\n\n    function updateItemsContainerForViewType(instance) {\n\n        var settings = instance.getViewSettings();\n\n        if (settings.imageType === 'list') {\n\n            instance.itemsContainer.classList.remove('vertical-wrap');\n            instance.itemsContainer.classList.add('vertical-list');\n\n        } else {\n            instance.itemsContainer.classList.add('vertical-wrap');\n            instance.itemsContainer.classList.remove('vertical-list');\n        }\n    }\n\n    function updateSortText(instance) {\n\n        var btnSortText = instance.btnSortText;\n        if (!btnSortText) {\n            return;\n        }\n\n        var options = instance.getSortMenuOptions();\n        var values = instance.getSortValues();\n\n        var sortBy = values.sortBy;\n\n        for (var i = 0, length = options.length; i < length; i++) {\n\n            if (sortBy === options[i].value) {\n\n                btnSortText.innerHTML = globalize.translate('SortByValue', options[i].name);\n                break;\n            }\n        }\n\n        var btnSortIcon = instance.btnSortIcon;\n        if (!btnSortIcon) {\n            return;\n        }\n\n        btnSortIcon.classList.remove('arrow_downward', 'arrow_upward');\n        btnSortIcon.classList.add(values.sortOrder === 'Descending' ? 'arrow_downward' : 'arrow_upward');\n    }\n\n    function bindAll(elems, eventName, fn) {\n        for (var i = 0, length = elems.length; i < length; i++) {\n\n            elems[i].addEventListener(eventName, fn);\n        }\n    }\n\n    function play() {\n\n        this.fetchData().then(function (result) {\n            playbackManager.play({\n                items: result.Items || result\n            });\n        });\n    }\n\n    function shuffle() {\n\n        this.fetchData().then(function (result) {\n            playbackManager.play({\n                items: result.Items || result\n            });\n        });\n    }\n\n    function hideOrShowAll(elems, hide) {\n\n        for (var i = 0, length = elems.length; i < length; i++) {\n\n            if (hide) {\n                elems[i].classList.add('hide');\n            } else {\n                elems[i].classList.remove('hide');\n            }\n        }\n    }\n\n    function ItemsTab(view, params) {\n        this.view = view;\n        this.params = params;\n\n        if (params.serverId) {\n            this.apiClient = connectionManager.getApiClient(params.serverId);\n        }\n\n        this.itemsContainer = view.querySelector('.itemsContainer');\n        this.scroller = view.querySelector('.scrollFrameY');\n\n        this.itemsContainer.fetchData = this.fetchData.bind(this);\n        this.itemsContainer.getItemsHtml = this.getItemsHtml.bind(this);\n\n        if (params.parentId) {\n            this.itemsContainer.setAttribute('data-parentid', params.parentId);\n        }\n\n        var i;\n        var length;\n\n        var btnViewSettings = view.querySelectorAll('.btnViewSettings');\n        for (i = 0, length = btnViewSettings.length; i < length; i++) {\n\n            btnViewSettings[i].addEventListener('click', showViewSettingsMenu.bind(this));\n        }\n\n        var filterButtons = view.querySelectorAll('.btnFilter');\n        this.filterButtons = filterButtons;\n        var hasVisibleFilters = this.getVisibleFilters().length;\n        for (i = 0, length = filterButtons.length; i < length; i++) {\n\n            var btnFilter = filterButtons[i];\n            btnFilter.addEventListener('click', showFilterMenu.bind(this));\n\n            if (hasVisibleFilters) {\n                btnFilter.classList.remove('hide');\n            } else {\n                btnFilter.classList.add('hide');\n            }\n        }\n\n        var sortButtons = view.querySelectorAll('.btnSort');\n        this.sortButtons = sortButtons;\n        for (i = 0, length = sortButtons.length; i < length; i++) {\n\n            var sortButton = sortButtons[i];\n            sortButton.addEventListener('click', showSortMenu.bind(this));\n\n            if (params.type !== 'nextup') {\n                sortButton.classList.remove('hide');\n            }\n        }\n        this.btnSortText = view.querySelector('.btnSortText');\n        this.btnSortIcon = view.querySelector('.btnSortIcon');\n\n        this.alphaPickerElement = view.querySelector('.alphaPicker');\n\n        hideOrShowAll(view.querySelectorAll('.btnShuffle'), true);\n\n        bindAll(view.querySelectorAll('.btnPlay'), 'click', play.bind(this));\n        bindAll(view.querySelectorAll('.btnShuffle'), 'click', shuffle.bind(this));\n    }\n\n    function getSettingValue(key, defaultValue) {\n    }\n\n    ItemsTab.prototype.getViewSettings = function () {\n\n        var basekey = this.getSettingsKey();\n\n        return {\n            showTitle: userSettings.get(basekey + '-showTitle') !== 'false',\n            showYear: userSettings.get(basekey + '-showYear') !== 'false',\n            imageType: userSettings.get(basekey + '-imageType') || this.getDefaultImageType()\n        };\n    };\n\n    ItemsTab.prototype.getDefaultImageType = function () {\n\n        return 'primary';\n    };\n\n    ItemsTab.prototype.getSettingsKey = function () {\n\n        return this.params.parentId + '-1';\n    };\n\n    ItemsTab.prototype.onResume = function (options) {\n\n        if (options && options.refresh) {\n            updateSortText(this);\n            updateItemsContainerForViewType(this);\n            loading.show();\n        }\n\n        var view = this.view;\n\n        var scroller = this.scroller;\n        if (scroller && scroller.resume) {\n            scroller.resume();\n        }\n\n        if (this.enableAlphaPicker && !this.alphaPicker) {\n            initAlphaPicker(this, view);\n            updateAlphaPickerState(this);\n        }\n\n        if (this.enableAlphaNumericShortcuts !== false) {\n            this.alphaNumericShortcuts = new AlphaNumericShortcuts({\n                itemsContainer: this.itemsContainer\n            });\n        }\n\n        var instance = this;\n        var autoFocus = options.autoFocus;\n\n        this.itemsContainer.resume(options).then(function (result) {\n\n            loading.hide();\n\n            if (autoFocus) {\n                focusManager.autoFocus(instance.itemsContainer);\n            }\n        });\n    };\n\n    ItemsTab.prototype.getVisibleViewSettings = function () {\n\n        return [\n            'showTitle',\n            'showYear',\n            'imageType'\n        ];\n    };\n\n    ItemsTab.prototype.getFilters = function () {\n\n        var basekey = this.getSettingsKey();\n\n        return {\n            IsPlayed: userSettings.getFilter(basekey + '-filter-IsPlayed') === 'true',\n            IsUnplayed: userSettings.getFilter(basekey + '-filter-IsUnplayed') === 'true',\n            IsFavorite: userSettings.getFilter(basekey + '-filter-IsFavorite') === 'true',\n            IsResumable: userSettings.getFilter(basekey + '-filter-IsResumable') === 'true',\n            Is4K: userSettings.getFilter(basekey + '-filter-Is4K') === 'true',\n            IsHD: userSettings.getFilter(basekey + '-filter-IsHD') === 'true',\n            IsSD: userSettings.getFilter(basekey + '-filter-IsSD') === 'true',\n            Is3D: userSettings.getFilter(basekey + '-filter-Is3D') === 'true',\n            VideoTypes: userSettings.getFilter(basekey + '-filter-VideoTypes'),\n            SeriesStatus: userSettings.getFilter(basekey + '-filter-SeriesStatus'),\n            HasSubtitles: userSettings.getFilter(basekey + '-filter-HasSubtitles'),\n            HasTrailer: userSettings.getFilter(basekey + '-filter-HasTrailer'),\n            HasSpecialFeature: userSettings.getFilter(basekey + '-filter-HasSpecialFeature'),\n            HasThemeSong: userSettings.getFilter(basekey + '-filter-HasThemeSong'),\n            HasThemeVideo: userSettings.getFilter(basekey + '-filter-HasThemeVideo'),\n            GenreIds: userSettings.getFilter(basekey + '-filter-GenreIds')\n        };\n    };\n\n    ItemsTab.prototype.getSortValues = function () {\n\n        var basekey = this.getSettingsKey();\n\n        return {\n            sortBy: userSettings.getFilter(basekey + '-sortby') || this.getSortMenuOptions()[0].value,\n            sortOrder: userSettings.getFilter(basekey + '-sortorder') === 'Descending' ? 'Descending' : 'Ascending'\n        };\n    };\n\n    ItemsTab.prototype.getVisibleFilters = function () {\n\n        return [\n            'IsUnplayed',\n            'IsPlayed',\n            'IsFavorite',\n            'IsResumable',\n            'VideoType',\n            'HasSubtitles',\n            'HasTrailer',\n            'HasSpecialFeature',\n            'HasThemeSong',\n            'HasThemeVideo'\n        ];\n    };\n\n    ItemsTab.prototype.getDefaultSortBy = function () {\n\n        return 'SortName';\n    };\n\n    ItemsTab.prototype.getSortMenuOptions = function () {\n\n        var sortBy = [];\n\n        var option = this.getNameSortOption();\n        if (option) {\n            sortBy.push(option);\n        }\n\n        option = this.getCommunityRatingSortOption();\n        if (option) {\n            sortBy.push(option);\n        }\n\n        option = this.getCriticRatingSortOption();\n\n        if (option) {\n            sortBy.push(option);\n        }\n\n        sortBy.push({\n            name: globalize.translate('DateAdded'),\n            value: 'DateCreated,SortName'\n        });\n\n        option = this.getDatePlayedSortOption();\n        if (option) {\n            sortBy.push(option);\n        }\n\n        sortBy.push({\n            name: globalize.translate('ParentalRating'),\n            value: 'OfficialRating,SortName'\n        });\n\n        option = this.getPlayCountSortOption();\n        if (option) {\n            sortBy.push(option);\n        }\n\n        sortBy.push({\n            name: globalize.translate('ReleaseDate'),\n            value: 'PremiereDate,ProductionYear,SortName'\n        });\n\n        sortBy.push({\n            name: globalize.translate('Runtime'),\n            value: 'Runtime,SortName'\n        });\n\n        return sortBy;\n    };\n\n    ItemsTab.prototype.getNameSortOption = function () {\n\n        return {\n            name: globalize.translate('Name'),\n            value: 'SortName'\n        };\n    };\n\n    ItemsTab.prototype.getPlayCountSortOption = function () {\n\n        return {\n            name: globalize.translate('PlayCount'),\n            value: 'PlayCount,SortName'\n        };\n    };\n\n    ItemsTab.prototype.getDatePlayedSortOption = function () {\n\n        return {\n            name: globalize.translate('DatePlayed'),\n            value: 'DatePlayed,SortName'\n        };\n    };\n\n    ItemsTab.prototype.getCriticRatingSortOption = function () {\n\n        return {\n            name: globalize.translate('CriticRating'),\n            value: 'CriticRating,SortName'\n        };\n    };\n\n    ItemsTab.prototype.getCommunityRatingSortOption = function () {\n\n        return {\n            name: globalize.translate('CommunityRating'),\n            value: 'CommunityRating,SortName'\n        };\n    };\n\n    ItemsTab.prototype.getFilterMenuOptions = function () {\n\n        var params = this.params;\n\n        return {\n\n        };\n    };\n\n    ItemsTab.prototype.getItemTypes = function () {\n\n        return [];\n    };\n\n    ItemsTab.prototype.setFilterStatus = function (hasFilters) {\n\n        this.hasFilters = hasFilters;\n\n        var filterButtons = this.filterButtons;\n        if (!filterButtons.length) {\n            return;\n        }\n\n        for (var i = 0, length = filterButtons.length; i < length; i++) {\n\n            var btnFilter = filterButtons[i];\n\n            var bubble = btnFilter.querySelector('.filterButtonBubble');\n            if (!bubble) {\n\n                if (!hasFilters) {\n                    continue;\n                }\n\n                btnFilter.insertAdjacentHTML('afterbegin', '<div class=\"filterButtonBubble\">!</div>');\n                btnFilter.classList.add('btnFilterWithBubble');\n                bubble = btnFilter.querySelector('.filterButtonBubble');\n            }\n\n            if (hasFilters) {\n                bubble.classList.remove('hide');\n            } else {\n                bubble.classList.add('hide');\n            }\n        }\n    };\n\n    ItemsTab.prototype.onPause = function () {\n        var scroller = this.scroller;\n        if (scroller && scroller.pause) {\n            scroller.pause();\n        }\n\n        var alphaNumericShortcuts = this.alphaNumericShortcuts;\n        if (alphaNumericShortcuts) {\n            alphaNumericShortcuts.destroy();\n            this.alphaNumericShortcuts = null;\n        }\n    };\n\n    ItemsTab.prototype.destroy = function () {\n        this.view = null;\n        this.itemsContainer = null;\n        this.params = null;\n        this.apiClient = null;\n        this.scroller = null;\n        this.filterButtons = null;\n\n        if (this.alphaPicker) {\n            this.alphaPicker.destroy();\n            this.alphaPicker = null;\n        }\n\n        this.sortButtons = null;\n        this.btnSortText = null;\n        this.btnSortIcon = null;\n        this.alphaPickerElement = null;\n    };\n\n    return ItemsTab;\n});\n"]}