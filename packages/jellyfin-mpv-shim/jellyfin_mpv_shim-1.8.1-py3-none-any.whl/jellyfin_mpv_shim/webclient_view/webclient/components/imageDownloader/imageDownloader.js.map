{"version":3,"sources":["components/imageDownloader/imageDownloader.js"],"names":["define","dom","loading","appHost","dialogHelper","connectionManager","imageLoader","browser","layoutManager","scrollHelper","globalize","require","currentItemId","currentItemType","currentResolve","currentReject","selectedProvider","enableFocusTransform","slow","edge","hasChanges","browsableImagePageSize","browsableImageStartIndex","browsableImageType","getBaseRemoteOptions","options","itemId","reloadBrowsableImages","page","apiClient","show","type","startIndex","limit","IncludeAllLanguages","querySelector","checked","provider","ProviderName","getAvailableRemoteImages","then","result","renderRemoteImages","imagesResult","imageType","innerHTML","getPagingHtml","totalRecordCount","html","recordsEnd","Math","min","showControls","startAtDisplay","translate","TotalRecordCount","i","length","Images","getRemoteImageHtml","availableImagesList","lazyChildren","btnNextPage","btnPreviousPage","addEventListener","value","providersHtml","Providers","map","p","selectImageProvider","hide","downloadRemoteImage","url","Type","ImageUrl","dlg","parentWithClass","close","getDisplayUrl","getUrl","imageUrl","image","tagName","tv","enableFooterButtons","cssClass","shape","Url","supports","Width","Height","Language","CommunityRating","RatingType","toFixed","VoteCount","showEditor","serverId","itemType","template","getApiClient","dialogOptions","removeOnClose","size","createDialog","translateDocument","centerFocus","on","onDialogClosed","open","editorContent","initEditor","this","e","btnDownloadRemoteImage","target","card","getAttribute","btnImageCard","off","Promise","resolve","reject"],"mappings":"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","file":"imageDownloader.js","sourcesContent":["define(['dom', 'loading', 'apphost', 'dialogHelper', 'connectionManager', 'imageLoader', 'browser', 'layoutManager', 'scrollHelper', 'globalize', 'require', 'emby-checkbox', 'paper-icon-button-light', 'emby-button', 'formDialogStyle', 'cardStyle'], function (dom, loading, appHost, dialogHelper, connectionManager, imageLoader, browser, layoutManager, scrollHelper, globalize, require) {\n    'use strict';\n\n    var enableFocusTransform = !browser.slow && !browser.edge;\n\n    var currentItemId;\n    var currentItemType;\n    var currentResolve;\n    var currentReject;\n    var hasChanges = false;\n\n    // These images can be large and we're seeing memory problems in safari\n    var browsableImagePageSize = browser.slow ? 6 : 30;\n\n    var browsableImageStartIndex = 0;\n    var browsableImageType = 'Primary';\n    var selectedProvider;\n\n    function getBaseRemoteOptions() {\n\n        var options = {};\n\n        options.itemId = currentItemId;\n\n        return options;\n    }\n\n    function reloadBrowsableImages(page, apiClient) {\n\n        loading.show();\n\n        var options = getBaseRemoteOptions();\n\n        options.type = browsableImageType;\n        options.startIndex = browsableImageStartIndex;\n        options.limit = browsableImagePageSize;\n        options.IncludeAllLanguages = page.querySelector('#chkAllLanguages').checked;\n\n        var provider = selectedProvider || '';\n\n        if (provider) {\n            options.ProviderName = provider;\n        }\n\n        apiClient.getAvailableRemoteImages(options).then(function (result) {\n\n            renderRemoteImages(page, apiClient, result, browsableImageType, options.startIndex, options.limit);\n\n            page.querySelector('#selectBrowsableImageType').value = browsableImageType;\n\n            var providersHtml = result.Providers.map(function (p) {\n                return '<option value=\"' + p + '\">' + p + '</option>';\n            });\n\n            var selectImageProvider = page.querySelector('#selectImageProvider');\n            selectImageProvider.innerHTML = '<option value=\"\">' + globalize.translate('All') + '</option>' + providersHtml;\n            selectImageProvider.value = provider;\n\n            loading.hide();\n        });\n\n    }\n\n    function renderRemoteImages(page, apiClient, imagesResult, imageType, startIndex, limit) {\n\n        page.querySelector('.availableImagesPaging').innerHTML = getPagingHtml(startIndex, limit, imagesResult.TotalRecordCount);\n\n        var html = '';\n\n        for (var i = 0, length = imagesResult.Images.length; i < length; i++) {\n\n            html += getRemoteImageHtml(imagesResult.Images[i], imageType, apiClient);\n        }\n\n        var availableImagesList = page.querySelector('.availableImagesList');\n        availableImagesList.innerHTML = html;\n        imageLoader.lazyChildren(availableImagesList);\n\n        var btnNextPage = page.querySelector('.btnNextPage');\n        var btnPreviousPage = page.querySelector('.btnPreviousPage');\n\n        if (btnNextPage) {\n            btnNextPage.addEventListener('click', function () {\n                browsableImageStartIndex += browsableImagePageSize;\n                reloadBrowsableImages(page, apiClient);\n            });\n        }\n\n        if (btnPreviousPage) {\n            btnPreviousPage.addEventListener('click', function () {\n                browsableImageStartIndex -= browsableImagePageSize;\n                reloadBrowsableImages(page, apiClient);\n            });\n        }\n\n    }\n\n    function getPagingHtml(startIndex, limit, totalRecordCount) {\n\n        var html = '';\n\n        var recordsEnd = Math.min(startIndex + limit, totalRecordCount);\n\n        // 20 is the minimum page size\n        var showControls = totalRecordCount > limit;\n\n        html += '<div class=\"listPaging\">';\n\n        html += '<span style=\"margin-right: 10px;\">';\n\n        var startAtDisplay = totalRecordCount ? startIndex + 1 : 0;\n        html += globalize.translate('ListPaging', startAtDisplay, recordsEnd, totalRecordCount);\n\n        html += '</span>';\n\n        if (showControls) {\n            html += '<div data-role=\"controlgroup\" data-type=\"horizontal\" style=\"display:inline-block;\">';\n\n            html += '<button is=\"paper-icon-button-light\" title=\"' + globalize.translate('Previous') + '\" class=\"btnPreviousPage autoSize\" ' + (startIndex ? '' : 'disabled') + '><span class=\"material-icons arrow_back\"></span></button>';\n            html += '<button is=\"paper-icon-button-light\" title=\"' + globalize.translate('Next') + '\" class=\"btnNextPage autoSize\" ' + (startIndex + limit >= totalRecordCount ? 'disabled' : '') + '><span class=\"material-icons arrow_forward\"></span></button>';\n            html += '</div>';\n        }\n\n        html += '</div>';\n\n        return html;\n    }\n\n    function downloadRemoteImage(page, apiClient, url, type, provider) {\n        var options = getBaseRemoteOptions();\n\n        options.Type = type;\n        options.ImageUrl = url;\n        options.ProviderName = provider;\n\n        loading.show();\n\n        apiClient.downloadRemoteImage(options).then(function () {\n\n            hasChanges = true;\n            var dlg = dom.parentWithClass(page, 'dialog');\n            dialogHelper.close(dlg);\n        });\n    }\n\n    function getDisplayUrl(url, apiClient) {\n        return apiClient.getUrl('Images/Remote', { imageUrl: url });\n    }\n\n    function getRemoteImageHtml(image, imageType, apiClient) {\n        var tagName = layoutManager.tv ? 'button' : 'div';\n        var enableFooterButtons = !layoutManager.tv;\n\n        // TODO move card creation code to Card component\n\n        var html = '';\n\n        var cssClass = 'card scalableCard imageEditorCard';\n        var cardBoxCssClass = 'cardBox visualCardBox';\n\n        var shape = 'backdrop';\n        if (imageType === 'Backdrop' || imageType === 'Art' || imageType === 'Thumb' || imageType === 'Logo') {\n            shape = 'backdrop';\n        } else if (imageType === 'Banner') {\n            shape = 'banner';\n        } else if (imageType === 'Disc') {\n            shape = 'square';\n        } else {\n\n            if (currentItemType === 'Episode') {\n                shape = 'backdrop';\n            } else if (currentItemType === 'MusicAlbum' || currentItemType === 'MusicArtist') {\n                shape = 'square';\n            } else {\n                shape = 'portrait';\n            }\n        }\n\n        cssClass += ' ' + shape + 'Card ' + shape + 'Card-scalable';\n        if (tagName === 'button') {\n            cssClass += ' btnImageCard';\n\n            if (layoutManager.tv) {\n                cssClass += ' show-focus';\n\n                if (enableFocusTransform) {\n                    cssClass += ' show-animation';\n                }\n            }\n\n            html += '<button type=\"button\" class=\"' + cssClass + '\"';\n        } else {\n            html += '<div class=\"' + cssClass + '\"';\n        }\n\n        html += ' data-imageprovider=\"' + image.ProviderName + '\" data-imageurl=\"' + image.Url + '\" data-imagetype=\"' + image.Type + '\"';\n\n        html += '>';\n\n        html += '<div class=\"' + cardBoxCssClass + '\">';\n        html += '<div class=\"cardScalable visualCardBox-cardScalable\" style=\"background-color:transparent;\">';\n        html += '<div class=\"cardPadder-' + shape + '\"></div>';\n        html += '<div class=\"cardContent\">';\n\n        if (layoutManager.tv || !appHost.supports('externallinks')) {\n            html += '<div class=\"cardImageContainer lazy\" data-src=\"' + getDisplayUrl(image.Url, apiClient) + '\" style=\"background-position:center center;background-size:contain;\"></div>';\n        } else {\n            html += '<a is=\"emby-linkbutton\" target=\"_blank\" href=\"' + getDisplayUrl(image.Url, apiClient) + '\" class=\"button-link cardImageContainer lazy\" data-src=\"' + getDisplayUrl(image.Url, apiClient) + '\" style=\"background-position:center center;background-size:contain\"></a>';\n        }\n\n        html += '</div>';\n        html += '</div>';\n\n        // begin footer\n        html += '<div class=\"cardFooter visualCardBox-cardFooter\">';\n\n        html += '<div class=\"cardText cardTextCentered\">' + image.ProviderName + '</div>';\n\n        if (image.Width || image.Height || image.Language) {\n\n            html += '<div class=\"cardText cardText-secondary cardTextCentered\">';\n\n            if (image.Width && image.Height) {\n                html += image.Width + ' x ' + image.Height;\n\n                if (image.Language) {\n\n                    html += ' • ' + image.Language;\n                }\n            } else {\n                if (image.Language) {\n\n                    html += image.Language;\n                }\n            }\n\n            html += '</div>';\n        }\n\n        if (image.CommunityRating != null) {\n\n            html += '<div class=\"cardText cardText-secondary cardTextCentered\">';\n\n            if (image.RatingType === 'Likes') {\n                html += image.CommunityRating + (image.CommunityRating === 1 ? ' like' : ' likes');\n            } else {\n\n                if (image.CommunityRating) {\n                    html += image.CommunityRating.toFixed(1);\n\n                    if (image.VoteCount) {\n                        html += ' • ' + image.VoteCount + (image.VoteCount === 1 ? ' vote' : ' votes');\n                    }\n                } else {\n                    html += 'Unrated';\n                }\n            }\n\n            html += '</div>';\n        }\n\n        if (enableFooterButtons) {\n            html += '<div class=\"cardText cardTextCentered\">';\n\n            html += '<button is=\"paper-icon-button-light\" class=\"btnDownloadRemoteImage autoSize\" raised\" title=\"' + globalize.translate('Download') + '\"><span class=\"material-icons cloud_download\"></span></button>';\n            html += '</div>';\n        }\n\n        html += '</div>';\n        // end footer\n\n        html += '</div>';\n        //html += '</div>';\n\n        html += '</' + tagName + '>';\n\n        return html;\n    }\n\n    function initEditor(page, apiClient) {\n        page.querySelector('#selectBrowsableImageType').addEventListener('change', function () {\n            browsableImageType = this.value;\n            browsableImageStartIndex = 0;\n            selectedProvider = null;\n\n            reloadBrowsableImages(page, apiClient);\n        });\n\n        page.querySelector('#selectImageProvider').addEventListener('change', function () {\n\n            browsableImageStartIndex = 0;\n            selectedProvider = this.value;\n\n            reloadBrowsableImages(page, apiClient);\n        });\n\n        page.querySelector('#chkAllLanguages').addEventListener('change', function () {\n\n            browsableImageStartIndex = 0;\n\n            reloadBrowsableImages(page, apiClient);\n        });\n\n        page.addEventListener('click', function (e) {\n\n            var btnDownloadRemoteImage = dom.parentWithClass(e.target, 'btnDownloadRemoteImage');\n            if (btnDownloadRemoteImage) {\n                var card = dom.parentWithClass(btnDownloadRemoteImage, 'card');\n                downloadRemoteImage(page, apiClient, card.getAttribute('data-imageurl'), card.getAttribute('data-imagetype'), card.getAttribute('data-imageprovider'));\n                return;\n            }\n\n            var btnImageCard = dom.parentWithClass(e.target, 'btnImageCard');\n            if (btnImageCard) {\n                downloadRemoteImage(page, apiClient, btnImageCard.getAttribute('data-imageurl'), btnImageCard.getAttribute('data-imagetype'), btnImageCard.getAttribute('data-imageprovider'));\n            }\n        });\n    }\n\n    function showEditor(itemId, serverId, itemType) {\n        loading.show();\n\n        require(['text!./imageDownloader.template.html'], function (template) {\n\n            var apiClient = connectionManager.getApiClient(serverId);\n\n            currentItemId = itemId;\n            currentItemType = itemType;\n\n            var dialogOptions = {\n                removeOnClose: true\n            };\n\n            if (layoutManager.tv) {\n                dialogOptions.size = 'fullscreen';\n            } else {\n                dialogOptions.size = 'small';\n            }\n\n            var dlg = dialogHelper.createDialog(dialogOptions);\n\n            dlg.innerHTML = globalize.translateDocument(template, 'core');\n\n            if (layoutManager.tv) {\n                scrollHelper.centerFocus.on(dlg, false);\n            }\n\n            // Has to be assigned a z-index after the call to .open()\n            dlg.addEventListener('close', onDialogClosed);\n\n            dialogHelper.open(dlg);\n\n            var editorContent = dlg.querySelector('.formDialogContent');\n            initEditor(editorContent, apiClient);\n\n            dlg.querySelector('.btnCancel').addEventListener('click', function () {\n\n                dialogHelper.close(dlg);\n            });\n\n            reloadBrowsableImages(editorContent, apiClient);\n        });\n    }\n\n    function onDialogClosed() {\n        var dlg = this;\n\n        if (layoutManager.tv) {\n            scrollHelper.centerFocus.off(dlg, false);\n        }\n\n        loading.hide();\n        if (hasChanges) {\n            currentResolve();\n        } else {\n            currentReject();\n        }\n    }\n\n    return {\n        show: function (itemId, serverId, itemType, imageType) {\n            return new Promise(function (resolve, reject) {\n                currentResolve = resolve;\n                currentReject = reject;\n                hasChanges = false;\n                browsableImageStartIndex = 0;\n                browsableImageType = imageType || 'Primary';\n                selectedProvider = null;\n\n                showEditor(itemId, serverId, itemType);\n            });\n        }\n    };\n});\n"]}