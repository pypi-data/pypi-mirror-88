{"version":3,"sources":["controllers/movies/moviesrecommended.js"],"names":["define","events","layoutManager","inputManager","userSettings","libraryMenu","mainTabsManager","cardBuilder","dom","imageLoader","playbackManager","globalize","enableScrollX","desktop","getPortraitShape","getRecommendationHtml","recommendation","html","title","RecommendationType","translate","BaselineItemName","getCardsHtml","Items","shape","scalable","overlayPlayButton","allowBottomPadding","showTitle","showYear","centerText","autoFocus","page","require","autoFocuser","loadSuggestionsTab","view","params","tabContent","parentId","topParentId","userId","ApiClient","getCurrentUserId","console","debug","loadResume","screenWidth","getWindowSize","innerWidth","options","SortBy","SortOrder","IncludeItemTypes","Filters","Limit","Recursive","Fields","CollapseBoxSetItems","ParentId","ImageTypeLimit","EnableImageTypes","EnableTotalRecordCount","getItems","then","result","length","querySelector","classList","remove","add","container","buildCards","itemsContainer","preferThumb","cardLayout","loadLatest","getJSON","getUrl","items","loadSuggestions","url","categoryLimit","ItemLimit","recommendations","innerHTML","map","join","recs","lazyChildren","getTabs","name","cssClass","onBeforeTabChange","e","preLoadTab","index","getTabController","controller","renderedTabs","indexOf","preRender","parseInt","detail","selectedTabIndex","onTabChange","newIndex","loadTab","currentTabIndex","push","renderTab","getTabContainers","querySelectorAll","callback","depends","controllerFactory","suggestionsTabIndex","self","tabControllers","collectionType","mode","initTab","onPlaybackStop","state","NowPlayingItem","MediaType","getTabsElement","triggerTabChange","onInputCommand","command","preventDefault","Dashboard","navigate","this","tab","getDefaultTabIndex","folderId","get","initSuggestedTab","elem","containers","i","tv","addEventListener","isRestored","initTabs","setTabs","getAttribute","getItem","item","setAttribute","Name","setTitle","on","window","off","forEach","t","destroy"],"mappings":"AAAA,aAAAA,OAAO,CAAC,SAAU,gBAAiB,eAAgB,eAAgB,cAAe,kBAAmB,cAAe,MAAO,cAAe,kBAAmB,YAAa,gBAAiB,sBAAuB,YAAa,gBAAgB,SAAUC,OAAQC,cAAeC,aAAcC,aAAcC,YAAaC,gBAAiBC,YAAaC,IAAKC,YAAaC,gBAAiBC,WAGtX,SAASC,gBACL,OAAQV,cAAcW,QAG1B,SAASC,mBACL,OAAOF,gBAAkB,mBAAqB,WA+ElD,SAASG,sBAAsBC,gBAC3B,IAAIC,KAAO,GACPC,MAAQ,GAEZ,OAAQF,eAAeG,oBACnB,IAAK,0BACDD,MAAQP,UAAUS,UAAU,kCAAmCJ,eAAeK,kBAC9E,MAEJ,IAAK,qBACDH,MAAQP,UAAUS,UAAU,+BAAgCJ,eAAeK,kBAC3E,MAEJ,IAAK,gCACL,IAAK,mBACDH,MAAQP,UAAUS,UAAU,2BAA4BJ,eAAeK,kBACvE,MAEJ,IAAK,6BACL,IAAK,gBACDH,MAAQP,UAAUS,UAAU,yBAA0BJ,eAAeK,kBAI7EJ,MAAQ,gCACRA,MAAQ,2DAA6DC,MAAQ,QAyB7E,OAtBIN,iBACAK,MAAQ,kIACRA,MAAQ,uFAERA,MAAQ,gHAGZA,MAAQV,YAAYe,aAAaN,eAAeO,MAAO,CACnDC,MAAOV,mBACPW,UAAU,EACVC,mBAAmB,EACnBC,oBAbqB,EAcrBC,WAAW,EACXC,UAAU,EACVC,YAAY,IAGZlB,kBACAK,MAAQ,UAEZA,MAAQ,SACRA,MAAQ,SAgCZ,SAASc,UAAUC,MACfC,QAAQ,CAAC,gBAAgB,SAAUC,aAC/BA,YAAYH,UAAUC,SAgC9B,SAASG,mBAAmBC,KAAMC,OAAQC,YACtC,IAAIC,SAAWF,OAAOG,YAClBC,OAASC,UAAUC,mBACvBC,QAAQC,MAAM,sBAjKlB,SAASC,WAAWd,KAAMS,OAAQF,UAC9B,IAAIQ,YAAcvC,IAAIwC,gBAAgBC,WAClCC,QAAU,CACVC,OAAQ,aACRC,UAAW,aACXC,iBAAkB,QAClBC,QAAS,cACTC,MAAOR,aAAe,MAAWA,aAAe,KAAnB,EAA8B,EAC3DS,WAAW,EACXC,OAAQ,yDACRC,qBAAqB,EACrBC,SAAUpB,SACVqB,eAAgB,EAChBC,iBAAkB,gCAClBC,wBAAwB,GAE5BpB,UAAUqB,SAAStB,OAAQS,SAASc,MAAK,SAAUC,QAC3CA,OAAO1C,MAAM2C,OACblC,KAAKmC,cAAc,qBAAqBC,UAAUC,OAAO,QAEzDrC,KAAKmC,cAAc,qBAAqBC,UAAUE,IAAI,QAG1D,IAAI3C,oBAAsBf,gBACtB2D,UAAYvC,KAAKmC,cAAc,mBACnC5D,YAAYiE,WAAWP,OAAO1C,MAAO,CACjCkD,eAAgBF,UAChBG,aAAa,EACblD,MA5DDZ,gBAAkB,mBAAqB,WA6DtCa,UAAU,EACVC,mBAAmB,EACnBC,mBAAoBA,mBACpBgD,YAAY,EACZ/C,WAAW,EACXC,UAAU,EACVC,YAAY,IAIhBC,UAAUC,SA2Hdc,CAAWR,WAAYG,OAAQF,UA/LnC,SAASqC,WAAW5C,KAAMS,OAAQF,UAC9B,IAAIW,QAAU,CACVG,iBAAkB,QAClBE,MAAO,GACPE,OAAQ,yDACRE,SAAUpB,SACVqB,eAAgB,EAChBC,iBAAkB,gCAClBC,wBAAwB,GAE5BpB,UAAUmC,QAAQnC,UAAUoC,OAAO,SAAWrC,OAAS,gBAAiBS,UAAUc,MAAK,SAAUe,OAC7F,IAAIpD,oBAAsBf,gBACtB2D,UAAYvC,KAAKmC,cAAc,uBACnC5D,YAAYiE,WAAWO,MAAO,CAC1BN,eAAgBF,UAChB/C,MAAOV,mBACPW,UAAU,EACVC,mBAAmB,EACnBC,mBAAoBA,mBACpBC,WAAW,EACXC,UAAU,EACVC,YAAY,IAIhBC,UAAUC,SAuKd4C,CAAWtC,WAAYG,OAAQF,UAnEnC,SAASyC,gBAAgBhD,KAAMS,OAAQF,UACnC,IAAIQ,YAAcvC,IAAIwC,gBAAgBC,WAClCgC,IAAMvC,UAAUoC,OAAO,yBAA0B,CACjDrC,OAAQA,OACRyC,cAAe,EACfC,UAAWpC,aAAe,MAAWA,aAAe,KAAnB,EAA8BA,aAAe,KAAO,EAAI,EACzFU,OAAQ,yDACRG,eAAgB,EAChBC,iBAAkB,kCAEtBnB,UAAUmC,QAAQI,KAAKjB,MAAK,SAAUoB,iBAClC,IAAKA,gBAAgBlB,OAGjB,OAFAlC,KAAKmC,cAAc,mBAAmBC,UAAUC,OAAO,aACvDrC,KAAKmC,cAAc,oBAAoBkB,UAAY,IAIvD,IAAIpE,KAAOmE,gBAAgBE,IAAIvE,uBAAuBwE,KAAK,IAC3DvD,KAAKmC,cAAc,mBAAmBC,UAAUE,IAAI,QACpD,IAAIkB,KAAOxD,KAAKmC,cAAc,oBAC9BqB,KAAKH,UAAYpE,KACjBR,YAAYgF,aAAaD,MAGzBzD,UAAUC,SA4CdgD,CAAgB1C,WAAYG,QAGhC,SAASiD,UACL,MAAO,CAAC,CACJC,KAAMhF,UAAUS,UAAU,WAC3B,CACCuE,KAAMhF,UAAUS,UAAU,mBAC3B,CACCuE,KAAMhF,UAAUS,UAAU,gBAC3B,CACCuE,KAAMhF,UAAUS,UAAU,iBAC3B,CACCuE,KAAMhF,UAAUS,UAAU,mBAC3B,CACCuE,KAAMhF,UAAUS,UAAU,cAC3B,CACCuE,KAAMhF,UAAUS,UAAU,gBAC1BwE,SAAU,oBAuBlB,OAAO,SAAUxD,KAAMC,QACnB,SAASwD,kBAAkBC,IAuF3B,SAASC,WAAW/D,KAAMgE,OACtBC,iBAAiBjE,KAAMgE,OAAO,SAAUE,aACA,GAAhCC,aAAaC,QAAQJ,QAAgBE,WAAWG,WAChDH,WAAWG,eAzFnBN,CAAW3D,KAAMkE,SAASR,EAAES,OAAOC,mBAGvC,SAASC,YAAYX,GACjB,IAAIY,SAAWJ,SAASR,EAAES,OAAOC,mBA0FrC,SAASG,QAAQ3E,KAAMgE,OACnBY,gBAAkBZ,MAClBC,iBAAiBjE,KAAMgE,OAAO,SAAUE,YAClB,MAEkB,GAAhCC,aAAaC,QAAQJ,SACrBG,aAAaU,KAAKb,OAClBE,WAAWY,gBAhGnBH,CAAQvE,KAAMsE,UAGlB,SAASK,mBACL,OAAO3E,KAAK4E,iBAAiB,mBAOjC,SAASf,iBAAiBjE,KAAMgE,MAAOiB,UACnC,IAAIC,QAAU,GAEd,OAAQlB,OACJ,KAAK,EACDkB,QAAQL,KAAK,6BACb,MAEJ,KAAK,EACD,MAEJ,KAAK,EACDK,QAAQL,KAAK,oCACb,MAEJ,KAAK,EACDK,QAAQL,KAAK,6BACb,MAEJ,KAAK,EACDK,QAAQL,KAAK,uCACb,MAEJ,KAAK,EACDK,QAAQL,KAAK,kCACb,MAEJ,KAAK,EACDK,QAAQL,KAAK,qBAGrB5E,QAAQiF,SAAS,SAAUC,mBACvB,IAAI7E,WAEA0D,QAAUoB,sBACV9E,WAAaF,KAAK+B,cAAc,+BAAiC6B,MAAQ,MACzEqB,KAAK/E,WAAaA,YAGtB,IAAI4D,WAAaoB,eAAetB,OAE3BE,aACD5D,WAAaF,KAAK+B,cAAc,+BAAiC6B,MAAQ,MAGrEE,WADAF,QAAUoB,oBACGC,KACI,IAAVrB,MACM,IAAImB,kBAAkB/E,KAAME,WAAY,CACjDiF,eAAgB,SAChBhF,SAAUF,OAAOG,cAEL,GAATwD,OAAuB,GAATA,MACR,IAAImB,kBAAkB/E,KAAMC,OAAQC,WAAY,CACzDkF,KAAMxB,MAAQ,YAAc,WAGnB,IAAImB,kBAAkB/E,KAAMC,OAAQC,YAGrDgF,eAAetB,OAASE,WAEpBA,WAAWuB,SACXvB,WAAWuB,WAInBR,SAASf,eAwBjB,SAASwB,eAAe5B,EAAG6B,OACnBA,MAAMC,gBAAoD,SAAlCD,MAAMC,eAAeC,YAC7C1B,aAAe,GACf7F,gBAAgBwH,iBAAiBC,oBAIzC,SAASC,eAAelC,GACpB,OAAQA,EAAES,OAAO0B,SACb,IAAK,SACDnC,EAAEoC,iBACFC,UAAUC,SAAS,8CAAgD/F,OAAOG,cAItF,IACI6E,KAAOgB,KACPzB,gBAAkBN,SAASjE,OAAOiG,KAhJ1C,SAASC,mBAAmBC,UACxB,OAAQpI,aAAaqI,IAAI,WAAaD,WAClC,IAAK,cACD,OAAO,EAEX,IAAK,YACD,OAAO,EAEX,IAAK,cACD,OAAO,EAEX,IAAK,SACD,OAAO,EAEX,QACI,OAAO,GAiI8BD,CAAmBlG,OAAOG,cAEnE4E,oBAAsB,EAE1BC,KAAKI,QAAU,YAxLnB,SAASiB,iBAAiB1G,KAAMM,YAG5B,IAFA,IArBsBqG,KAqBlBC,WAAatG,WAAW0E,iBAAiB,mBAEpC6B,EAAI,EAAG3E,OAAS0E,WAAW1E,OAAQ2E,EAAI3E,OAAQ2E,IAvBlCF,KAwBDC,WAAWC,GAAIjI,iBAtBhC+H,KAAKvE,UAAUE,IAAI,iBAEfpE,cAAc4I,KACdH,KAAKvE,UAAUE,IAAI,iBACnBqE,KAAKvE,UAAUE,IAAI,yBACnBqE,KAAKvE,UAAUE,IAAI,6BAGvBqE,KAAKvE,UAAUE,IAAI,WACnBqE,KAAKvE,UAAUC,OAAO,mBAEtBsE,KAAKvE,UAAUC,OAAO,iBACtBsE,KAAKvE,UAAUC,OAAO,iBACtBsE,KAAKvE,UAAUC,OAAO,WACtBsE,KAAKvE,UAAUE,IAAI,kBA8LnBoE,CAAiBtG,EADAA,KAAK+B,cAAc,+BAAiCiD,oBAAsB,QAI/FC,KAAKP,UAAY,WACb,IAAIxE,WAAaF,KAAK+B,cAAc,+BAAiCiD,oBAAsB,MAC3FjF,mBAAmBC,EAAMC,OAAQC,aAGrC,IAAIgF,eAAiB,GACjBnB,aAAe,GACnB/D,KAAK2G,iBAAiB,YAAY,SAAUjD,GACxC,GAAqBA,EAAES,OAAOyC,WAhIlC,SAASC,WACL3I,gBAAgB4I,QAAQ9G,KAAMwE,gBAAiBlB,QAASqB,iBAAkBlB,kBAAmBY,aA+HnDwC,IAAa7G,KAAK+G,aAAa,cAAe,CACpF,IAAI5G,SAAWF,OAAOG,YAElBD,SACAG,UAAU0G,QAAQ1G,UAAUC,mBAAoBJ,UAAUyB,MAAK,SAAUqF,MACrEjH,KAAKkH,aAAa,aAAcD,KAAKE,MACrClJ,YAAYmJ,SAASH,KAAKE,UAG9BnH,KAAKkH,aAAa,aAAc3I,UAAUS,UAAU,cACpDf,YAAYmJ,SAAS7I,UAAUS,UAAU,eAIjDnB,OAAOwJ,GAAG/I,gBAAiB,eAAgBgH,gBAC3CvH,aAAasJ,GAAGC,OAAQ1B,mBAE5B5F,KAAK2G,iBAAiB,kBAAkB,SAAUjD,GAC9C3F,aAAawJ,IAAID,OAAQ1B,mBAE7B5F,KAAK2G,iBAAiB,eAAe,SAAUjD,GAC3CwB,eAAesC,SAAQ,SAAUC,GACzBA,EAAEC,SACFD,EAAEC","file":"moviesrecommended.js","sourcesContent":["define(['events', 'layoutManager', 'inputManager', 'userSettings', 'libraryMenu', 'mainTabsManager', 'cardBuilder', 'dom', 'imageLoader', 'playbackManager', 'globalize', 'emby-scroller', 'emby-itemscontainer', 'emby-tabs', 'emby-button'], function (events, layoutManager, inputManager, userSettings, libraryMenu, mainTabsManager, cardBuilder, dom, imageLoader, playbackManager, globalize) {\n    'use strict';\n\n    function enableScrollX() {\n        return !layoutManager.desktop;\n    }\n\n    function getPortraitShape() {\n        return enableScrollX() ? 'overflowPortrait' : 'portrait';\n    }\n\n    function getThumbShape() {\n        return enableScrollX() ? 'overflowBackdrop' : 'backdrop';\n    }\n\n    function loadLatest(page, userId, parentId) {\n        var options = {\n            IncludeItemTypes: 'Movie',\n            Limit: 18,\n            Fields: 'PrimaryImageAspectRatio,MediaSourceCount,BasicSyncInfo',\n            ParentId: parentId,\n            ImageTypeLimit: 1,\n            EnableImageTypes: 'Primary,Backdrop,Banner,Thumb',\n            EnableTotalRecordCount: false\n        };\n        ApiClient.getJSON(ApiClient.getUrl('Users/' + userId + '/Items/Latest', options)).then(function (items) {\n            var allowBottomPadding = !enableScrollX();\n            var container = page.querySelector('#recentlyAddedItems');\n            cardBuilder.buildCards(items, {\n                itemsContainer: container,\n                shape: getPortraitShape(),\n                scalable: true,\n                overlayPlayButton: true,\n                allowBottomPadding: allowBottomPadding,\n                showTitle: true,\n                showYear: true,\n                centerText: true\n            });\n\n            // FIXME: Wait for all sections to load\n            autoFocus(page);\n        });\n    }\n\n    function loadResume(page, userId, parentId) {\n        var screenWidth = dom.getWindowSize().innerWidth;\n        var options = {\n            SortBy: 'DatePlayed',\n            SortOrder: 'Descending',\n            IncludeItemTypes: 'Movie',\n            Filters: 'IsResumable',\n            Limit: screenWidth >= 1920 ? 5 : screenWidth >= 1600 ? 5 : 3,\n            Recursive: true,\n            Fields: 'PrimaryImageAspectRatio,MediaSourceCount,BasicSyncInfo',\n            CollapseBoxSetItems: false,\n            ParentId: parentId,\n            ImageTypeLimit: 1,\n            EnableImageTypes: 'Primary,Backdrop,Banner,Thumb',\n            EnableTotalRecordCount: false\n        };\n        ApiClient.getItems(userId, options).then(function (result) {\n            if (result.Items.length) {\n                page.querySelector('#resumableSection').classList.remove('hide');\n            } else {\n                page.querySelector('#resumableSection').classList.add('hide');\n            }\n\n            var allowBottomPadding = !enableScrollX();\n            var container = page.querySelector('#resumableItems');\n            cardBuilder.buildCards(result.Items, {\n                itemsContainer: container,\n                preferThumb: true,\n                shape: getThumbShape(),\n                scalable: true,\n                overlayPlayButton: true,\n                allowBottomPadding: allowBottomPadding,\n                cardLayout: false,\n                showTitle: true,\n                showYear: true,\n                centerText: true\n            });\n\n            // FIXME: Wait for all sections to load\n            autoFocus(page);\n        });\n    }\n\n    function getRecommendationHtml(recommendation) {\n        var html = '';\n        var title = '';\n\n        switch (recommendation.RecommendationType) {\n            case 'SimilarToRecentlyPlayed':\n                title = globalize.translate('RecommendationBecauseYouWatched', recommendation.BaselineItemName);\n                break;\n\n            case 'SimilarToLikedItem':\n                title = globalize.translate('RecommendationBecauseYouLike', recommendation.BaselineItemName);\n                break;\n\n            case 'HasDirectorFromRecentlyPlayed':\n            case 'HasLikedDirector':\n                title = globalize.translate('RecommendationDirectedBy', recommendation.BaselineItemName);\n                break;\n\n            case 'HasActorFromRecentlyPlayed':\n            case 'HasLikedActor':\n                title = globalize.translate('RecommendationStarring', recommendation.BaselineItemName);\n                break;\n        }\n\n        html += '<div class=\"verticalSection\">';\n        html += '<h2 class=\"sectionTitle sectionTitle-cards padded-left\">' + title + '</h2>';\n        var allowBottomPadding = true;\n\n        if (enableScrollX()) {\n            html += '<div is=\"emby-scroller\" class=\"padded-top-focusscale padded-bottom-focusscale\" data-mousewheel=\"false\" data-centerfocus=\"true\">';\n            html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer scrollSlider focuscontainer-x\">';\n        } else {\n            html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer focuscontainer-x padded-left padded-right vertical-wrap\">';\n        }\n\n        html += cardBuilder.getCardsHtml(recommendation.Items, {\n            shape: getPortraitShape(),\n            scalable: true,\n            overlayPlayButton: true,\n            allowBottomPadding: allowBottomPadding,\n            showTitle: true,\n            showYear: true,\n            centerText: true\n        });\n\n        if (enableScrollX()) {\n            html += '</div>';\n        }\n        html += '</div>';\n        html += '</div>';\n        return html;\n    }\n\n    function loadSuggestions(page, userId, parentId) {\n        var screenWidth = dom.getWindowSize().innerWidth;\n        var url = ApiClient.getUrl('Movies/Recommendations', {\n            userId: userId,\n            categoryLimit: 6,\n            ItemLimit: screenWidth >= 1920 ? 8 : screenWidth >= 1600 ? 8 : screenWidth >= 1200 ? 6 : 5,\n            Fields: 'PrimaryImageAspectRatio,MediaSourceCount,BasicSyncInfo',\n            ImageTypeLimit: 1,\n            EnableImageTypes: 'Primary,Backdrop,Banner,Thumb'\n        });\n        ApiClient.getJSON(url).then(function (recommendations) {\n            if (!recommendations.length) {\n                page.querySelector('.noItemsMessage').classList.remove('hide');\n                page.querySelector('.recommendations').innerHTML = '';\n                return;\n            }\n\n            var html = recommendations.map(getRecommendationHtml).join('');\n            page.querySelector('.noItemsMessage').classList.add('hide');\n            var recs = page.querySelector('.recommendations');\n            recs.innerHTML = html;\n            imageLoader.lazyChildren(recs);\n\n            // FIXME: Wait for all sections to load\n            autoFocus(page);\n        });\n    }\n\n    function autoFocus(page) {\n        require(['autoFocuser'], function (autoFocuser) {\n            autoFocuser.autoFocus(page);\n        });\n    }\n\n    function setScrollClasses(elem, scrollX) {\n        if (scrollX) {\n            elem.classList.add('hiddenScrollX');\n\n            if (layoutManager.tv) {\n                elem.classList.add('smoothScrollX');\n                elem.classList.add('padded-top-focusscale');\n                elem.classList.add('padded-bottom-focusscale');\n            }\n\n            elem.classList.add('scrollX');\n            elem.classList.remove('vertical-wrap');\n        } else {\n            elem.classList.remove('hiddenScrollX');\n            elem.classList.remove('smoothScrollX');\n            elem.classList.remove('scrollX');\n            elem.classList.add('vertical-wrap');\n        }\n    }\n\n    function initSuggestedTab(page, tabContent) {\n        var containers = tabContent.querySelectorAll('.itemsContainer');\n\n        for (var i = 0, length = containers.length; i < length; i++) {\n            setScrollClasses(containers[i], enableScrollX());\n        }\n    }\n\n    function loadSuggestionsTab(view, params, tabContent) {\n        var parentId = params.topParentId;\n        var userId = ApiClient.getCurrentUserId();\n        console.debug('loadSuggestionsTab');\n        loadResume(tabContent, userId, parentId);\n        loadLatest(tabContent, userId, parentId);\n        loadSuggestions(tabContent, userId, parentId);\n    }\n\n    function getTabs() {\n        return [{\n            name: globalize.translate('Movies')\n        }, {\n            name: globalize.translate('TabSuggestions')\n        }, {\n            name: globalize.translate('TabTrailers')\n        }, {\n            name: globalize.translate('TabFavorites')\n        }, {\n            name: globalize.translate('TabCollections')\n        }, {\n            name: globalize.translate('TabGenres')\n        }, {\n            name: globalize.translate('ButtonSearch'),\n            cssClass: 'searchTabButton'\n        }];\n    }\n\n    function getDefaultTabIndex(folderId) {\n        switch (userSettings.get('landing-' + folderId)) {\n            case 'suggestions':\n                return 1;\n\n            case 'favorites':\n                return 3;\n\n            case 'collections':\n                return 4;\n\n            case 'genres':\n                return 5;\n\n            default:\n                return 0;\n        }\n    }\n\n    return function (view, params) {\n        function onBeforeTabChange(e) {\n            preLoadTab(view, parseInt(e.detail.selectedTabIndex));\n        }\n\n        function onTabChange(e) {\n            var newIndex = parseInt(e.detail.selectedTabIndex);\n            loadTab(view, newIndex);\n        }\n\n        function getTabContainers() {\n            return view.querySelectorAll('.pageTabContent');\n        }\n\n        function initTabs() {\n            mainTabsManager.setTabs(view, currentTabIndex, getTabs, getTabContainers, onBeforeTabChange, onTabChange);\n        }\n\n        function getTabController(page, index, callback) {\n            var depends = [];\n\n            switch (index) {\n                case 0:\n                    depends.push('controllers/movies/movies');\n                    break;\n\n                case 1:\n                    break;\n\n                case 2:\n                    depends.push('controllers/movies/movietrailers');\n                    break;\n\n                case 3:\n                    depends.push('controllers/movies/movies');\n                    break;\n\n                case 4:\n                    depends.push('controllers/movies/moviecollections');\n                    break;\n\n                case 5:\n                    depends.push('controllers/movies/moviegenres');\n                    break;\n\n                case 6:\n                    depends.push('scripts/searchtab');\n            }\n\n            require(depends, function (controllerFactory) {\n                var tabContent;\n\n                if (index === suggestionsTabIndex) {\n                    tabContent = view.querySelector(\".pageTabContent[data-index='\" + index + \"']\");\n                    self.tabContent = tabContent;\n                }\n\n                var controller = tabControllers[index];\n\n                if (!controller) {\n                    tabContent = view.querySelector(\".pageTabContent[data-index='\" + index + \"']\");\n\n                    if (index === suggestionsTabIndex) {\n                        controller = self;\n                    } else if (index === 6) {\n                        controller = new controllerFactory(view, tabContent, {\n                            collectionType: 'movies',\n                            parentId: params.topParentId\n                        });\n                    } else if (index == 0 || index == 3) {\n                        controller = new controllerFactory(view, params, tabContent, {\n                            mode: index ? 'favorites' : 'movies'\n                        });\n                    } else {\n                        controller = new controllerFactory(view, params, tabContent);\n                    }\n\n                    tabControllers[index] = controller;\n\n                    if (controller.initTab) {\n                        controller.initTab();\n                    }\n                }\n\n                callback(controller);\n            });\n        }\n\n        function preLoadTab(page, index) {\n            getTabController(page, index, function (controller) {\n                if (renderedTabs.indexOf(index) == -1 && controller.preRender) {\n                    controller.preRender();\n                }\n            });\n        }\n\n        function loadTab(page, index) {\n            currentTabIndex = index;\n            getTabController(page, index, function (controller) {\n                initialTabIndex = null;\n\n                if (renderedTabs.indexOf(index) == -1) {\n                    renderedTabs.push(index);\n                    controller.renderTab();\n                }\n            });\n        }\n\n        function onPlaybackStop(e, state) {\n            if (state.NowPlayingItem && state.NowPlayingItem.MediaType == 'Video') {\n                renderedTabs = [];\n                mainTabsManager.getTabsElement().triggerTabChange();\n            }\n        }\n\n        function onInputCommand(e) {\n            switch (e.detail.command) {\n                case 'search':\n                    e.preventDefault();\n                    Dashboard.navigate('search.html?collectionType=movies&parentId=' + params.topParentId);\n            }\n        }\n\n        var isViewRestored;\n        var self = this;\n        var currentTabIndex = parseInt(params.tab || getDefaultTabIndex(params.topParentId));\n        var initialTabIndex = currentTabIndex;\n        var suggestionsTabIndex = 1;\n\n        self.initTab = function () {\n            var tabContent = view.querySelector(\".pageTabContent[data-index='\" + suggestionsTabIndex + \"']\");\n            initSuggestedTab(view, tabContent);\n        };\n\n        self.renderTab = function () {\n            var tabContent = view.querySelector(\".pageTabContent[data-index='\" + suggestionsTabIndex + \"']\");\n            loadSuggestionsTab(view, params, tabContent);\n        };\n\n        var tabControllers = [];\n        var renderedTabs = [];\n        view.addEventListener('viewshow', function (e) {\n            if (isViewRestored = e.detail.isRestored, initTabs(), !view.getAttribute('data-title')) {\n                var parentId = params.topParentId;\n\n                if (parentId) {\n                    ApiClient.getItem(ApiClient.getCurrentUserId(), parentId).then(function (item) {\n                        view.setAttribute('data-title', item.Name);\n                        libraryMenu.setTitle(item.Name);\n                    });\n                } else {\n                    view.setAttribute('data-title', globalize.translate('TabMovies'));\n                    libraryMenu.setTitle(globalize.translate('TabMovies'));\n                }\n            }\n\n            events.on(playbackManager, 'playbackstop', onPlaybackStop);\n            inputManager.on(window, onInputCommand);\n        });\n        view.addEventListener('viewbeforehide', function (e) {\n            inputManager.off(window, onInputCommand);\n        });\n        view.addEventListener('viewdestroy', function (e) {\n            tabControllers.forEach(function (t) {\n                if (t.destroy) {\n                    t.destroy();\n                }\n            });\n        });\n    };\n});\n"]}