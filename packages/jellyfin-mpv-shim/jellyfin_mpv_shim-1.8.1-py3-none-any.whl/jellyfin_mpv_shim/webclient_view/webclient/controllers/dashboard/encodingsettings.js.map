{"version":3,"sources":["controllers/dashboard/encodingsettings.js"],"names":["define","$","loading","globalize","dom","libraryMenu","onSaveEncodingPathFailure","response","hide","msg","translate","require","alert","onSubmit","form","this","onDecoderConfirmed","show","ApiClient","getNamedConfiguration","then","config","DownMixAudioBoost","val","TranscodingTempPath","EncodingThreadCount","HardwareAccelerationType","VaapiDevice","EncoderPreset","querySelector","value","H264Crf","parseInt","DeinterlaceMethod","EnableSubtitleExtraction","checked","EnableThrottling","HardwareDecodingCodecs","Array","prototype","map","call","filter","querySelectorAll","c","getAttribute","EnableDecodingColorDepth10Hevc","EnableDecodingColorDepth10Vp9","EnableHardwareEncoding","updateNamedConfiguration","updateEncoder","getSystemInfo","systemInfo","ajax","url","getUrl","type","data","Path","PathType","Dashboard","processServerConfigurationUpdateResult","title","text","getTabs","href","name","document","on","page","addEventListener","classList","remove","setAttribute","add","removeAttribute","setDecodingCodecsVisible","context","any","forEach","split","indexOf","parentWithTag","directoryBrowser","picker","includeFiles","callback","path","close","validateWriteable","header","instruction","off","setTabs","loadPage","EncoderAppPathDisplay","dispatchEvent","CustomEvent","bubbles"],"mappings":"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","file":"encodingsettings.js","sourcesContent":["define(['jQuery', 'loading', 'globalize', 'dom', 'libraryMenu'], function ($, loading, globalize, dom, libraryMenu) {\n    'use strict';\n\n    function loadPage(page, config, systemInfo) {\n        Array.prototype.forEach.call(page.querySelectorAll('.chkDecodeCodec'), function (c) {\n            c.checked = -1 !== (config.HardwareDecodingCodecs || []).indexOf(c.getAttribute('data-codec'));\n        });\n        page.querySelector('#chkDecodingColorDepth10Hevc').checked = config.EnableDecodingColorDepth10Hevc;\n        page.querySelector('#chkDecodingColorDepth10Vp9').checked = config.EnableDecodingColorDepth10Vp9;\n        page.querySelector('#chkHardwareEncoding').checked = config.EnableHardwareEncoding;\n        $('#selectVideoDecoder', page).val(config.HardwareAccelerationType);\n        $('#selectThreadCount', page).val(config.EncodingThreadCount);\n        $('#txtDownMixAudioBoost', page).val(config.DownMixAudioBoost);\n        page.querySelector('.txtEncoderPath').value = config.EncoderAppPathDisplay || '';\n        $('#txtTranscodingTempPath', page).val(systemInfo.TranscodingTempPath || '');\n        $('#txtVaapiDevice', page).val(config.VaapiDevice || '');\n        page.querySelector('#selectEncoderPreset').value = config.EncoderPreset || '';\n        page.querySelector('#txtH264Crf').value = config.H264Crf || '';\n        page.querySelector('#selectDeinterlaceMethod').value = config.DeinterlaceMethod || '';\n        page.querySelector('#chkEnableSubtitleExtraction').checked = config.EnableSubtitleExtraction || false;\n        page.querySelector('#chkEnableThrottling').checked = config.EnableThrottling || false;\n        page.querySelector('#selectVideoDecoder').dispatchEvent(new CustomEvent('change', {\n            bubbles: true\n        }));\n        loading.hide();\n    }\n\n    function onSaveEncodingPathFailure(response) {\n        loading.hide();\n        var msg = '';\n        msg = globalize.translate('FFmpegSavePathNotFound');\n\n        require(['alert'], function (alert) {\n            alert(msg);\n        });\n    }\n\n    function updateEncoder(form) {\n        return ApiClient.getSystemInfo().then(function (systemInfo) {\n            return ApiClient.ajax({\n                url: ApiClient.getUrl('System/MediaEncoder/Path'),\n                type: 'POST',\n                data: {\n                    Path: form.querySelector('.txtEncoderPath').value,\n                    PathType: 'Custom'\n                }\n            }).then(Dashboard.processServerConfigurationUpdateResult, onSaveEncodingPathFailure);\n        });\n    }\n\n    function onSubmit() {\n        var form = this;\n\n        var onDecoderConfirmed = function () {\n            loading.show();\n            ApiClient.getNamedConfiguration('encoding').then(function (config) {\n                config.DownMixAudioBoost = $('#txtDownMixAudioBoost', form).val();\n                config.TranscodingTempPath = $('#txtTranscodingTempPath', form).val();\n                config.EncodingThreadCount = $('#selectThreadCount', form).val();\n                config.HardwareAccelerationType = $('#selectVideoDecoder', form).val();\n                config.VaapiDevice = $('#txtVaapiDevice', form).val();\n                config.EncoderPreset = form.querySelector('#selectEncoderPreset').value;\n                config.H264Crf = parseInt(form.querySelector('#txtH264Crf').value || '0');\n                config.DeinterlaceMethod = form.querySelector('#selectDeinterlaceMethod').value;\n                config.EnableSubtitleExtraction = form.querySelector('#chkEnableSubtitleExtraction').checked;\n                config.EnableThrottling = form.querySelector('#chkEnableThrottling').checked;\n                config.HardwareDecodingCodecs = Array.prototype.map.call(Array.prototype.filter.call(form.querySelectorAll('.chkDecodeCodec'), function (c) {\n                    return c.checked;\n                }), function (c) {\n                    return c.getAttribute('data-codec');\n                });\n                config.EnableDecodingColorDepth10Hevc = form.querySelector('#chkDecodingColorDepth10Hevc').checked;\n                config.EnableDecodingColorDepth10Vp9 = form.querySelector('#chkDecodingColorDepth10Vp9').checked;\n                config.EnableHardwareEncoding = form.querySelector('#chkHardwareEncoding').checked;\n                ApiClient.updateNamedConfiguration('encoding', config).then(function () {\n                    updateEncoder(form);\n                }, function () {\n                    require(['alert'], function (alert) {\n                        alert(globalize.translate('DefaultErrorMessage'));\n                    });\n\n                    Dashboard.processServerConfigurationUpdateResult();\n                });\n            });\n        };\n\n        if ($('#selectVideoDecoder', form).val()) {\n            require(['alert'], function (alert) {\n                alert({\n                    title: globalize.translate('TitleHardwareAcceleration'),\n                    text: globalize.translate('HardwareAccelerationWarning')\n                }).then(onDecoderConfirmed);\n            });\n        } else {\n            onDecoderConfirmed();\n        }\n\n        return false;\n    }\n\n    function setDecodingCodecsVisible(context, value) {\n        value = value || '';\n        var any;\n        Array.prototype.forEach.call(context.querySelectorAll('.chkDecodeCodec'), function (c) {\n            if (-1 === c.getAttribute('data-types').split(',').indexOf(value)) {\n                dom.parentWithTag(c, 'LABEL').classList.add('hide');\n            } else {\n                dom.parentWithTag(c, 'LABEL').classList.remove('hide');\n                any = true;\n            }\n        });\n\n        if (any) {\n            context.querySelector('.decodingCodecsList').classList.remove('hide');\n        } else {\n            context.querySelector('.decodingCodecsList').classList.add('hide');\n        }\n    }\n\n    function getTabs() {\n        return [{\n            href: 'encodingsettings.html',\n            name: globalize.translate('Transcoding')\n        }, {\n            href: 'playbackconfiguration.html',\n            name: globalize.translate('TabResumeSettings')\n        }, {\n            href: 'streamingsettings.html',\n            name: globalize.translate('TabStreaming')\n        }];\n    }\n\n    $(document).on('pageinit', '#encodingSettingsPage', function () {\n        var page = this;\n        page.querySelector('#selectVideoDecoder').addEventListener('change', function () {\n            if ('vaapi' == this.value) {\n                page.querySelector('.fldVaapiDevice').classList.remove('hide');\n                page.querySelector('#txtVaapiDevice').setAttribute('required', 'required');\n            } else {\n                page.querySelector('.fldVaapiDevice').classList.add('hide');\n                page.querySelector('#txtVaapiDevice').removeAttribute('required');\n            }\n\n            if (this.value) {\n                page.querySelector('.hardwareAccelerationOptions').classList.remove('hide');\n            } else {\n                page.querySelector('.hardwareAccelerationOptions').classList.add('hide');\n            }\n\n            setDecodingCodecsVisible(page, this.value);\n        });\n        $('#btnSelectEncoderPath', page).on('click.selectDirectory', function () {\n            require(['directorybrowser'], function (directoryBrowser) {\n                var picker = new directoryBrowser();\n                picker.show({\n                    includeFiles: true,\n                    callback: function (path) {\n                        if (path) {\n                            $('.txtEncoderPath', page).val(path);\n                        }\n\n                        picker.close();\n                    }\n                });\n            });\n        });\n        $('#btnSelectTranscodingTempPath', page).on('click.selectDirectory', function () {\n            require(['directorybrowser'], function (directoryBrowser) {\n                var picker = new directoryBrowser();\n                picker.show({\n                    callback: function (path) {\n                        if (path) {\n                            $('#txtTranscodingTempPath', page).val(path);\n                        }\n\n                        picker.close();\n                    },\n                    validateWriteable: true,\n                    header: globalize.translate('HeaderSelectTranscodingPath'),\n                    instruction: globalize.translate('HeaderSelectTranscodingPathHelp')\n                });\n            });\n        });\n        $('.encodingSettingsForm').off('submit', onSubmit).on('submit', onSubmit);\n    }).on('pageshow', '#encodingSettingsPage', function () {\n        loading.show();\n        libraryMenu.setTabs('playback', 0, getTabs);\n        var page = this;\n        ApiClient.getNamedConfiguration('encoding').then(function (config) {\n            ApiClient.getSystemInfo().then(function (systemInfo) {\n                loadPage(page, config, systemInfo);\n            });\n        });\n    });\n});\n"]}