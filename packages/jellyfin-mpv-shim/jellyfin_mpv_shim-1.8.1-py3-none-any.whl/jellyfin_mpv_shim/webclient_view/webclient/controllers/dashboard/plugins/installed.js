"use strict";define(["loading","libraryMenu","dom","globalize","cardStyle","emby-button"],(function(loading,libraryMenu,dom,globalize){function renderPlugins(page,plugins){ApiClient.getJSON(ApiClient.getUrl("web/configurationpages")+"?pageType=PluginConfiguration").then((function(configPages){!function populateList(page,plugins,pluginConfigurationPages){var html=(plugins=plugins.sort((function(plugin1,plugin2){return plugin1.Name>plugin2.Name?1:-1}))).map((function(p){return function getPluginCardHtml(plugin,pluginConfigurationPages){var configPage=pluginConfigurationPages.filter((function(pluginConfigurationPage){return pluginConfigurationPage.PluginId==plugin.Id}))[0],configPageUrl=configPage?Dashboard.getConfigurationPageUrl(configPage.Name):null,html="";return html+="<div data-id='"+plugin.Id+"' data-name='"+plugin.Name+"' data-removable='"+plugin.CanUninstall+"' class='card backdropCard'>",html+='<div class="cardBox visualCardBox">',html+='<div class="cardScalable">',html+='<div class="cardPadder cardPadder-backdrop"></div>',html+=configPageUrl?'<a class="cardContent cardImageContainer" is="emby-linkbutton" href="'+configPageUrl+'">':'<div class="cardContent noConfigPluginCard noHoverEffect cardImageContainer emby-button">',html+='<span class="cardImageIcon material-icons folder"></span>',html+=configPageUrl?"</a>":"</div>",html+="</div>",html+='<div class="cardFooter">',(configPage||plugin.CanUninstall)&&(html+='<div style="text-align:right; float:right;padding-top:5px;">',html+='<button type="button" is="paper-icon-button-light" class="btnCardMenu autoSize"><span class="material-icons more_vert"></span></button>',html+="</div>"),html+="<div class='cardText'>",html+=configPage&&configPage.DisplayName?configPage.DisplayName:plugin.Name,html+="</div>",html+="<div class='cardText cardText-secondary'>",html+=plugin.Version,html+="</div>",html+="</div>",html+="</div>",html+="</div>"}(p,pluginConfigurationPages)})).join(""),installedPluginsElement=page.querySelector(".installedPlugins");installedPluginsElement.removeEventListener("click",onInstalledPluginsClick),installedPluginsElement.addEventListener("click",onInstalledPluginsClick),plugins.length?(installedPluginsElement.classList.add("itemsContainer"),installedPluginsElement.classList.add("vertical-wrap")):(html+='<div class="centerMessage">',html+="<h1>"+globalize.translate("MessageNoPluginsInstalled")+"</h1>",html+='<p><a is="emby-linkbutton" class="button-link" href="availableplugins.html">',html+=globalize.translate("BrowsePluginCatalogMessage"),html+="</a></p>",html+="</div>");installedPluginsElement.innerHTML=html,loading.hide()}(page,plugins,configPages)}))}function showPluginMenu(page,elem){var card=dom.parentWithClass(elem,"card"),id=card.getAttribute("data-id"),name=card.getAttribute("data-name"),removable=card.getAttribute("data-removable"),configHref=card.querySelector(".cardContent").getAttribute("href"),menuItems=[];configHref&&menuItems.push({name:globalize.translate("ButtonSettings"),id:"open",icon:"mode_edit"}),"true"===removable&&menuItems.push({name:globalize.translate("ButtonUninstall"),id:"delete",icon:"delete"}),require(["actionsheet"],(function(actionsheet){actionsheet.show({items:menuItems,positionTo:elem,callback:function callback(resultId){switch(resultId){case"open":Dashboard.navigate(configHref);break;case"delete":!function deletePlugin(page,uniqueid,name){var msg=globalize.translate("UninstallPluginConfirmation",name);require(["confirm"],(function(confirm){confirm({title:globalize.translate("UninstallPluginHeader"),text:msg,primary:"delete",confirmText:globalize.translate("UninstallPluginHeader")}).then((function(){loading.show(),ApiClient.uninstallPlugin(uniqueid).then((function(){reloadList(page)}))}))}))}(page,id,name)}}})}))}function reloadList(page){loading.show(),ApiClient.getInstalledPlugins().then((function(plugins){renderPlugins(page,plugins)}))}function getTabs(){return[{href:"installedplugins.html",name:globalize.translate("TabMyPlugins")},{href:"availableplugins.html",name:globalize.translate("TabCatalog")},{href:"repositories.html",name:globalize.translate("TabRepositories")}]}function onInstalledPluginsClick(e){if(dom.parentWithClass(e.target,"noConfigPluginCard"))!function showNoConfigurationMessage(){Dashboard.alert({message:globalize.translate("NoPluginConfigurationMessage")})}();else if(dom.parentWithClass(e.target,"connectModePluginCard"))!function showConnectMessage(){Dashboard.alert({message:globalize.translate("MessagePluginConfigurationRequiresLocalAccess")})}();else{var btnCardMenu=dom.parentWithClass(e.target,"btnCardMenu");btnCardMenu&&showPluginMenu(dom.parentWithClass(btnCardMenu,"page"),btnCardMenu)}}pageIdOn("pageshow","pluginsPage",(function(){libraryMenu.setTabs("plugins",0,getTabs),reloadList(this)})),window.PluginsPage={renderPlugins:renderPlugins}}));
//# sourceMappingURL=installed.js.map
