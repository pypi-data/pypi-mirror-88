{"version":3,"sources":["controllers/dashboard/users/useredit.js"],"names":["define","$","loading","libraryMenu","globalize","loadUser","page","user","ApiClient","getJSON","getUrl","then","providers","loadAuthProviders","length","querySelector","classList","remove","add","currentProviderId","Policy","AuthenticationProviderId","innerHTML","map","provider","selected","Id","Name","loadPasswordResetProviders","PasswordResetProviderId","IsHidden","folders","loadDeleteFolders","mediaFolders","SupportsMediaDeletion","channelsResult","i","folder","checkedAttribute","html","EnableContentDeletion","EnableContentDeletionFromFolders","indexOf","Items","trigger","prop","IsDisabled","show","hide","removeAttr","attr","setTitle","val","IsAdministrator","EnableSharedDeviceControl","EnableRemoteControlOfOtherUsers","EnableContentDownloading","EnableLiveTvManagement","EnableLiveTvAccess","EnableMediaPlayback","EnableAudioPlaybackTranscoding","EnableVideoPlaybackTranscoding","EnablePlaybackRemuxing","ForceRemoteSourceTranscoding","EnableRemoteAccess","EnableSyncTranscoding","EnableMediaConversion","EnablePublicSharing","RemoteClientBitrateLimit","LoginAttemptsBeforeLockout","isMinServerVersion","SyncPlayAccess","saveUser","is","parseInt","parseFloat","value","get","filter","c","checked","getAttribute","updateUser","updateUserPolicy","onSaveComplete","Dashboard","navigate","require","toast","translate","onSubmit","this","parents","getUser","result","userId","getParameterByName","document","on","off","getServerConfiguration","config","loadData"],"mappings":"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","file":"useredit.js","sourcesContent":["define(['jQuery', 'loading', 'libraryMenu', 'globalize'], function ($, loading, libraryMenu, globalize) {\n    'use strict';\n\n    function loadDeleteFolders(page, user, mediaFolders) {\n        ApiClient.getJSON(ApiClient.getUrl('Channels', {\n            SupportsMediaDeletion: true\n        })).then(function (channelsResult) {\n            var i;\n            var length;\n            var folder;\n            var isChecked;\n            var checkedAttribute;\n            var html = '';\n\n            for (i = 0, length = mediaFolders.length; i < length; i++) {\n                folder = mediaFolders[i];\n                isChecked = user.Policy.EnableContentDeletion || -1 != user.Policy.EnableContentDeletionFromFolders.indexOf(folder.Id);\n                checkedAttribute = isChecked ? ' checked=\"checked\"' : '';\n                html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkFolder\" data-id=\"' + folder.Id + '\" ' + checkedAttribute + '><span>' + folder.Name + '</span></label>';\n            }\n\n            for (i = 0, length = channelsResult.Items.length; i < length; i++) {\n                folder = channelsResult.Items[i];\n                isChecked = user.Policy.EnableContentDeletion || -1 != user.Policy.EnableContentDeletionFromFolders.indexOf(folder.Id);\n                checkedAttribute = isChecked ? ' checked=\"checked\"' : '';\n                html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkFolder\" data-id=\"' + folder.Id + '\" ' + checkedAttribute + '><span>' + folder.Name + '</span></label>';\n            }\n\n            $('.deleteAccess', page).html(html).trigger('create');\n            $('#chkEnableDeleteAllFolders', page).prop('checked', user.Policy.EnableContentDeletion);\n        });\n    }\n\n    function loadAuthProviders(page, user, providers) {\n        if (providers.length > 1) {\n            page.querySelector('.fldSelectLoginProvider').classList.remove('hide');\n        } else {\n            page.querySelector('.fldSelectLoginProvider').classList.add('hide');\n        }\n\n        var currentProviderId = user.Policy.AuthenticationProviderId;\n        page.querySelector('.selectLoginProvider').innerHTML = providers.map(function (provider) {\n            var selected = provider.Id === currentProviderId || providers.length < 2 ? ' selected' : '';\n            return '<option value=\"' + provider.Id + '\"' + selected + '>' + provider.Name + '</option>';\n        });\n    }\n\n    function loadPasswordResetProviders(page, user, providers) {\n        if (providers.length > 1) {\n            page.querySelector('.fldSelectPasswordResetProvider').classList.remove('hide');\n        } else {\n            page.querySelector('.fldSelectPasswordResetProvider').classList.add('hide');\n        }\n\n        var currentProviderId = user.Policy.PasswordResetProviderId;\n        page.querySelector('.selectPasswordResetProvider').innerHTML = providers.map(function (provider) {\n            var selected = provider.Id === currentProviderId || providers.length < 2 ? ' selected' : '';\n            return '<option value=\"' + provider.Id + '\"' + selected + '>' + provider.Name + '</option>';\n        });\n    }\n\n    function loadUser(page, user) {\n        currentUser = user;\n        ApiClient.getJSON(ApiClient.getUrl('Auth/Providers')).then(function (providers) {\n            loadAuthProviders(page, user, providers);\n        });\n        ApiClient.getJSON(ApiClient.getUrl('Auth/PasswordResetProviders')).then(function (providers) {\n            loadPasswordResetProviders(page, user, providers);\n        });\n        ApiClient.getJSON(ApiClient.getUrl('Library/MediaFolders', {\n            IsHidden: false\n        })).then(function (folders) {\n            loadDeleteFolders(page, user, folders.Items);\n        });\n\n        if (user.Policy.IsDisabled) {\n            $('.disabledUserBanner', page).show();\n        } else {\n            $('.disabledUserBanner', page).hide();\n        }\n\n        $('#txtUserName', page).prop('disabled', '').removeAttr('disabled');\n        $('#fldConnectInfo', page).show();\n        $('.lnkEditUserPreferences', page).attr('href', 'mypreferencesmenu.html?userId=' + user.Id);\n        libraryMenu.setTitle(user.Name);\n        page.querySelector('.username').innerHTML = user.Name;\n        $('#txtUserName', page).val(user.Name);\n        $('#chkIsAdmin', page).prop('checked', user.Policy.IsAdministrator);\n        $('#chkDisabled', page).prop('checked', user.Policy.IsDisabled);\n        $('#chkIsHidden', page).prop('checked', user.Policy.IsHidden);\n        $('#chkRemoteControlSharedDevices', page).prop('checked', user.Policy.EnableSharedDeviceControl);\n        $('#chkEnableRemoteControlOtherUsers', page).prop('checked', user.Policy.EnableRemoteControlOfOtherUsers);\n        $('#chkEnableDownloading', page).prop('checked', user.Policy.EnableContentDownloading);\n        $('#chkManageLiveTv', page).prop('checked', user.Policy.EnableLiveTvManagement);\n        $('#chkEnableLiveTvAccess', page).prop('checked', user.Policy.EnableLiveTvAccess);\n        $('#chkEnableMediaPlayback', page).prop('checked', user.Policy.EnableMediaPlayback);\n        $('#chkEnableAudioPlaybackTranscoding', page).prop('checked', user.Policy.EnableAudioPlaybackTranscoding);\n        $('#chkEnableVideoPlaybackTranscoding', page).prop('checked', user.Policy.EnableVideoPlaybackTranscoding);\n        $('#chkEnableVideoPlaybackRemuxing', page).prop('checked', user.Policy.EnablePlaybackRemuxing);\n        $('#chkForceRemoteSourceTranscoding', page).prop('checked', user.Policy.ForceRemoteSourceTranscoding);\n        $('#chkRemoteAccess', page).prop('checked', null == user.Policy.EnableRemoteAccess || user.Policy.EnableRemoteAccess);\n        $('#chkEnableSyncTranscoding', page).prop('checked', user.Policy.EnableSyncTranscoding);\n        $('#chkEnableConversion', page).prop('checked', user.Policy.EnableMediaConversion || false);\n        $('#chkEnableSharing', page).prop('checked', user.Policy.EnablePublicSharing);\n        $('#txtRemoteClientBitrateLimit', page).val(user.Policy.RemoteClientBitrateLimit / 1e6 || '');\n        $('#txtLoginAttemptsBeforeLockout', page).val(user.Policy.LoginAttemptsBeforeLockout || '0');\n        if (ApiClient.isMinServerVersion('10.6.0')) {\n            $('#selectSyncPlayAccess').val(user.Policy.SyncPlayAccess);\n        }\n        loading.hide();\n    }\n\n    function onSaveComplete(page, user) {\n        Dashboard.navigate('userprofiles.html');\n        loading.hide();\n\n        require(['toast'], function (toast) {\n            toast(globalize.translate('SettingsSaved'));\n        });\n    }\n\n    function saveUser(user, page) {\n        user.Name = $('#txtUserName', page).val();\n        user.Policy.IsAdministrator = $('#chkIsAdmin', page).is(':checked');\n        user.Policy.IsHidden = $('#chkIsHidden', page).is(':checked');\n        user.Policy.IsDisabled = $('#chkDisabled', page).is(':checked');\n        user.Policy.EnableRemoteControlOfOtherUsers = $('#chkEnableRemoteControlOtherUsers', page).is(':checked');\n        user.Policy.EnableLiveTvManagement = $('#chkManageLiveTv', page).is(':checked');\n        user.Policy.EnableLiveTvAccess = $('#chkEnableLiveTvAccess', page).is(':checked');\n        user.Policy.EnableSharedDeviceControl = $('#chkRemoteControlSharedDevices', page).is(':checked');\n        user.Policy.EnableMediaPlayback = $('#chkEnableMediaPlayback', page).is(':checked');\n        user.Policy.EnableAudioPlaybackTranscoding = $('#chkEnableAudioPlaybackTranscoding', page).is(':checked');\n        user.Policy.EnableVideoPlaybackTranscoding = $('#chkEnableVideoPlaybackTranscoding', page).is(':checked');\n        user.Policy.EnablePlaybackRemuxing = $('#chkEnableVideoPlaybackRemuxing', page).is(':checked');\n        user.Policy.ForceRemoteSourceTranscoding = $('#chkForceRemoteSourceTranscoding', page).is(':checked');\n        user.Policy.EnableContentDownloading = $('#chkEnableDownloading', page).is(':checked');\n        user.Policy.EnableSyncTranscoding = $('#chkEnableSyncTranscoding', page).is(':checked');\n        user.Policy.EnableMediaConversion = $('#chkEnableConversion', page).is(':checked');\n        user.Policy.EnablePublicSharing = $('#chkEnableSharing', page).is(':checked');\n        user.Policy.EnableRemoteAccess = $('#chkRemoteAccess', page).is(':checked');\n        user.Policy.RemoteClientBitrateLimit = parseInt(1e6 * parseFloat($('#txtRemoteClientBitrateLimit', page).val() || '0'));\n        user.Policy.LoginAttemptsBeforeLockout = parseInt($('#txtLoginAttemptsBeforeLockout', page).val() || '0');\n        user.Policy.AuthenticationProviderId = page.querySelector('.selectLoginProvider').value;\n        user.Policy.PasswordResetProviderId = page.querySelector('.selectPasswordResetProvider').value;\n        user.Policy.EnableContentDeletion = $('#chkEnableDeleteAllFolders', page).is(':checked');\n        user.Policy.EnableContentDeletionFromFolders = user.Policy.EnableContentDeletion ? [] : $('.chkFolder', page).get().filter(function (c) {\n            return c.checked;\n        }).map(function (c) {\n            return c.getAttribute('data-id');\n        });\n        if (ApiClient.isMinServerVersion('10.6.0')) {\n            user.Policy.SyncPlayAccess = page.querySelector('#selectSyncPlayAccess').value;\n        }\n        ApiClient.updateUser(user).then(function () {\n            ApiClient.updateUserPolicy(user.Id, user.Policy).then(function () {\n                onSaveComplete(page, user);\n            });\n        });\n    }\n\n    function onSubmit() {\n        var page = $(this).parents('.page')[0];\n        loading.show();\n        getUser().then(function (result) {\n            saveUser(result, page);\n        });\n        return false;\n    }\n\n    function getUser() {\n        var userId = getParameterByName('userId');\n        return ApiClient.getUser(userId);\n    }\n\n    function loadData(page) {\n        loading.show();\n        getUser().then(function (user) {\n            loadUser(page, user);\n        });\n    }\n\n    var currentUser;\n    $(document).on('pageinit', '#editUserPage', function () {\n        $('.editUserProfileForm').off('submit', onSubmit).on('submit', onSubmit);\n        this.querySelector('.sharingHelp').innerHTML = globalize.translate('OptionAllowLinkSharingHelp', 30);\n        var page = this;\n        $('#chkEnableDeleteAllFolders', this).on('change', function () {\n            if (this.checked) {\n                $('.deleteAccess', page).hide();\n            } else {\n                $('.deleteAccess', page).show();\n            }\n        });\n        ApiClient.getServerConfiguration().then(function (config) {\n            if (config.EnableRemoteAccess) {\n                page.querySelector('.fldRemoteAccess').classList.remove('hide');\n            } else {\n                page.querySelector('.fldRemoteAccess').classList.add('hide');\n            }\n        });\n    }).on('pagebeforeshow', '#editUserPage', function () {\n        loadData(this);\n    });\n});\n"]}