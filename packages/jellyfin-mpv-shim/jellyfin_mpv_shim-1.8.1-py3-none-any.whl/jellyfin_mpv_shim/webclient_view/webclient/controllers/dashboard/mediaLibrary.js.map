{"version":3,"sources":["controllers/dashboard/mediaLibrary.js"],"names":["define","$","appHost","taskButton","loading","libraryMenu","globalize","dom","indicators","imageHelper","editVirtualFolder","page","virtualFolder","require","medialibraryeditor","show","refresh","shouldRefreshLibraryAfterChanges","library","then","hasChanges","reloadLibrary","showCardMenu","elem","virtualFolders","card","parentWithClass","parseInt","getAttribute","menuItems","push","name","translate","id","icon","actionsheet","items","positionTo","callback","resultId","editImages","imageEditor","itemId","ItemId","serverId","ApiClient","renameVirtualFolder","prompt","label","confirmText","newName","Name","refreshAfterChange","deleteVirtualFolder","msg","Locations","length","join","confirm","text","title","primary","removeVirtualFolder","refreshVirtualFolder","refreshDialog","itemIds","mode","getVirtualFolders","result","reloadVirtualFolders","html","showType","showLocations","showMenu","showNameWithIcon","i","getVirtualFolderHtml","divVirtualFolders","querySelector","innerHTML","classList","add","on","this","addEventListener","addVirtualFolder","medialibrarycreator","collectionTypeOptions","getCollectionTypeOptions","filter","f","hidden","parents","index","hide","getLink","url","value","message","style","contains","hasCardImageContainer","imgUrl","PrimaryImageItemId","getScaledImageUrl","maxWidth","Math","round","getScreenWidth","type","getLibraryIcon","CollectionType","RefreshProgress","RefreshStatus","typeName","t","getTabs","href","window","WizardLibraryPage","next","Dashboard","navigate","pageClassOn","pageIdOn","setTabs","progressElem","taskKey","button"],"mappings":"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","file":"mediaLibrary.js","sourcesContent":["define(['jQuery', 'apphost', 'scripts/taskbutton', 'loading', 'libraryMenu', 'globalize', 'dom', 'indicators', 'scripts/imagehelper', 'cardStyle', 'emby-itemrefreshindicator'], function ($, appHost, taskButton, loading, libraryMenu, globalize, dom, indicators, imageHelper) {\n    'use strict';\n\n    function addVirtualFolder(page) {\n        require(['medialibrarycreator'], function (medialibrarycreator) {\n            new medialibrarycreator().show({\n                collectionTypeOptions: getCollectionTypeOptions().filter(function (f) {\n                    return !f.hidden;\n                }),\n                refresh: shouldRefreshLibraryAfterChanges(page)\n            }).then(function (hasChanges) {\n                if (hasChanges) {\n                    reloadLibrary(page);\n                }\n            });\n        });\n    }\n\n    function editVirtualFolder(page, virtualFolder) {\n        require(['medialibraryeditor'], function (medialibraryeditor) {\n            new medialibraryeditor().show({\n                refresh: shouldRefreshLibraryAfterChanges(page),\n                library: virtualFolder\n            }).then(function (hasChanges) {\n                if (hasChanges) {\n                    reloadLibrary(page);\n                }\n            });\n        });\n    }\n\n    function deleteVirtualFolder(page, virtualFolder) {\n        var msg = globalize.translate('MessageAreYouSureYouWishToRemoveMediaFolder');\n\n        if (virtualFolder.Locations.length) {\n            msg += '<br/><br/>' + globalize.translate('MessageTheFollowingLocationWillBeRemovedFromLibrary') + '<br/><br/>';\n            msg += virtualFolder.Locations.join('<br/>');\n        }\n\n        require(['confirm'], function (confirm) {\n            confirm({\n\n                text: msg,\n                title: globalize.translate('HeaderRemoveMediaFolder'),\n                confirmText: globalize.translate('Delete'),\n                primary: 'delete'\n\n            }).then(function () {\n                var refreshAfterChange = shouldRefreshLibraryAfterChanges(page);\n                ApiClient.removeVirtualFolder(virtualFolder.Name, refreshAfterChange).then(function () {\n                    reloadLibrary(page);\n                });\n            });\n        });\n    }\n\n    function refreshVirtualFolder(page, virtualFolder) {\n        require(['refreshDialog'], function (refreshDialog) {\n            new refreshDialog({\n                itemIds: [virtualFolder.ItemId],\n                serverId: ApiClient.serverId(),\n                mode: 'scan'\n            }).show();\n        });\n    }\n\n    function renameVirtualFolder(page, virtualFolder) {\n        require(['prompt'], function (prompt) {\n            prompt({\n                label: globalize.translate('LabelNewName'),\n                confirmText: globalize.translate('ButtonRename')\n            }).then(function (newName) {\n                if (newName && newName != virtualFolder.Name) {\n                    var refreshAfterChange = shouldRefreshLibraryAfterChanges(page);\n                    ApiClient.renameVirtualFolder(virtualFolder.Name, newName, refreshAfterChange).then(function () {\n                        reloadLibrary(page);\n                    });\n                }\n            });\n        });\n    }\n\n    function showCardMenu(page, elem, virtualFolders) {\n        var card = dom.parentWithClass(elem, 'card');\n        var index = parseInt(card.getAttribute('data-index'));\n        var virtualFolder = virtualFolders[index];\n        var menuItems = [];\n        menuItems.push({\n            name: globalize.translate('ButtonEditImages'),\n            id: 'editimages',\n            icon: 'photo'\n        });\n        menuItems.push({\n            name: globalize.translate('ManageLibrary'),\n            id: 'edit',\n            icon: 'folder_open'\n        });\n        menuItems.push({\n            name: globalize.translate('ButtonRemove'),\n            id: 'delete',\n            icon: 'delete'\n        });\n        menuItems.push({\n            name: globalize.translate('ButtonRename'),\n            id: 'rename',\n            icon: 'mode_edit'\n        });\n        menuItems.push({\n            name: globalize.translate('ScanLibrary'),\n            id: 'refresh',\n            icon: 'refresh'\n        });\n\n        require(['actionsheet'], function (actionsheet) {\n            actionsheet.show({\n                items: menuItems,\n                positionTo: elem,\n                callback: function (resultId) {\n                    switch (resultId) {\n                        case 'edit':\n                            editVirtualFolder(page, virtualFolder);\n                            break;\n\n                        case 'editimages':\n                            editImages(page, virtualFolder);\n                            break;\n\n                        case 'rename':\n                            renameVirtualFolder(page, virtualFolder);\n                            break;\n\n                        case 'delete':\n                            deleteVirtualFolder(page, virtualFolder);\n                            break;\n\n                        case 'refresh':\n                            refreshVirtualFolder(page, virtualFolder);\n                    }\n                }\n            });\n        });\n    }\n\n    function reloadLibrary(page) {\n        loading.show();\n        ApiClient.getVirtualFolders().then(function (result) {\n            reloadVirtualFolders(page, result);\n        });\n    }\n\n    function shouldRefreshLibraryAfterChanges(page) {\n        return 'mediaLibraryPage' === page.id;\n    }\n\n    function reloadVirtualFolders(page, virtualFolders) {\n        var html = '';\n        virtualFolders.push({\n            Name: globalize.translate('ButtonAddMediaLibrary'),\n            icon: 'add_circle',\n            Locations: [],\n            showType: false,\n            showLocations: false,\n            showMenu: false,\n            showNameWithIcon: false\n        });\n\n        for (var i = 0; i < virtualFolders.length; i++) {\n            var virtualFolder = virtualFolders[i];\n            html += getVirtualFolderHtml(page, virtualFolder, i);\n        }\n\n        var divVirtualFolders = page.querySelector('#divVirtualFolders');\n        divVirtualFolders.innerHTML = html;\n        divVirtualFolders.classList.add('itemsContainer');\n        divVirtualFolders.classList.add('vertical-wrap');\n        $('.btnCardMenu', divVirtualFolders).on('click', function () {\n            showCardMenu(page, this, virtualFolders);\n        });\n        divVirtualFolders.querySelector('#addLibrary').addEventListener('click', function () {\n            addVirtualFolder(page);\n        });\n        $('.editLibrary', divVirtualFolders).on('click', function () {\n            var card = $(this).parents('.card')[0];\n            var index = parseInt(card.getAttribute('data-index'));\n            var virtualFolder = virtualFolders[index];\n\n            if (virtualFolder.ItemId) {\n                editVirtualFolder(page, virtualFolder);\n            }\n        });\n        loading.hide();\n    }\n\n    function editImages(page, virtualFolder) {\n        require(['imageEditor'], function (imageEditor) {\n            imageEditor.show({\n                itemId: virtualFolder.ItemId,\n                serverId: ApiClient.serverId()\n            }).then(function () {\n                reloadLibrary(page);\n            });\n        });\n    }\n\n    function getLink(text, url) {\n        return globalize.translate(text, '<a is=\"emby-linkbutton\" class=\"button-link\" href=\"' + url + '\" target=\"_blank\" data-autohide=\"true\">', '</a>');\n    }\n\n    function getCollectionTypeOptions() {\n        return [{\n            name: '',\n            value: ''\n        }, {\n            name: globalize.translate('FolderTypeMovies'),\n            value: 'movies',\n            message: getLink('MovieLibraryHelp', 'https://docs.jellyfin.org/general/server/media/movies.html')\n        }, {\n            name: globalize.translate('FolderTypeMusic'),\n            value: 'music',\n            message: getLink('MusicLibraryHelp', 'https://docs.jellyfin.org/general/server/media/music.html')\n        }, {\n            name: globalize.translate('FolderTypeTvShows'),\n            value: 'tvshows',\n            message: getLink('TvLibraryHelp', 'https://docs.jellyfin.org/general/server/media/shows.html')\n        }, {\n            name: globalize.translate('FolderTypeBooks'),\n            value: 'books',\n            message: getLink('BookLibraryHelp', 'https://docs.jellyfin.org/general/server/media/books.html')\n        }, {\n            name: globalize.translate('OptionHomeVideos'),\n            value: 'homevideos'\n        }, {\n            name: globalize.translate('FolderTypeMusicVideos'),\n            value: 'musicvideos'\n        }, {\n            name: globalize.translate('FolderTypeUnset'),\n            value: 'mixed',\n            message: globalize.translate('MessageUnsetContentHelp')\n        }];\n    }\n\n    function getVirtualFolderHtml(page, virtualFolder, index) {\n        var html = '';\n        var style = '';\n\n        if (page.classList.contains('wizardPage')) {\n            style += 'min-width:33.3%;';\n        }\n\n        if (virtualFolder.Locations.length == 0) {\n            html += '<div id=\"addLibrary\" class=\"card backdropCard scalableCard backdropCard-scalable\" style=\"' + style + '\" data-index=\"' + index + '\" data-id=\"' + virtualFolder.ItemId + '\">';\n        } else {\n            html += '<div class=\"card backdropCard scalableCard backdropCard-scalable\" style=\"' + style + '\" data-index=\"' + index + '\" data-id=\"' + virtualFolder.ItemId + '\">';\n        }\n\n        html += '<div class=\"cardBox visualCardBox\">';\n        html += '<div class=\"cardScalable visualCardBox-cardScalable\">';\n        html += '<div class=\"cardPadder cardPadder-backdrop\"></div>';\n        html += '<div class=\"cardContent\">';\n        var imgUrl = '';\n\n        if (virtualFolder.PrimaryImageItemId) {\n            imgUrl = ApiClient.getScaledImageUrl(virtualFolder.PrimaryImageItemId, {\n                maxWidth: Math.round(dom.getScreenWidth() * 0.40),\n                type: 'Primary'\n            });\n        }\n\n        var hasCardImageContainer;\n\n        if (imgUrl) {\n            html += '<div class=\"cardImageContainer editLibrary\" style=\"cursor:pointer;background-image:url(\\'' + imgUrl + \"');\\\">\";\n            hasCardImageContainer = true;\n        } else if (!virtualFolder.showNameWithIcon) {\n            html += '<div class=\"cardImageContainer editLibrary\" style=\"cursor:pointer;\">';\n            html += '<span class=\"cardImageIcon-small material-icons ' + (virtualFolder.icon || imageHelper.getLibraryIcon(virtualFolder.CollectionType)) + '\"></span>';\n            hasCardImageContainer = true;\n        }\n\n        if (hasCardImageContainer) {\n            html += '<div class=\"cardIndicators backdropCardIndicators\">';\n            html += '<div is=\"emby-itemrefreshindicator\"' + (virtualFolder.RefreshProgress || virtualFolder.RefreshStatus && 'Idle' !== virtualFolder.RefreshStatus ? '' : ' class=\"hide\"') + ' data-progress=\"' + (virtualFolder.RefreshProgress || 0) + '\" data-status=\"' + virtualFolder.RefreshStatus + '\"></div>';\n            html += '</div>';\n            html += '</div>';\n        }\n\n        if (!imgUrl && virtualFolder.showNameWithIcon) {\n            html += '<h3 class=\"cardImageContainer addLibrary\" style=\"position:absolute;top:0;left:0;right:0;bottom:0;cursor:pointer;flex-direction:column;\">';\n            html += '<span class=\"cardImageIcon-small material-icons ' + (virtualFolder.icon || imageHelper.getLibraryIcon(virtualFolder.CollectionType)) + '\"></span>';\n\n            if (virtualFolder.showNameWithIcon) {\n                html += '<div style=\"margin:1em 0;position:width:100%;\">';\n                html += virtualFolder.Name;\n                html += '</div>';\n            }\n\n            html += '</h3>';\n        }\n\n        html += '</div>';\n        html += '</div>';\n        html += '<div class=\"cardFooter visualCardBox-cardFooter\">'; // always show menu unless explicitly hidden\n\n        if (virtualFolder.showMenu !== false) {\n            html += '<div style=\"text-align:right; float:right;padding-top:5px;\">';\n            html += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"btnCardMenu autoSize\"><span class=\"material-icons more_vert\"></span></button>';\n            html += '</div>';\n        }\n\n        html += \"<div class='cardText'>\";\n\n        if (virtualFolder.showNameWithIcon) {\n            html += '&nbsp;';\n        } else {\n            html += virtualFolder.Name;\n        }\n\n        html += '</div>';\n        var typeName = getCollectionTypeOptions().filter(function (t) {\n            return t.value == virtualFolder.CollectionType;\n        })[0];\n        typeName = typeName ? typeName.name : globalize.translate('FolderTypeUnset');\n        html += \"<div class='cardText cardText-secondary'>\";\n\n        if (virtualFolder.showType === false) {\n            html += '&nbsp;';\n        } else {\n            html += typeName;\n        }\n\n        html += '</div>';\n\n        if (virtualFolder.showLocations === false) {\n            html += \"<div class='cardText cardText-secondary'>\";\n            html += '&nbsp;';\n            html += '</div>';\n        } else if (virtualFolder.Locations.length && virtualFolder.Locations.length === 1) {\n            html += \"<div class='cardText cardText-secondary'>\";\n            html += virtualFolder.Locations[0];\n            html += '</div>';\n        } else {\n            html += \"<div class='cardText cardText-secondary'>\";\n            html += globalize.translate('NumLocationsValue', virtualFolder.Locations.length);\n            html += '</div>';\n        }\n\n        html += '</div>';\n        html += '</div>';\n        html += '</div>';\n        return html;\n    }\n\n    function getTabs() {\n        return [{\n            href: 'library.html',\n            name: globalize.translate('HeaderLibraries')\n        }, {\n            href: 'librarydisplay.html',\n            name: globalize.translate('TabDisplay')\n        }, {\n            href: 'metadataimages.html',\n            name: globalize.translate('TabMetadata')\n        }, {\n            href: 'metadatanfo.html',\n            name: globalize.translate('TabNfoSettings')\n        }];\n    }\n\n    window.WizardLibraryPage = {\n        next: function () {\n            Dashboard.navigate('wizardsettings.html');\n        }\n    };\n    pageClassOn('pageshow', 'mediaLibraryPage', function () {\n        reloadLibrary(this);\n    });\n    pageIdOn('pageshow', 'mediaLibraryPage', function () {\n        libraryMenu.setTabs('librarysetup', 0, getTabs);\n        var page = this;\n        taskButton({\n            mode: 'on',\n            progressElem: page.querySelector('.refreshProgress'),\n            taskKey: 'RefreshLibrary',\n            button: page.querySelector('.btnRefresh')\n        });\n    });\n    pageIdOn('pagebeforehide', 'mediaLibraryPage', function () {\n        var page = this;\n        taskButton({\n            mode: 'off',\n            progressElem: page.querySelector('.refreshProgress'),\n            taskKey: 'RefreshLibrary',\n            button: page.querySelector('.btnRefresh')\n        });\n    });\n});\n"]}