{"version":3,"sources":["controllers/livetv/livetvsuggested.js"],"names":["define","layoutManager","userSettings","inputManager","loading","globalize","libraryBrowser","mainTabsManager","cardBuilder","appHost","imageLoader","enableScrollX","desktop","getLimit","reload","page","enableFullRender","loadRecommendedPrograms","show","limit","ApiClient","getLiveTvRecommendedPrograms","userId","Dashboard","getCurrentUserId","IsAiring","ImageTypeLimit","EnableImageTypes","EnableTotalRecordCount","Fields","then","result","renderItems","Items","showAirDateTime","showAirEndTime","hide","require","autoFocuser","autoFocus","getLiveTvPrograms","HasAired","IsMovie","IsSports","IsKids","IsNews","IsSeries","shape","preferThumb","showParentTitle","showParentTitleOrTitle","showTitle","items","sectionClass","overlayButton","cardOptions","html","getCardsHtml","Object","assign","inheritThumb","defaultShape","centerText","coverImage","overlayText","lazy","overlayPlayButton","overlayMoreButton","overlayInfoButton","allowBottomPadding","showAirTime","elem","querySelector","innerHTML","lazyChildren","getTabs","name","translate","cssClass","view","params","onBeforeTabChange","evt","preLoadTab","index","getTabController","controller","renderedTabs","indexOf","preRender","parseInt","detail","selectedTabIndex","onTabChange","previousTabController","tabControllers","previousIndex","onHide","loadTab","currentTabIndex","initialTabIndex","push","renderTab","onShow","currentTabController","getTabContainers","querySelectorAll","callback","depends","controllerFactory","tabContent","self","collectionType","initTab","onInputCommand","command","preventDefault","navigate","this","tab","getDefaultTabIndex","folderId","get","lastFullRender","forEach","call","link","href","serverId","containers","i","length","classList","add","tv","remove","Date","getTime","addEventListener","isRestored","initTabs","setTabs","on","window","e","off","tabController","destroy"],"mappings":"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","file":"livetvsuggested.js","sourcesContent":["define(['layoutManager', 'userSettings', 'inputManager', 'loading', 'globalize', 'libraryBrowser', 'mainTabsManager', 'cardBuilder', 'apphost', 'imageLoader', 'scrollStyles', 'emby-itemscontainer', 'emby-tabs', 'emby-button'], function (layoutManager, userSettings, inputManager, loading, globalize, libraryBrowser, mainTabsManager, cardBuilder, appHost, imageLoader) {\n    'use strict';\n\n    function enableScrollX() {\n        return !layoutManager.desktop;\n    }\n\n    function getBackdropShape() {\n        if (enableScrollX()) {\n            return 'overflowBackdrop';\n        }\n        return 'backdrop';\n    }\n\n    function getPortraitShape() {\n        if (enableScrollX()) {\n            return 'overflowPortrait';\n        }\n        return 'portrait';\n    }\n\n    function getLimit() {\n        if (enableScrollX()) {\n            return 12;\n        }\n\n        return 9;\n    }\n\n    function loadRecommendedPrograms(page) {\n        loading.show();\n        var limit = getLimit();\n\n        if (enableScrollX()) {\n            limit *= 2;\n        }\n\n        ApiClient.getLiveTvRecommendedPrograms({\n            userId: Dashboard.getCurrentUserId(),\n            IsAiring: true,\n            limit: limit,\n            ImageTypeLimit: 1,\n            EnableImageTypes: 'Primary,Thumb,Backdrop',\n            EnableTotalRecordCount: false,\n            Fields: 'ChannelInfo,PrimaryImageAspectRatio'\n        }).then(function (result) {\n            renderItems(page, result.Items, 'activeProgramItems', 'play', {\n                showAirDateTime: false,\n                showAirEndTime: true\n            });\n            loading.hide();\n\n            require(['autoFocuser'], function (autoFocuser) {\n                autoFocuser.autoFocus(page);\n            });\n        });\n    }\n\n    function reload(page, enableFullRender) {\n        if (enableFullRender) {\n            loadRecommendedPrograms(page);\n            ApiClient.getLiveTvPrograms({\n                userId: Dashboard.getCurrentUserId(),\n                HasAired: false,\n                limit: getLimit(),\n                IsMovie: false,\n                IsSports: false,\n                IsKids: false,\n                IsNews: false,\n                IsSeries: true,\n                EnableTotalRecordCount: false,\n                Fields: 'ChannelInfo,PrimaryImageAspectRatio',\n                EnableImageTypes: 'Primary,Thumb'\n            }).then(function (result) {\n                renderItems(page, result.Items, 'upcomingEpisodeItems');\n            });\n            ApiClient.getLiveTvPrograms({\n                userId: Dashboard.getCurrentUserId(),\n                HasAired: false,\n                limit: getLimit(),\n                IsMovie: true,\n                EnableTotalRecordCount: false,\n                Fields: 'ChannelInfo',\n                EnableImageTypes: 'Primary,Thumb'\n            }).then(function (result) {\n                renderItems(page, result.Items, 'upcomingTvMovieItems', null, {\n                    shape: getPortraitShape(),\n                    preferThumb: null,\n                    showParentTitle: false\n                });\n            });\n            ApiClient.getLiveTvPrograms({\n                userId: Dashboard.getCurrentUserId(),\n                HasAired: false,\n                limit: getLimit(),\n                IsSports: true,\n                EnableTotalRecordCount: false,\n                Fields: 'ChannelInfo,PrimaryImageAspectRatio',\n                EnableImageTypes: 'Primary,Thumb'\n            }).then(function (result) {\n                renderItems(page, result.Items, 'upcomingSportsItems');\n            });\n            ApiClient.getLiveTvPrograms({\n                userId: Dashboard.getCurrentUserId(),\n                HasAired: false,\n                limit: getLimit(),\n                IsKids: true,\n                EnableTotalRecordCount: false,\n                Fields: 'ChannelInfo,PrimaryImageAspectRatio',\n                EnableImageTypes: 'Primary,Thumb'\n            }).then(function (result) {\n                renderItems(page, result.Items, 'upcomingKidsItems');\n            });\n            ApiClient.getLiveTvPrograms({\n                userId: Dashboard.getCurrentUserId(),\n                HasAired: false,\n                limit: getLimit(),\n                IsNews: true,\n                EnableTotalRecordCount: false,\n                Fields: 'ChannelInfo,PrimaryImageAspectRatio',\n                EnableImageTypes: 'Primary,Thumb'\n            }).then(function (result) {\n                renderItems(page, result.Items, 'upcomingNewsItems', null, {\n                    showParentTitleOrTitle: true,\n                    showTitle: false,\n                    showParentTitle: false\n                });\n            });\n        }\n    }\n\n    function renderItems(page, items, sectionClass, overlayButton, cardOptions) {\n        var html = cardBuilder.getCardsHtml(Object.assign({\n            items: items,\n            preferThumb: 'auto',\n            inheritThumb: false,\n            shape: enableScrollX() ? 'autooverflow' : 'auto',\n            defaultShape: getBackdropShape(),\n            showParentTitle: true,\n            showTitle: true,\n            centerText: true,\n            coverImage: true,\n            overlayText: false,\n            lazy: true,\n            overlayPlayButton: 'play' === overlayButton,\n            overlayMoreButton: 'more' === overlayButton,\n            overlayInfoButton: 'info' === overlayButton,\n            allowBottomPadding: !enableScrollX(),\n            showAirTime: true,\n            showAirDateTime: true\n        }, cardOptions || {}));\n        var elem = page.querySelector('.' + sectionClass);\n        elem.innerHTML = html;\n        imageLoader.lazyChildren(elem);\n    }\n\n    function getTabs() {\n        return [{\n            name: globalize.translate('Programs')\n        }, {\n            name: globalize.translate('TabGuide')\n        }, {\n            name: globalize.translate('TabChannels')\n        }, {\n            name: globalize.translate('TabRecordings')\n        }, {\n            name: globalize.translate('HeaderSchedule')\n        }, {\n            name: globalize.translate('TabSeries')\n        }, {\n            name: globalize.translate('ButtonSearch'),\n            cssClass: 'searchTabButton'\n        }];\n    }\n\n    function setScrollClasses(elem, scrollX) {\n        if (scrollX) {\n            elem.classList.add('hiddenScrollX');\n\n            if (layoutManager.tv) {\n                elem.classList.add('smoothScrollX');\n            }\n\n            elem.classList.add('scrollX');\n            elem.classList.remove('vertical-wrap');\n        } else {\n            elem.classList.remove('hiddenScrollX');\n            elem.classList.remove('smoothScrollX');\n            elem.classList.remove('scrollX');\n            elem.classList.add('vertical-wrap');\n        }\n    }\n\n    function getDefaultTabIndex(folderId) {\n        if (userSettings.get('landing-' + folderId) === 'guide') {\n            return 1;\n        }\n\n        return 0;\n    }\n\n    return function (view, params) {\n        function enableFullRender() {\n            return new Date().getTime() - lastFullRender > 3e5;\n        }\n\n        function onBeforeTabChange(evt) {\n            preLoadTab(view, parseInt(evt.detail.selectedTabIndex));\n        }\n\n        function onTabChange(evt) {\n            var previousTabController = tabControllers[parseInt(evt.detail.previousIndex)];\n\n            if (previousTabController && previousTabController.onHide) {\n                previousTabController.onHide();\n            }\n\n            loadTab(view, parseInt(evt.detail.selectedTabIndex));\n        }\n\n        function getTabContainers() {\n            return view.querySelectorAll('.pageTabContent');\n        }\n\n        function initTabs() {\n            mainTabsManager.setTabs(view, currentTabIndex, getTabs, getTabContainers, onBeforeTabChange, onTabChange);\n        }\n\n        function getTabController(page, index, callback) {\n            var depends = [];\n\n            // TODO int is a little hard to read\n            switch (index) {\n                case 0:\n                    break;\n\n                case 1:\n                    depends.push('controllers/livetv/livetvguide');\n                    break;\n\n                case 2:\n                    depends.push('controllers/livetv/livetvchannels');\n                    break;\n\n                case 3:\n                    depends.push('controllers/livetv/livetvrecordings');\n                    break;\n\n                case 4:\n                    depends.push('controllers/livetv/livetvschedule');\n                    break;\n\n                case 5:\n                    depends.push('controllers/livetv/livetvseriestimers');\n                    break;\n\n                case 6:\n                    depends.push('scripts/searchtab');\n            }\n\n            require(depends, function (controllerFactory) {\n                var tabContent;\n\n                if (0 == index) {\n                    tabContent = view.querySelector(\".pageTabContent[data-index='\" + index + \"']\");\n                    self.tabContent = tabContent;\n                }\n\n                var controller = tabControllers[index];\n\n                if (!controller) {\n                    tabContent = view.querySelector(\".pageTabContent[data-index='\" + index + \"']\");\n\n                    if (0 === index) {\n                        controller = self;\n                    } else if (6 === index) {\n                        controller = new controllerFactory(view, tabContent, {\n                            collectionType: 'livetv'\n                        });\n                    } else {\n                        controller = new controllerFactory(view, params, tabContent);\n                    }\n\n                    tabControllers[index] = controller;\n\n                    if (controller.initTab) {\n                        controller.initTab();\n                    }\n                }\n\n                callback(controller);\n            });\n        }\n\n        function preLoadTab(page, index) {\n            getTabController(page, index, function (controller) {\n                if (renderedTabs.indexOf(index) === -1 && controller.preRender) {\n                    controller.preRender();\n                }\n            });\n        }\n\n        function loadTab(page, index) {\n            currentTabIndex = index;\n            getTabController(page, index, function (controller) {\n                initialTabIndex = null;\n\n                if (-1 == renderedTabs.indexOf(index)) {\n                    if (1 === index) {\n                        renderedTabs.push(index);\n                    }\n\n                    controller.renderTab();\n                } else if (controller.onShow) {\n                    controller.onShow();\n                }\n\n                currentTabController = controller;\n            });\n        }\n\n        function onInputCommand(evt) {\n            if (evt.detail.command === 'search') {\n                evt.preventDefault();\n                Dashboard.navigate('search.html?collectionType=livetv');\n            }\n        }\n\n        var isViewRestored;\n        var self = this;\n        var currentTabIndex = parseInt(params.tab || getDefaultTabIndex('livetv'));\n        var initialTabIndex = currentTabIndex;\n        var lastFullRender = 0;\n        [].forEach.call(view.querySelectorAll('.sectionTitleTextButton-programs'), function (link) {\n            var href = link.href;\n\n            if (href) {\n                link.href = href + '&serverId=' + ApiClient.serverId();\n            }\n        });\n\n        self.initTab = function () {\n            var tabContent = view.querySelector(\".pageTabContent[data-index='0']\");\n            var containers = tabContent.querySelectorAll('.itemsContainer');\n\n            for (var i = 0, length = containers.length; i < length; i++) {\n                setScrollClasses(containers[i], enableScrollX());\n            }\n        };\n\n        self.renderTab = function () {\n            var tabContent = view.querySelector(\".pageTabContent[data-index='0']\");\n\n            if (enableFullRender()) {\n                reload(tabContent, true);\n                lastFullRender = new Date().getTime();\n            } else {\n                reload(tabContent);\n            }\n        };\n\n        var currentTabController;\n        var tabControllers = [];\n        var renderedTabs = [];\n        view.addEventListener('viewbeforeshow', function (evt) {\n            isViewRestored = evt.detail.isRestored;\n            initTabs();\n        });\n        view.addEventListener('viewshow', function (evt) {\n            isViewRestored = evt.detail.isRestored;\n\n            if (!isViewRestored) {\n                mainTabsManager.selectedTabIndex(initialTabIndex);\n            }\n\n            inputManager.on(window, onInputCommand);\n        });\n        view.addEventListener('viewbeforehide', function (e) {\n            if (currentTabController && currentTabController.onHide) {\n                currentTabController.onHide();\n            }\n\n            inputManager.off(window, onInputCommand);\n        });\n        view.addEventListener('viewdestroy', function (evt) {\n            tabControllers.forEach(function (tabController) {\n                if (tabController.destroy) {\n                    tabController.destroy();\n                }\n            });\n        });\n    };\n});\n"]}