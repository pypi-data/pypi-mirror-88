{"version":3,"sources":["controllers/user/profile.js"],"names":["define","UserPasswordPage","loading","libraryMenu","appHost","globalize","reloadUser","page","userId","getParameterByName","show","ApiClient","getUser","then","user","querySelector","innerHTML","Name","setTitle","imageUrl","PrimaryImageTag","getUserImageUrl","Id","tag","type","style","backgroundImage","Dashboard","getCurrentUser","loggedInUser","classList","add","remove","supports","Policy","IsAdministrator","EnableUserPreferenceAccess","hide","onFileReaderError","evt","target","error","code","NOT_FOUND_ERR","require","toast","translate","ABORT_ERR","onFileReaderAbort","NOT_READABLE_ERR","view","params","addEventListener","confirm","deleteUserImage","click","setFiles","files","userImage","file","match","reader","FileReader","onerror","onabort","onload","result","uploadUserImage","readAsDataURL"],"mappings":"AAAA,aAAAA,OAAO,CAAC,+CAAgD,UAAW,cAAe,UAAW,YAAa,gBAAgB,SAAUC,iBAAkBC,QAASC,YAAaC,QAASC,WAGjL,SAASC,WAAWC,MAChB,IAAIC,OAASC,mBAAmB,UAChCP,QAAQQ,OACRC,UAAUC,QAAQJ,QAAQK,MAAK,SAAUC,MACrCP,KAAKQ,cAAc,aAAaC,UAAYF,KAAKG,KACjDd,YAAYe,SAASJ,KAAKG,MAE1B,IAAIE,SAAW,wBACXL,KAAKM,kBACLD,SAAWR,UAAUU,gBAAgBP,KAAKQ,GAAI,CAC1CC,IAAKT,KAAKM,gBACVI,KAAM,aAIEjB,KAAKQ,cAAc,UACzBU,MAAMC,gBAAkB,OAASP,SAAW,IAEtDQ,UAAUC,iBAAiBf,MAAK,SAAUgB,cAClCf,KAAKM,iBACLb,KAAKQ,cAAc,gBAAgBe,UAAUC,IAAI,QACjDxB,KAAKQ,cAAc,mBAAmBe,UAAUE,OAAO,SAChD5B,QAAQ6B,SAAS,eAAiBJ,aAAaK,OAAOC,iBAAmBrB,KAAKoB,OAAOE,8BAC5F7B,KAAKQ,cAAc,mBAAmBe,UAAUC,IAAI,QACpDxB,KAAKQ,cAAc,gBAAgBe,UAAUE,OAAO,YAG5D9B,QAAQmC,UAIhB,SAASC,kBAAkBC,KAEvB,OADArC,QAAQmC,OACAE,IAAIC,OAAOC,MAAMC,MACrB,KAAKH,IAAIC,OAAOC,MAAME,cAClBC,QAAQ,CAAC,UAAU,SAAUC,OACzBA,MAAMxC,UAAUyC,UAAU,oBAE9B,MACJ,KAAKP,IAAIC,OAAOC,MAAMM,UAClBC,oBACA,MACJ,KAAKT,IAAIC,OAAOC,MAAMQ,iBACtB,QACIL,QAAQ,CAAC,UAAU,SAAUC,OACzBA,MAAMxC,UAAUyC,UAAU,sBAK1C,SAASE,kBAAkBT,KACvBrC,QAAQmC,OACRO,QAAQ,CAAC,UAAU,SAAUC,OACzBA,MAAMxC,UAAUyC,UAAU,yBA2BlC,OAAO,SAAUI,KAAMC,QACnB7C,WAAW4C,MACX,IAAIjD,iBAAiBiD,KAAMC,QAC3BD,KAAKnC,cAAc,mBAAmBqC,iBAAiB,SAAS,WAC5DR,QAAQ,CAAC,YAAY,SAAUS,SAC3BA,QAAQhD,UAAUyC,UAAU,2BAA4BzC,UAAUyC,UAAU,gBAAgBjC,MAAK,WAC7FX,QAAQQ,OACR,IAAIF,OAASC,mBAAmB,UAChCE,UAAU2C,gBAAgB9C,OAAQ,WAAWK,MAAK,WAC9CX,QAAQmC,OACR/B,WAAW4C,kBAK3BA,KAAKnC,cAAc,gBAAgBqC,iBAAiB,SAAS,SAAUb,KACnEW,KAAKnC,cAAc,gBAAgBwC,WAEvCL,KAAKnC,cAAc,gBAAgBqC,iBAAiB,UAAU,SAAUb,MAzC5E,SAASiB,SAASjD,KAAMkD,OACpB,IAAIC,UAAYnD,KAAKQ,cAAc,UAC/B4C,KAAOF,MAAM,GAEjB,IAAKE,OAASA,KAAKnC,KAAKoC,MAAM,WAC1B,OAAO,EAGX,IAAIC,OAAS,IAAIC,WACjBD,OAAOE,QAAUzB,kBACjBuB,OAAOG,QAAUhB,kBACjBa,OAAOI,OAAS,SAAU1B,KACtBmB,UAAUjC,MAAMC,gBAAkB,OAASa,IAAIC,OAAO0B,OAAS,IAC/D,IAAI1D,OAASC,mBAAmB,UAChCE,UAAUwD,gBAAgB3D,OAAQ,UAAWmD,MAAM9C,MAAK,WACpDX,QAAQmC,OACR/B,WAAWC,UAInBsD,OAAOO,cAAcT,MAsBjBH,CAASN,KAAMX,IAAIC,OAAOiB","file":"profile.js","sourcesContent":["define(['controllers/dashboard/users/userpasswordpage', 'loading', 'libraryMenu', 'apphost', 'globalize', 'emby-button'], function (UserPasswordPage, loading, libraryMenu, appHost, globalize) {\n    'use strict';\n\n    function reloadUser(page) {\n        var userId = getParameterByName('userId');\n        loading.show();\n        ApiClient.getUser(userId).then(function (user) {\n            page.querySelector('.username').innerHTML = user.Name;\n            libraryMenu.setTitle(user.Name);\n\n            var imageUrl = 'assets/img/avatar.png';\n            if (user.PrimaryImageTag) {\n                imageUrl = ApiClient.getUserImageUrl(user.Id, {\n                    tag: user.PrimaryImageTag,\n                    type: 'Primary'\n                });\n            }\n\n            var userImage = page.querySelector('#image');\n            userImage.style.backgroundImage = 'url(' + imageUrl + ')';\n\n            Dashboard.getCurrentUser().then(function (loggedInUser) {\n                if (user.PrimaryImageTag) {\n                    page.querySelector('#btnAddImage').classList.add('hide');\n                    page.querySelector('#btnDeleteImage').classList.remove('hide');\n                } else if (appHost.supports('fileinput') && (loggedInUser.Policy.IsAdministrator || user.Policy.EnableUserPreferenceAccess)) {\n                    page.querySelector('#btnDeleteImage').classList.add('hide');\n                    page.querySelector('#btnAddImage').classList.remove('hide');\n                }\n            });\n            loading.hide();\n        });\n    }\n\n    function onFileReaderError(evt) {\n        loading.hide();\n        switch (evt.target.error.code) {\n            case evt.target.error.NOT_FOUND_ERR:\n                require(['toast'], function (toast) {\n                    toast(globalize.translate('FileNotFound'));\n                });\n                break;\n            case evt.target.error.ABORT_ERR:\n                onFileReaderAbort();\n                break;\n            case evt.target.error.NOT_READABLE_ERR:\n            default:\n                require(['toast'], function (toast) {\n                    toast(globalize.translate('FileReadError'));\n                });\n        }\n    }\n\n    function onFileReaderAbort(evt) {\n        loading.hide();\n        require(['toast'], function (toast) {\n            toast(globalize.translate('FileReadCancelled'));\n        });\n    }\n\n    function setFiles(page, files) {\n        var userImage = page.querySelector('#image');\n        var file = files[0];\n\n        if (!file || !file.type.match('image.*')) {\n            return false;\n        }\n\n        var reader = new FileReader();\n        reader.onerror = onFileReaderError;\n        reader.onabort = onFileReaderAbort;\n        reader.onload = function (evt) {\n            userImage.style.backgroundImage = 'url(' + evt.target.result + ')';\n            var userId = getParameterByName('userId');\n            ApiClient.uploadUserImage(userId, 'Primary', file).then(function () {\n                loading.hide();\n                reloadUser(page);\n            });\n        };\n\n        reader.readAsDataURL(file);\n    }\n\n    return function (view, params) {\n        reloadUser(view);\n        new UserPasswordPage(view, params);\n        view.querySelector('#btnDeleteImage').addEventListener('click', function () {\n            require(['confirm'], function (confirm) {\n                confirm(globalize.translate('DeleteImageConfirmation'), globalize.translate('DeleteImage')).then(function () {\n                    loading.show();\n                    var userId = getParameterByName('userId');\n                    ApiClient.deleteUserImage(userId, 'primary').then(function () {\n                        loading.hide();\n                        reloadUser(view);\n                    });\n                });\n            });\n        });\n        view.querySelector('#btnAddImage').addEventListener('click', function (evt) {\n            view.querySelector('#uploadImage').click();\n        });\n        view.querySelector('#uploadImage').addEventListener('change', function (evt) {\n            setFiles(view, evt.target.files);\n        });\n    };\n});\n"]}