{"version":3,"sources":["controllers/user/menu.js"],"names":["define","appHost","connectionManager","layoutManager","view","params","querySelector","addEventListener","Dashboard","logout","selectServer","window","NativeShell","openClientSettings","userId","getCurrentUserId","page","this","setAttribute","AppHost","supports","classList","remove","add","ApiClient","getUser","then","user","innerHTML","Name","Policy","IsAdministrator","require","autoFocuser","autoFocus"],"mappings":"AAAA,aAAAA,OAAO,CAAC,UAAW,oBAAqB,gBAAiB,gBAAiB,gBAAgB,SAASC,QAASC,kBAAmBC,eAG3H,OAAO,SAASC,KAAMC,QAClBD,KAAKE,cAAc,cAAcC,iBAAiB,SAAS,WACvDC,UAAUC,YAGdL,KAAKE,cAAc,iBAAiBC,iBAAiB,SAAS,WAC1DC,UAAUE,kBAGdN,KAAKE,cAAc,mBAAmBC,iBAAiB,SAAS,WAC5DI,OAAOC,YAAYC,wBAGvBT,KAAKG,iBAAiB,YAAY,WAE9B,IAAIO,OAAST,OAAOS,QAAUN,UAAUO,mBACpCC,KAAOC,KAEXD,KAAKV,cAAc,iBAAiBY,aAAa,OAAQ,yBAA2BJ,QACpFE,KAAKV,cAAc,0BAA0BY,aAAa,OAAQ,oCAAsCJ,QACxGE,KAAKV,cAAc,uBAAuBY,aAAa,OAAQ,iCAAmCJ,QAClGE,KAAKV,cAAc,2BAA2BY,aAAa,OAAQ,qCAAuCJ,QAC1GE,KAAKV,cAAc,2BAA2BY,aAAa,OAAQ,sCAAwCJ,QAEvGH,OAAOC,aAAeD,OAAOC,YAAYO,QAAQC,SAAS,kBAC1DJ,KAAKV,cAAc,mBAAmBe,UAAUC,OAAO,QAEvDN,KAAKV,cAAc,mBAAmBe,UAAUE,IAAI,QAGpDtB,QAAQmB,SAAS,eACjBJ,KAAKV,cAAc,iBAAiBe,UAAUC,OAAO,QAErDN,KAAKV,cAAc,iBAAiBe,UAAUE,IAAI,QAIlDlB,OAAOS,QAAUT,OAAOS,SAAWN,UAAUO,mBAC7CC,KAAKV,cAAc,gBAAgBe,UAAUE,IAAI,QACjDP,KAAKV,cAAc,iBAAiBe,UAAUE,IAAI,SAGtDC,UAAUC,QAAQX,QAAQY,MAAK,SAASC,MACpCX,KAAKV,cAAc,mBAAmBsB,UAAYD,KAAKE,KAClDF,KAAKG,OAAOC,iBACbf,KAAKV,cAAc,iBAAiBe,UAAUE,IAAI,WAI1DS,QAAQ,CAAC,gBAAgB,SAAUC,aAC/BA,YAAYC,UAAU9B","file":"menu.js","sourcesContent":["define(['apphost', 'connectionManager', 'layoutManager', 'listViewStyle', 'emby-button'], function(appHost, connectionManager, layoutManager) {\n    'use strict';\n\n    return function(view, params) {\n        view.querySelector('.btnLogout').addEventListener('click', function() {\n            Dashboard.logout();\n        });\n\n        view.querySelector('.selectServer').addEventListener('click', function () {\n            Dashboard.selectServer();\n        });\n\n        view.querySelector('.clientSettings').addEventListener('click', function () {\n            window.NativeShell.openClientSettings();\n        });\n\n        view.addEventListener('viewshow', function() {\n            // this page can also be used by admins to change user preferences from the user edit page\n            var userId = params.userId || Dashboard.getCurrentUserId();\n            var page = this;\n\n            page.querySelector('.lnkMyProfile').setAttribute('href', 'myprofile.html?userId=' + userId);\n            page.querySelector('.lnkDisplayPreferences').setAttribute('href', 'mypreferencesdisplay.html?userId=' + userId);\n            page.querySelector('.lnkHomePreferences').setAttribute('href', 'mypreferenceshome.html?userId=' + userId);\n            page.querySelector('.lnkPlaybackPreferences').setAttribute('href', 'mypreferencesplayback.html?userId=' + userId);\n            page.querySelector('.lnkSubtitlePreferences').setAttribute('href', 'mypreferencessubtitles.html?userId=' + userId);\n\n            if (window.NativeShell && window.NativeShell.AppHost.supports('clientsettings')) {\n                page.querySelector('.clientSettings').classList.remove('hide');\n            } else {\n                page.querySelector('.clientSettings').classList.add('hide');\n            }\n\n            if (appHost.supports('multiserver')) {\n                page.querySelector('.selectServer').classList.remove('hide');\n            } else {\n                page.querySelector('.selectServer').classList.add('hide');\n            }\n\n            // hide the actions if user preferences are being edited for a different user\n            if (params.userId && params.userId !== Dashboard.getCurrentUserId) {\n                page.querySelector('.userSection').classList.add('hide');\n                page.querySelector('.adminSection').classList.add('hide');\n            }\n\n            ApiClient.getUser(userId).then(function(user) {\n                page.querySelector('.headerUsername').innerHTML = user.Name;\n                if (!user.Policy.IsAdministrator) {\n                    page.querySelector('.adminSection').classList.add('hide');\n                }\n            });\n\n            require(['autoFocuser'], function (autoFocuser) {\n                autoFocuser.autoFocus(view);\n            });\n        });\n    };\n});\n"]}