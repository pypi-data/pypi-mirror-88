{"version":3,"sources":["controllers/auth/addserver.js"],"names":["define","appSettings","loading","browser","globalize","handleConnectionResult","page","result","hide","State","apiClient","ApiClient","Dashboard","onServerChanged","getCurrentUserId","accessToken","navigate","Servers","Id","alert","message","translate","title","view","params","querySelector","addEventListener","onServerSubmit","e","submitServer","show","host","value","ConnectionManager","connectToAddress","enableAutoLogin","then","preventDefault","goBack","require","appRouter","back","autoFocuser","autoFocus"],"mappings":"AAAA,aAAAA,OAAO,CAAC,cAAe,UAAW,UAAW,YAAa,gBAAgB,SAASC,YAAaC,QAASC,QAASC,WAG9G,SAASC,uBAAuBC,KAAMC,QAElC,OADAL,QAAQM,OACAD,OAAOE,OACX,IAAK,WACD,IAAIC,UAAYH,OAAOI,UACvBC,UAAUC,gBAAgBH,UAAUI,mBAAoBJ,UAAUK,cAAeL,WACjFE,UAAUI,SAAS,aACnB,MACJ,IAAK,eACDJ,UAAUI,SAAS,uBAAyBT,OAAOU,QAAQ,GAAGC,IAAI,EAAO,QACzE,MACJ,IAAK,kBACDN,UAAUI,SAAS,qBAAqB,EAAO,QAC/C,MACJ,IAAK,qBACDJ,UAAUO,MAAM,CACZC,QAAShB,UAAUiB,UAAU,qBAAsB,6FAEvD,MACJ,IAAK,cACDT,UAAUO,MAAM,CACZC,QAAShB,UAAUiB,UAAU,kCAC7BC,MAAOlB,UAAUiB,UAAU,8BAmB3C,OAAO,SAASE,KAAMC,QAClBD,KAAKE,cAAc,kBAAkBC,iBAAiB,UAOtD,SAASC,eAAeC,GAGpB,OAzBR,SAASC,aAAavB,MAClBJ,QAAQ4B,OACR,IAAIC,KAAOzB,KAAKmB,cAAc,kBAAkBO,MAChDC,kBAAkBC,iBAAiBH,KAAM,CACrCI,gBAAiBlC,YAAYkC,oBAC9BC,MAAK,SAAS7B,QACbF,uBAAuBC,EAAMC,WAC9B,WACCF,uBAAuBC,EAAM,CACzBG,MAAO,mBAcXoB,CAAaN,MACbK,EAAES,kBACK,KATXd,KAAKE,cAAc,cAAcC,iBAAiB,SAYlD,SAASY,SACLC,QAAQ,CAAC,cAAc,SAASC,WAC5BA,UAAUC,aAZlBF,QAAQ,CAAC,gBAAgB,SAAUG,aAC/BA,YAAYC,UAAUpB","file":"addserver.js","sourcesContent":["define(['appSettings', 'loading', 'browser', 'globalize', 'emby-button'], function(appSettings, loading, browser, globalize) {\n    'use strict';\n\n    function handleConnectionResult(page, result) {\n        loading.hide();\n        switch (result.State) {\n            case 'SignedIn':\n                var apiClient = result.ApiClient;\n                Dashboard.onServerChanged(apiClient.getCurrentUserId(), apiClient.accessToken(), apiClient);\n                Dashboard.navigate('home.html');\n                break;\n            case 'ServerSignIn':\n                Dashboard.navigate('login.html?serverid=' + result.Servers[0].Id, false, 'none');\n                break;\n            case 'ServerSelection':\n                Dashboard.navigate('selectserver.html', false, 'none');\n                break;\n            case 'ServerUpdateNeeded':\n                Dashboard.alert({\n                    message: globalize.translate('ServerUpdateNeeded', '<a href=\"https://github.com/jellyfin/jellyfin\">https://github.com/jellyfin/jellyfin</a>')\n                });\n                break;\n            case 'Unavailable':\n                Dashboard.alert({\n                    message: globalize.translate('MessageUnableToConnectToServer'),\n                    title: globalize.translate('HeaderConnectionFailure')\n                });\n        }\n    }\n\n    function submitServer(page) {\n        loading.show();\n        var host = page.querySelector('#txtServerHost').value;\n        ConnectionManager.connectToAddress(host, {\n            enableAutoLogin: appSettings.enableAutoLogin()\n        }).then(function(result) {\n            handleConnectionResult(page, result);\n        }, function() {\n            handleConnectionResult(page, {\n                State: 'Unavailable'\n            });\n        });\n    }\n\n    return function(view, params) {\n        view.querySelector('.addServerForm').addEventListener('submit', onServerSubmit);\n        view.querySelector('.btnCancel').addEventListener('click', goBack);\n\n        require(['autoFocuser'], function (autoFocuser) {\n            autoFocuser.autoFocus(view);\n        });\n\n        function onServerSubmit(e) {\n            submitServer(view);\n            e.preventDefault();\n            return false;\n        }\n\n        function goBack() {\n            require(['appRouter'], function(appRouter) {\n                appRouter.back();\n            });\n        }\n    };\n});\n"]}