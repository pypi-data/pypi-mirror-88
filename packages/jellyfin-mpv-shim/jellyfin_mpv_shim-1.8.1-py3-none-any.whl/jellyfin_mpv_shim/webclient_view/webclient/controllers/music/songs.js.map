{"version":3,"sources":["controllers/music/songs.js"],"names":["define","events","libraryBrowser","imageLoader","listView","loading","userSettings","globalize","view","params","tabContent","getPageData","context","key","getSavedQueryKey","pageData","data","query","SortBy","SortOrder","IncludeItemTypes","Recursive","Fields","StartIndex","ImageTypeLimit","EnableImageTypes","libraryPageSize","ParentId","topParentId","loadSavedQueryValues","getQuery","savedQueryKey","reloadItems","page","show","isLoading","ApiClient","getItems","Dashboard","getCurrentUserId","then","result","onNextPageClick","Limit","onPreviousPageClick","Math","max","i","length","window","scrollTo","pagingHtml","getQueryPagingHtml","startIndex","limit","totalRecordCount","TotalRecordCount","showLimit","updatePageSizeSetting","addLayoutButton","sortButton","filterButton","html","getListViewHtml","items","Items","action","smallIcon","artist","addToListButton","elems","querySelectorAll","innerHTML","addEventListener","itemsContainer","querySelector","lazyChildren","saveQueryValues","hide","require","autoFocuser","autoFocus","self","this","showFilterMenu","_ref","filterDialog","filterDialogFactory","default","mode","serverId","on","getCurrentViewStyle","initPage","e","showSortMenu","name","translate","id","callback","button","target","renderTab","destroy"],"mappings":"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","file":"songs.js","sourcesContent":["define(['events', 'libraryBrowser', 'imageLoader', 'listView', 'loading', 'userSettings', 'globalize', 'emby-itemscontainer'], function (events, libraryBrowser, imageLoader, listView, loading, userSettings, globalize) {\n    'use strict';\n\n    return function (view, params, tabContent) {\n        function getPageData(context) {\n            var key = getSavedQueryKey(context);\n            var pageData = data[key];\n\n            if (!pageData) {\n                pageData = data[key] = {\n                    query: {\n                        SortBy: 'Album,SortName',\n                        SortOrder: 'Ascending',\n                        IncludeItemTypes: 'Audio',\n                        Recursive: true,\n                        Fields: 'AudioInfo,ParentId',\n                        StartIndex: 0,\n                        ImageTypeLimit: 1,\n                        EnableImageTypes: 'Primary'\n                    }\n                };\n\n                if (userSettings.libraryPageSize() > 0) {\n                    pageData.query['Limit'] = userSettings.libraryPageSize();\n                }\n\n                pageData.query.ParentId = params.topParentId;\n                libraryBrowser.loadSavedQueryValues(key, pageData.query);\n            }\n\n            return pageData;\n        }\n\n        function getQuery(context) {\n            return getPageData(context).query;\n        }\n\n        function getSavedQueryKey(context) {\n            if (!context.savedQueryKey) {\n                context.savedQueryKey = libraryBrowser.getSavedQueryKey('songs');\n            }\n\n            return context.savedQueryKey;\n        }\n\n        function reloadItems(page) {\n            loading.show();\n            isLoading = true;\n            var query = getQuery(page);\n            ApiClient.getItems(Dashboard.getCurrentUserId(), query).then(function (result) {\n                function onNextPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    if (userSettings.libraryPageSize() > 0) {\n                        query.StartIndex += query.Limit;\n                    }\n                    reloadItems(tabContent);\n                }\n\n                function onPreviousPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    if (userSettings.libraryPageSize() > 0) {\n                        query.StartIndex = Math.max(0, query.StartIndex - query.Limit);\n                    }\n                    reloadItems(tabContent);\n                }\n\n                window.scrollTo(0, 0);\n                var i;\n                var length;\n                var pagingHtml = libraryBrowser.getQueryPagingHtml({\n                    startIndex: query.StartIndex,\n                    limit: query.Limit,\n                    totalRecordCount: result.TotalRecordCount,\n                    showLimit: false,\n                    updatePageSizeSetting: false,\n                    addLayoutButton: false,\n                    sortButton: false,\n                    filterButton: false\n                });\n                var html = listView.getListViewHtml({\n                    items: result.Items,\n                    action: 'playallfromhere',\n                    smallIcon: true,\n                    artist: true,\n                    addToListButton: true\n                });\n                var elems = tabContent.querySelectorAll('.paging');\n\n                for (i = 0, length = elems.length; i < length; i++) {\n                    elems[i].innerHTML = pagingHtml;\n                }\n\n                elems = tabContent.querySelectorAll('.btnNextPage');\n                for (i = 0, length = elems.length; i < length; i++) {\n                    elems[i].addEventListener('click', onNextPageClick);\n                }\n\n                elems = tabContent.querySelectorAll('.btnPreviousPage');\n                for (i = 0, length = elems.length; i < length; i++) {\n                    elems[i].addEventListener('click', onPreviousPageClick);\n                }\n\n                var itemsContainer = tabContent.querySelector('.itemsContainer');\n                itemsContainer.innerHTML = html;\n                imageLoader.lazyChildren(itemsContainer);\n                libraryBrowser.saveQueryValues(getSavedQueryKey(page), query);\n                loading.hide();\n                isLoading = false;\n\n                require(['autoFocuser'], function (autoFocuser) {\n                    autoFocuser.autoFocus(page);\n                });\n            });\n        }\n\n        var self = this;\n        var data = {};\n        var isLoading = false;\n\n        self.showFilterMenu = function () {\n            require(['components/filterdialog/filterdialog'], function ({default: filterDialogFactory}) {\n                var filterDialog = new filterDialogFactory({\n                    query: getQuery(tabContent),\n                    mode: 'songs',\n                    serverId: ApiClient.serverId()\n                });\n                events.on(filterDialog, 'filterchange', function () {\n                    getQuery(tabContent).StartIndex = 0;\n                    reloadItems(tabContent);\n                });\n                filterDialog.show();\n            });\n        };\n\n        self.getCurrentViewStyle = function () {\n            return getPageData(tabContent).view;\n        };\n\n        function initPage(tabContent) {\n            tabContent.querySelector('.btnFilter').addEventListener('click', function () {\n                self.showFilterMenu();\n            });\n            tabContent.querySelector('.btnSort').addEventListener('click', function (e) {\n                libraryBrowser.showSortMenu({\n                    items: [{\n                        name: globalize.translate('OptionTrackName'),\n                        id: 'Name'\n                    }, {\n                        name: globalize.translate('OptionAlbum'),\n                        id: 'Album,SortName'\n                    }, {\n                        name: globalize.translate('OptionAlbumArtist'),\n                        id: 'AlbumArtist,Album,SortName'\n                    }, {\n                        name: globalize.translate('OptionArtist'),\n                        id: 'Artist,Album,SortName'\n                    }, {\n                        name: globalize.translate('OptionDateAdded'),\n                        id: 'DateCreated,SortName'\n                    }, {\n                        name: globalize.translate('OptionDatePlayed'),\n                        id: 'DatePlayed,SortName'\n                    }, {\n                        name: globalize.translate('OptionPlayCount'),\n                        id: 'PlayCount,SortName'\n                    }, {\n                        name: globalize.translate('OptionReleaseDate'),\n                        id: 'PremiereDate,AlbumArtist,Album,SortName'\n                    }, {\n                        name: globalize.translate('OptionRuntime'),\n                        id: 'Runtime,AlbumArtist,Album,SortName'\n                    }],\n                    callback: function () {\n                        getQuery(tabContent).StartIndex = 0;\n                        reloadItems(tabContent);\n                    },\n                    query: getQuery(tabContent),\n                    button: e.target\n                });\n            });\n        }\n\n        initPage(tabContent);\n\n        self.renderTab = function () {\n            reloadItems(tabContent);\n        };\n\n        self.destroy = function () {};\n    };\n});\n"]}