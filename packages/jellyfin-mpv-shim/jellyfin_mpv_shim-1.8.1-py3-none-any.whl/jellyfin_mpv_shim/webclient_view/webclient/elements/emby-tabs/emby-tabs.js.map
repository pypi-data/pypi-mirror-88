{"version":3,"sources":["elements/emby-tabs/emby-tabs.js"],"names":["define","dom","scroller","browser","layoutManager","focusManager","EmbyTabs","Object","create","HTMLDivElement","prototype","activeButtonClass","buttonClass","setActiveTabButton","tabs","newButton","oldButton","animate","classList","add","triggerBeforeTabChange","index","previousIndex","dispatchEvent","CustomEvent","detail","selectedTabIndex","removeActivePanelClass","tabPanel","remove","newPanel","fadeInRight","elem","keyframes","opacity","transform","mobile","offset","duration","iterations","easing","onClick","e","this","current","querySelector","tabButton","parentWithClass","target","parseInt","getAttribute","setTimeout","toCenter","getSelectedTabButton","getSibling","method","sibling","contains","createdCallback","addEventListener","passive","focus","selected","autoFocus","refresh","reload","attachedCallback","initScroller","contentScrollSlider","horizontal","itemNav","mouseDragging","touchDragging","slidee","smart","releaseSwing","scrollBy","speed","elasticBounds","dragHandle","dynamicHandle","clickBar","hiddenScroll","requireAnimation","safari","allowNativeSmoothScroll","init","currentIndex","newTabButton","querySelectorAll","readyFired","detachedCallback","destroy","removeEventListener","selectedIndex","triggerEvent","tabButtons","currentTabButton","call","selectNext","selectPrevious","triggerTabChange","setTabEnabled","enabled","btn","document","registerElement","extends"],"mappings":"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","file":"emby-tabs.js","sourcesContent":["define(['dom', 'scroller', 'browser', 'layoutManager', 'focusManager', 'webcomponents', 'css!./emby-tabs', 'scrollStyles'], function (dom, scroller, browser, layoutManager, focusManager) {\n    'use strict';\n\n    var EmbyTabs = Object.create(HTMLDivElement.prototype);\n    var buttonClass = 'emby-tab-button';\n    var activeButtonClass = buttonClass + '-active';\n\n    function setActiveTabButton(tabs, newButton, oldButton, animate) {\n\n        newButton.classList.add(activeButtonClass);\n    }\n\n    function getTabPanel(tabs, index) {\n\n        return null;\n    }\n\n    function removeActivePanelClass(tabs, index) {\n        var tabPanel = getTabPanel(tabs, index);\n        if (tabPanel) {\n            tabPanel.classList.remove('is-active');\n        }\n    }\n\n    function addActivePanelClass(tabs, index) {\n        var tabPanel = getTabPanel(tabs, index);\n        if (tabPanel) {\n            tabPanel.classList.add('is-active');\n        }\n    }\n\n    function fadeInRight(elem) {\n\n        var pct = browser.mobile ? '4%' : '0.5%';\n\n        var keyframes = [\n            { opacity: '0', transform: 'translate3d(' + pct + ', 0, 0)', offset: 0 },\n            { opacity: '1', transform: 'none', offset: 1 }];\n\n        elem.animate(keyframes, {\n            duration: 160,\n            iterations: 1,\n            easing: 'ease-out'\n        });\n    }\n\n    function triggerBeforeTabChange(tabs, index, previousIndex) {\n\n        tabs.dispatchEvent(new CustomEvent('beforetabchange', {\n            detail: {\n                selectedTabIndex: index,\n                previousIndex: previousIndex\n            }\n        }));\n        if (previousIndex != null && previousIndex !== index) {\n            removeActivePanelClass(tabs, previousIndex);\n        }\n\n        var newPanel = getTabPanel(tabs, index);\n\n        if (newPanel) {\n            // animate new panel ?\n            if (newPanel.animate) {\n                fadeInRight(newPanel);\n            }\n\n            newPanel.classList.add('is-active');\n        }\n    }\n\n    function onClick(e) {\n\n        var tabs = this;\n\n        var current = tabs.querySelector('.' + activeButtonClass);\n        var tabButton = dom.parentWithClass(e.target, buttonClass);\n\n        if (tabButton && tabButton !== current) {\n\n            if (current) {\n                current.classList.remove(activeButtonClass);\n            }\n\n            var previousIndex = current ? parseInt(current.getAttribute('data-index')) : null;\n\n            setActiveTabButton(tabs, tabButton, current, true);\n\n            var index = parseInt(tabButton.getAttribute('data-index'));\n\n            triggerBeforeTabChange(tabs, index, previousIndex);\n\n            // If toCenter is called syncronously within the click event, it sometimes ends up canceling it\n            setTimeout(function () {\n\n                tabs.selectedTabIndex = index;\n\n                tabs.dispatchEvent(new CustomEvent('tabchange', {\n                    detail: {\n                        selectedTabIndex: index,\n                        previousIndex: previousIndex\n                    }\n                }));\n            }, 120);\n\n            if (tabs.scroller) {\n                tabs.scroller.toCenter(tabButton, false);\n            }\n\n        }\n    }\n\n    function initScroller(tabs) {\n\n        if (tabs.scroller) {\n            return;\n        }\n\n        var contentScrollSlider = tabs.querySelector('.emby-tabs-slider');\n        if (contentScrollSlider) {\n            tabs.scroller = new scroller(tabs, {\n                horizontal: 1,\n                itemNav: 0,\n                mouseDragging: 1,\n                touchDragging: 1,\n                slidee: contentScrollSlider,\n                smart: true,\n                releaseSwing: true,\n                scrollBy: 200,\n                speed: 120,\n                elasticBounds: 1,\n                dragHandle: 1,\n                dynamicHandle: 1,\n                clickBar: 1,\n                hiddenScroll: true,\n\n                // In safari the transform is causing the headers to occasionally disappear or flicker\n                requireAnimation: !browser.safari,\n                allowNativeSmoothScroll: true\n            });\n            tabs.scroller.init();\n        } else {\n            tabs.classList.add('scrollX');\n            tabs.classList.add('hiddenScrollX');\n            tabs.classList.add('smoothScrollX');\n        }\n    }\n\n    EmbyTabs.createdCallback = function () {\n\n        if (this.classList.contains('emby-tabs')) {\n            return;\n        }\n        this.classList.add('emby-tabs');\n        this.classList.add('focusable');\n\n        dom.addEventListener(this, 'click', onClick, {\n            passive: true\n        });\n    };\n\n    EmbyTabs.focus = function () {\n\n        var selected = this.querySelector('.' + activeButtonClass);\n\n        if (selected) {\n            focusManager.focus(selected);\n        } else {\n            focusManager.autoFocus(this);\n        }\n    };\n\n    EmbyTabs.refresh = function () {\n\n        if (this.scroller) {\n            this.scroller.reload();\n        }\n    };\n\n    EmbyTabs.attachedCallback = function () {\n\n        initScroller(this);\n\n        var current = this.querySelector('.' + activeButtonClass);\n        var currentIndex = current ? parseInt(current.getAttribute('data-index')) : parseInt(this.getAttribute('data-index') || '0');\n\n        if (currentIndex !== -1) {\n\n            this.selectedTabIndex = currentIndex;\n\n            var tabButtons = this.querySelectorAll('.' + buttonClass);\n\n            var newTabButton = tabButtons[currentIndex];\n\n            if (newTabButton) {\n                setActiveTabButton(this, newTabButton, current, false);\n            }\n        }\n\n        if (!this.readyFired) {\n            this.readyFired = true;\n            this.dispatchEvent(new CustomEvent('ready', {}));\n        }\n    };\n\n    EmbyTabs.detachedCallback = function () {\n\n        if (this.scroller) {\n            this.scroller.destroy();\n            this.scroller = null;\n        }\n\n        dom.removeEventListener(this, 'click', onClick, {\n            passive: true\n        });\n    };\n\n    function getSelectedTabButton(elem) {\n\n        return elem.querySelector('.' + activeButtonClass);\n    }\n\n    EmbyTabs.selectedIndex = function (selected, triggerEvent) {\n\n        var tabs = this;\n\n        if (selected == null) {\n\n            return tabs.selectedTabIndex || 0;\n        }\n\n        var current = tabs.selectedIndex();\n\n        tabs.selectedTabIndex = selected;\n\n        var tabButtons = tabs.querySelectorAll('.' + buttonClass);\n\n        if (current === selected || triggerEvent === false) {\n\n            triggerBeforeTabChange(tabs, selected, current);\n\n            tabs.dispatchEvent(new CustomEvent('tabchange', {\n                detail: {\n                    selectedTabIndex: selected\n                }\n            }));\n\n            var currentTabButton = tabButtons[current];\n            setActiveTabButton(tabs, tabButtons[selected], currentTabButton, false);\n\n            if (current !== selected && currentTabButton) {\n                currentTabButton.classList.remove(activeButtonClass);\n            }\n\n        } else {\n\n            onClick.call(tabs, {\n                target: tabButtons[selected]\n            });\n            //tabButtons[selected].click();\n        }\n    };\n\n    function getSibling(elem, method) {\n\n        var sibling = elem[method];\n\n        while (sibling) {\n            if (sibling.classList.contains(buttonClass)) {\n\n                if (!sibling.classList.contains('hide')) {\n                    return sibling;\n                }\n            }\n\n            sibling = sibling[method];\n        }\n\n        return null;\n    }\n\n    EmbyTabs.selectNext = function () {\n\n        var current = getSelectedTabButton(this);\n\n        var sibling = getSibling(current, 'nextSibling');\n\n        if (sibling) {\n            onClick.call(this, {\n                target: sibling\n            });\n        }\n    };\n\n    EmbyTabs.selectPrevious = function () {\n\n        var current = getSelectedTabButton(this);\n\n        var sibling = getSibling(current, 'previousSibling');\n\n        if (sibling) {\n            onClick.call(this, {\n                target: sibling\n            });\n        }\n    };\n\n    EmbyTabs.triggerBeforeTabChange = function (selected) {\n\n        var tabs = this;\n\n        triggerBeforeTabChange(tabs, tabs.selectedIndex());\n    };\n\n    EmbyTabs.triggerTabChange = function (selected) {\n\n        var tabs = this;\n\n        tabs.dispatchEvent(new CustomEvent('tabchange', {\n            detail: {\n                selectedTabIndex: tabs.selectedIndex()\n            }\n        }));\n    };\n\n    EmbyTabs.setTabEnabled = function (index, enabled) {\n\n        var tabs = this;\n        var btn = this.querySelector('.emby-tab-button[data-index=\"' + index + '\"]');\n\n        if (enabled) {\n            btn.classList.remove('hide');\n        } else {\n            btn.classList.remove('add');\n        }\n    };\n\n    document.registerElement('emby-tabs', {\n        prototype: EmbyTabs,\n        extends: 'div'\n    });\n});\n"]}